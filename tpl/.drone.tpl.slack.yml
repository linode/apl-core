kind: pipeline
type: kubernetes
name: default

workspace:
  path: /home/app/stack/env

concurrency:
  limit: 1

trigger:
  branch:
    - master
  event:
    - push

environment:
  IN_DOCKER: '1'

steps:
  - name: slack-start
    image: plugins/slack
    environment:
      CLUSTER: __CLUSTER
      CLOUD: __CLOUD
    settings:
      webhook: __WEBHOOK
      channel: mon-otomi
      username: Drone
      template: >
        Started syncing cluster '__CLOUD-__CLUSTER' for customer '__CUSTOMER'...
        Drone: <{{ build.link }}>

  - name: prepare-env
    image: alpine:latest
    commands:
      - chmod -R a+w env

  - name: test
    image: otomi/core:__IMAGE_TAG
    pull: always
    environment:
      CLUSTER: __CLUSTER
      CLOUD: __CLOUD
      GCLOUD_SERVICE_KEY:
        from_secret: GCLOUD_SERVICE_KEY
    depends_on:
      - prepare-env
    commands:
      - bash -c "kubectl -n shared delete po -l app.kubernetes.io/instance=otomi-api; kubectl -n shared delete po -l app.kubernetes.io/instance=otomi-console; cd ..; bin/otomi test"

  - name: deploy
    image: otomi/core:__IMAGE_TAG
    pull: always
    environment:
      CLUSTER: __CLUSTER
      CLOUD: __CLOUD
      GCLOUD_SERVICE_KEY:
        from_secret: GCLOUD_SERVICE_KEY
    commands:
      - cd .. && bin/otomi deploy
    depends_on:
      - test

  - name: slack-__CUSTOMER
    image: plugins/slack
    environment:
      CLUSTER: __CLUSTER
      CLOUD: __CLOUD
    depends_on:
      - deploy
    settings:
      webhook: __WEBHOOK
      channel: mon-otomi
      username: Drone
      template: >
        {{#success build.status}}
          Completed syncing cluster '__CLOUD-__CLUSTER' for customer '__CUSTOMER' :)
        {{else}}
          Failed syncing cluster '__CLOUD-__CLUSTER' for customer '__CUSTOMER' ;( Please take a look.
        {{/success}}

        Drone: <{{ build.link }}>
    when:
      status:
        - success
        - failure
