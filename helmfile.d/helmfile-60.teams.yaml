bases:
  - snippets/defaults.yaml
---
bases:
  - snippets/env.gotmpl
---
bases:
  - snippets/derived.gotmpl
---
{{- $v := .Values }}
{{- $a := $v.apps }}
{{- $tc := $v.teamConfig }}
{{- $coreTeamServices := list }}
{{- range $s := $v.teamApps }}
  {{- if and ($a | get $s.name | get "enabled" true) (hasKey $s "ingress") }}
    {{- range $ing := $s.ingress }}
      {{- $svc := merge $ing (dict "isCore" true "name" $s.name "ownHost" ($s | get "ownHost" false)) }}
      {{- $coreTeamServices = append $coreTeamServices $svc }}
    {{- end }}
  {{- end }}
{{- end }}
{{- $cm := $a | get "cert-manager" }}
{{- $po := $a | get "prometheus" }}
{{- $slackTpl := tpl (readFile "../helmfile.d/snippets/alertmanager/slack.gotmpl") $v | toString }}
{{- $opsgenieTpl := tpl (readFile "../helmfile.d/snippets/alertmanager/opsgenie.gotmpl") $v | toString }}

releases:
{{- range $teamId, $team := omit $tc "admin" }} 
  {{- $teamServices := ($team | get "services" list) }}
  {{- $domain := printf "team-%s.%s" $teamId ($v.cluster | get "domainSuffix" nil) }}
  {{- $appsDomain := printf "apps.%s" $domain }}
  {{- $grafanaDomain := printf "grafana.%s" $domain }}
  {{- $azure := $team | get "azure" dict }}
  - name: team-ns-{{ $teamId }}
    installed: true
    namespace: team-{{ $teamId }}
    chart: ../charts/team-ns
    labels:
      tag: teams
      ingress: "true"
      team: {{ $teamId }}
    values:
      - cluster: {{- $v.cluster | toYaml | nindent 10 }}
        apps: {{- $a | toYaml | nindent 10 }}
        otomi: {{- $v.otomi | toYaml | nindent 10 }}
        oidc: {{- $v | get "oidc" dict | toYaml | nindent 10 }}
        domain: {{ $domain }}
      - {{- omit $team "apps" | toYaml | nindent 8 }}
        teamId: {{ $teamId }}
      - services: {{- concat $coreTeamServices $teamServices | toYaml | nindent 10 }}
  {{- if and ($a | get "prometheus.enabled" false) $v.otomi.isMultitenant }}
    {{- if gt (len $teamServices) 0 }}
      - name: blackbox
        svc: prometheus-blackbox-exporter
        port: 9115
    {{- end }}
  - name: prometheus-{{ $teamId }}
    installed: true
    namespace: team-{{ $teamId }}
    chart: ../charts/prometheus-operator
    labels:
      tag: teams
      team: {{ $teamId }}
    values:
      - ../values/prometheus-operator/prometheus-operator.gotmpl
      - ../values/prometheus-operator/prometheus-operator-team.gotmpl
      - nameOverride: {{ $teamId }}-po
        fullnameOverride: {{ $teamId }}-po
        {{- if or ($v | get "alerts" nil) ($v | get "home" nil) ($team | get "alerts" nil) }}
        alertmanager:
          namespaceOverride: team-{{ $teamId }}
          alertmanagerSpec:
            externalUrl: https://{{ $appsDomain }}/alertmanager
          config: {{- tpl (readFile "../helmfile.d/snippets/alertmanager.gotmpl") (dict "instance" $team "root" $v "slackTpl" $slackTpl "opsgenieTpl" $opsgenieTpl) | nindent 12 }}
        defaultRules:
          appNamespacesTarget: team-{{ $teamId }}
        {{- else }}
        defaultRules:
          rules:
            alertmanager: false
        enabled: false
        {{- end }}
        prometheus:
          namespaceOverride: team-{{ $teamId }}
          prometheusSpec:
            externalUrl: https://{{ $appsDomain }}/prometheus
            ruleNamespaceSelector:
              matchLabels:
                name: team-{{ $teamId }}
            podMonitorNamespaceSelector:
              matchLabels:
                name: team-{{ $teamId }}
            serviceMonitorNamespaceSelector:
              matchLabels:
                name: team-{{ $teamId }}
            probeNamespaceSelector:
              matchLabels:
                name: team-{{ $teamId }}
        {{- if gt (len .services) 0 }}
            additionalScrapeConfigs:
          {{- tpl (readFile "../helmfile.d/snippets/blackbox-targets.gotmpl") (dict "teamId" $teamId "namespace" (printf "team-%s" $teamId) "services" $teamServices "domain" $domain) | nindent 12 }}
        {{- end }}
        additionalPrometheusRules:
          - name: blackbox
            {{- readFile "../values/prometheus-operator/rules/blackbox.yaml" | nindent 12 }}
        grafana:
          namespaceOverride: team-{{ $teamId }}
          nameOverride: {{ $teamId }}-po-grafana
          fullnameOverride: {{ $teamId }}-po-grafana
          grafana.ini:
            server:
              root_url: https://{{ $grafanaDomain }}
          sidecar:
            datasources:
              defaultDatasourceEnabled: false
          additionalDataSources:
            - name: Prometheus
              editable: false
              type: prometheus
              access: proxy
              url: http://po-prometheus.monitoring:9090
              isDefault: true
            - name: Loki
              editable: false
              type: loki
              access: proxy
              url: http://loki.monitoring:11811
              basicAuth: true
              basicAuthUser: {{ $teamId }}
              basicAuthPassword: {{ $team.password }}
    {{- if ($team | get "azureMonitor" ($v | get "azure.monitor" nil)) }}
            - {{- tpl (readFile "../helmfile.d/snippets/azure-monitor.gotmpl") ($team | get "azureMonitor" ($v | get "azure.monitor")) | toString | nindent 14 }}
    {{- end }}
    {{- if has "msteams" ($team | get "alerts.receivers" list) }}
  - name: prometheus-msteams-{{ $teamId }}
    installed: true
    namespace: team-{{ $teamId }}
    chart: ../charts/prometheus-msteams
    labels:
      tag: teams
      team: {{ $teamId }}
    values:
      - ../values/prometheus-msteams/prometheus-msteams.gotmpl
      - commonLabels:
          team: {{ $teamId }}
        metrics:
          serviceMonitor:
            additionalLabels:
              release: prometheus-{{ $teamId }}
        connectors:
          - high_priority_channel: {{ $team | get "msteams.highPrio" }}
          - low_priority_channel: {{ $team | get "msteams.lowPrio" }}
    {{- end }}
  - name: grafana-dashboards-{{ $teamId }}
    installed: true
    namespace: team-{{ $teamId }}
    chart: ../charts/grafana-dashboards
    labels:
      tag: teams
      team: {{ $teamId }}
    values:
      - cluster: {{- $v.cluster | toYaml | nindent 10 }}
        team: {{ $teamId }}
        folders:
          - k8s
          # - istio-teams
          {{- if and (eq $v.cluster.provider "azure") ($team | get "azureMonitor" ($v | get "azure.monitor" nil)) }}
          - azure{{ end }}
  {{- end }}
  {{- range $job := $team | get "jobs" list }}
  - name: job-{{ $teamId }}-{{ $job.name }}
    installed: {{ $job.enabled }}
    namespace: team-{{ $teamId }}
    chart: ../charts/jobs
    labels:
      group: jobs
      tag: teams
      team: {{ $teamId }}
    hooks:
      - events: ["presync"]
        showlogs: true
        command: ../bin/job-presync.sh
        args:
          - job-{{ $teamId }}-{{ $job.name }}
          {{- if hasKey $job "runPolicy" }}
          - "{{ $job.runPolicy }}"    
          {{- end }}
    values:
      - teamSecrets: {{- $team | get "secrets" nil | toYaml | nindent 10 }}
        teamId: {{ $teamId }}
      - {{- $job | toYaml | nindent 8 }}
    {{- end }}
  {{- end }}