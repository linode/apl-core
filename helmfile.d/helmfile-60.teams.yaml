bases:
  - snippets/defaults.gotmpl
---
{{- $v := .Environment.Values }}
{{- $tc := $v.teamConfig }}
{{- $coreTeamServices := list }}{{- range $s := $tc.services }}{{ $coreTeamServices = append $coreTeamServices (merge $s (dict "isCore" true)) }}{{ end }}
{{- $c := $v.charts }}
{{- $cm := index $v.charts "cert-manager" }}
{{- $po := index $v.charts "prometheus-operator" }}
{{- $slackTpl := tpl (readFile "../helmfile.d/snippets/slack.gotmpl") $v | toString }}

releases:
  {{- range $teamId, $team := $tc.teams }}
  {{- $domain := printf "team-%s.%s" $teamId $v.cluster.domainSuffix }}
  {{- $appsDomain := printf "apps.%s" $domain }}
  {{- $azure := $team | get "azure" dict }}
  - name: team-ns-{{ $teamId }}
    installed: true
    namespace: team-{{ $teamId }}
    chart: ../charts/team-ns
    labels:
      tag: teams
      ingress: "true"
      team: {{ $teamId }}
    values:
      - cluster: {{- $v.cluster | toYaml | nindent 10 }}
        charts: {{- $v.charts | toYaml | nindent 10 }}
        otomi: {{- $v.otomi | toYaml | nindent 10 }}
        oidc: {{- $v.oidc | toYaml | nindent 10 }}
        domain: {{ $domain }}
        certStage: {{ $cm.stage }}
      - {{- $team | toYaml | nindent 8 }}
        teamId: {{ $teamId }}
      - services: {{- concat $coreTeamServices ($team | get "services" list) | toYaml | nindent 10 }}
        {{- if $v.otomi.isMultitenant }}
        {{- if ($team | get "cicd.enabled" "false") }}
        {{- $cicdFlavour := ($team | get "cicd.type" "drone") }}
        {{- if eq $cicdFlavour "drone" }}
        # TODO: fix this weirdness: the next two lines fook the yaml parser:
        # - name: drone
        #   svc: drone-{{ $teamId }}
        {{- end }}
        {{- end }}
        {{- if ne (len ($team | get "sites" list)) 0 }}
        - name: blackbox
          svc: prometheus-blackbox-exporter
          port: 9115
        {{- end }}
        {{- end }}
  {{- if $v.otomi.isMultitenant }}  
  - name: prometheus-{{ $teamId }}
    installed: true
    namespace: team-{{ $teamId }}
    chart: ../charts/prometheus-operator
    labels:
      tag: teams
      team: {{ $teamId }}
    values:
      - ../values/prometheus-operator/prometheus-operator.gotmpl
      - ../values/prometheus-operator/prometheus-operator-team.gotmpl
      - nameOverride: {{ $teamId }}-po
        fullnameOverride: {{ $teamId }}-po
        {{- if $c | get "prometheus-operator.alertmanager.enabled" false }}
        alertmanager:
          alertmanagerSpec:
            externalUrl: https://{{ $appsDomain }}/alertmanager
          config: {{- tpl (readFile "../helmfile.d/snippets/alertmanager.gotmpl") (dict "instance" $team "root" $v "slackTpl" $slackTpl) | nindent 12 }}
        {{- end }}
        commonLabels:
          prometheus: team-{{ $teamId }}
        prometheus:
          prometheusSpec:
            serviceMonitorSelector:
              matchLabels:
                prometheus: team-{{ $teamId }}
            externalUrl: https://{{ $appsDomain }}/prometheus
            ruleNamespaceSelector:
              matchLabels:
                name: team-{{ $teamId }}
            podMonitorNamespaceSelector:
              matchLabels:
                name: team-{{ $teamId }}
            serviceMonitorNamespaceSelector:
              matchLabels:
                name: team-{{ $teamId }}
            additionalScrapeConfigs:
              - job_name: probe-services-{{ $teamId }}
                metrics_path: /probe
                scrape_interval: 10m
                params:
                  module: [http_2xx]  # Look for a HTTP 200 response.
                static_configs:
                  - targets:
                    {{ $registry := list }}
                    {{- range $s := $team | get "services" list }}
                    {{- $type := $s.type | default "auth" }}
                    {{- if and (eq $type "public") (not ($s | get "ksvc.scaleToZero" false)) }}
                    {{- $svcDomain := ($s | get "domain" (printf "%s.%s" $s.name $domain)) }}
                    {{- $path := "/" }}{{ if hasKey $s "paths" }}{{ $path = index $s.paths 0 }}{{ end }}
                    {{- $url := printf "%s%s" $svcDomain $path }}
                    {{- if not (has $url $registry) }}
                    {{- $registry = append $registry $url }}
                    - https://{{ $url }}
                    {{- end }}
                    {{- end }}
                    {{- end }}
                relabel_configs:
                  - source_labels: [__address__]
                    target_label: __param_target
                  - source_labels: [__param_target]
                    target_label: instance
                  - target_label: __address__
                    replacement: prometheus-blackbox-exporter.monitoring:9115
        additionalPrometheusRules:
          - name: blackbox
            {{- readFile "../values/prometheus-operator/rules/blackbox.yaml" | nindent 12 }}
        grafana:
          nameOverride: {{ $teamId }}-po-grafana
          fullnameOverride: {{ $teamId }}-po-grafana
          grafana.ini:
            server:
              root_url: https://{{ $appsDomain }}/grafana
          additionalDataSources:
            - name: Prometheus-admin
              editable: false
              type: prometheus
              access: proxy
              url: http://po-prometheus.monitoring:9090
            - name: Loki
              editable: false
              type: loki
              access: proxy
              url: http://loki.monitoring:11811
              basicAuth: true
              basicAuthUser: {{ $teamId }}
              basicAuthPassword: {{ $team.password }}
            {{- if $c | get "sitespeed.enabled" false }}
            - name: Graphite
              editable: false
              type: graphite
              access: proxy
              url: http://graphite.monitoring:80
            {{- end }}
            {{- if ($team | get "azureMonitor" ($v | get "azure.monitor" nil)) }}
            - {{- tpl (readFile "../helmfile.d/snippets/azure-monitor.gotmpl") ($team | get "azureMonitor" ($v | get "azure.monitor")) | toString | nindent 14 }}
            {{- end }}
  {{ if has "msteams" ($team | get "receivers" list) }}
  - name: prometheus-msteams-{{ $teamId }}
    installed: true
    namespace: team-{{ $teamId }}
    chart: ../charts/prometheus-msteams
    labels:
      tag: teams
      team: {{ $teamId }}
    values:
      - ../values/prometheus-msteams/prometheus-msteams.gotmpl
      - commonLabels:
          team: {{ $teamId }}
        metrics:
          serviceMonitor:
            additionalLabels:
              release: prometheus-{{ $teamId }}
        connectors:
          - high_priority_channel: {{ $team | get "msteams.highPrio" }}
          - low_priority_channel: {{ $team | get "msteams.lowPrio" }}
  {{- end }}
  - name: grafana-dashboards-{{ $teamId }}
    installed: true
    namespace: team-{{ $teamId }}
    chart: ../charts/grafana-dashboards
    labels:
      tag: teams
      team: {{ $teamId }}
    values:
      - cluster: {{- $v.cluster | toYaml | nindent 10 }}
        team: {{ $teamId }}
        folders:
          - k8s
          - istio-teams
          {{- if and (eq $v.cluster.provider "azure") ($team | get "azureMonitor" ($v | get "azure.monitor" nil)) }}
          - azure{{ end }}
          {{- if $team | get "stack.sitespeed" false }}
          - sitespeed{{ end }}
  {{- end }}
  {{- if hasKey $team "jobs" }}
  {{- range $job := $team.jobs }}
  - name: job-{{ $teamId }}-{{ $job.name }}
    installed: {{ $job.enabled }}
    namespace: team-{{ $teamId }}
    chart: ../charts/jobs
    labels:
      group: jobs
      tag: teams
      team: {{ $teamId }}
    hooks:
      - events: ["presync"]
        showlogs: true
        command: ../bin/job-presync.sh
        args:
          - job-{{ $teamId }}-{{ $job.name }}
          {{- if hasKey $job "runPolicy" }}
          - "{{ $job.runPolicy }}"    
          {{- end }}
    values:
      - teamSecrets: {{- $team | get "secrets" nil | toYaml | nindent 10 }}
        teamId: {{ $teamId }}
      - {{- $job | toYaml | nindent 8 }}
  {{- end }}
  {{- end }}
  {{- end }}