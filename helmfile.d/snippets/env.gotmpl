{{- $ENV_DIR := env "ENV_DIR" | default "../env" }}
{{- $t := readFile (print $ENV_DIR "/env/teams.yaml") | fromYaml }}
{{- $settings := readFile (print $ENV_DIR "/env/settings.yaml") | fromYaml }}
{{- /* teamConfig might be stripped by the api when no teams yet exist, so we add it back (TODO: fix this in api). */}}
{{- if not (hasKey $t "teamConfig") }}{{ $_ := set $t "teamConfig" dict }}{{ end }}
{{- $teams := keys $t.teamConfig}}
{{- /* We relocated teamConfig.teams to teamConfig, so one time we might have to fall back to our previous location */}}
{{- /* TODO:[teamConfig] deprecate somewhere in da future */}}
{{- if hasKey $t.teamConfig "teams" }}{{ $teams = keys $t.teamConfig.teams }}{{ end }}
{{- $hasSops := eq (exec "bash" (list "-c" "( test -f $ENV_DIR/.sops.yaml && echo 'true' ) || echo 'false'") | trim) "true" }}
{{- $apps := (exec "bash" (list "-c" "find  $ENV_DIR/env/apps -name '*.yaml' -not -name 'secrets.*.yaml'")) | splitList "\n" }}
{{- $appsSecret := (exec "bash" (list "-c" "find  $ENV_DIR/env/apps -name 'secrets.*.yaml'")) | splitList "\n" }}
{{- $ext := ($hasSops | ternary ".dec" "") }}
{{- $teamFileExists := eq (exec "bash" (list "-c" (printf "( test -f $ENV_DIR/env/secrets.teams.yaml%s && echo 'true' ) || echo 'false'" $ext)) | trim) "true" }}
helmDefaults:
  atomic: true
  historyMax: 3
  wait: true
  timeout: 1200
  force: false
  cleanupOnFail: false
  skipDeps: true
environments:
  default:
    values:
      - {{ $ENV_DIR }}/env/cluster.yaml
      - {{ $ENV_DIR }}/env/settings.yaml
      - {{ $ENV_DIR }}/env/teams.yaml
{{- range $app := $apps }}{{ if ne $app "" }}
      - {{ $app }}
{{- end }}{{ end }}
{{- range $team := $teams }}
  {{- range $type := list "services" "external-secrets" "jobs" "workloads" "builds"}}
    {{- if eq (exec "bash" (list "-c" (printf "( test -f $ENV_DIR/env/teams/%s.%s.yaml && echo 'true' ) || echo 'false'" $type $team)) | trim) "true" }}
      - {{ $ENV_DIR }}/env/teams/{{ $type }}.{{ $team }}.yaml
    {{- end }}
  {{- end }}
{{- end }}
      - {{ $ENV_DIR }}/env/policies.yaml
{{- if eq (exec "bash" (list "-c" "( test -f $ENV_DIR/env/secrets.settings.yaml && echo 'true' ) || echo 'false'") | trim) "true" }}
      - {{ $ENV_DIR }}/env/secrets.settings.yaml{{ $ext }}
{{- end }}
{{- if $teamFileExists }}
  {{- if eq (exec "bash" (list "-c" "( test -f $ENV_DIR/env/secrets.teams.yaml && echo 'true' ) || echo 'false'") | trim) "true" }}
      - {{ $ENV_DIR }}/env/secrets.teams.yaml{{ $ext }}
  {{- end }}
{{- end }}
{{- range $app := $appsSecret }}{{ if ne $app "" }}{{ $file := $app | replace (print $ENV_DIR "/env/apps/") "" }}
      - {{ $ENV_DIR }}/env/apps/{{ $file }}{{ $ext }}
{{- end }}{{ end }}