environments:
  default:
    values:
      - azure:
          appgw:
            isManaged: false
        apps:
          alertmanager:
            enabled: false
          argocd:
            enabled: true
            applicationSet:
              replicas: 1
            controller:
              replicas: 1
            autoscaling:
              repoServer:
                enabled: true
                minReplicas: 1
                maxReplicas: 5
                targetCPUUtilizationPercentage: 70
                targetMemoryUtilizationPercentage: 70
              server:
                enabled: true
                minReplicas: 1
                maxReplicas: 5
                targetCPUUtilizationPercentage: 70
                targetMemoryUtilizationPercentage: 70
            resources:
              controller:
                requests:
                  cpu: 500m
                  memory: 1Gi
                limits:
                  cpu: "2"
                  memory: 2Gi            
              server:
                requests:
                  cpu: 50m
                  memory: 256M
                limits:
                  cpu: "1"
                  memory: 1Gi
              repo:
                requests:
                  cpu: 100m
                  memory: 512M
                limits:
                  cpu: "1"
                  memory: 1Gi
              redis:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
              applicationSet:
                requests:
                  cpu: 100m
                  memory: 256M
                limits:
                  cpu: "1"
                  memory: 1Gi
              notifications:
                requests:
                  cpu: 100m
                  memory: 64M
                limits:
                  cpu: "1"
                  memory: 1Gi
              imageUpdater:
                requests:
                  memory: 50Mi
                  cpu: 50m
                limits:
                  memory: 1Gi
                  cpu: "1"
          cert-manager:
            issuer: custom-ca
            resources:
              requests:
                cpu: 50m
                memory: 64Mi
              limits:
                cpu: 200m
                memory: 384Mi
          cnpg:
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                cpu: 1000m
                memory: 512Mi
          drone:
            enabled: false
            debug: false
            trace: false
            sourceControl:
              provider: gitea
              username: otomi-admin
          external-dns:
            logLevel: info
          falco:
            enabled: false
            _rawValues:
              customRules:
                otomi-rules.yaml: >-
                  - macro: k8s_containers
                    condition: (
                        container.image.repository in (
                          docker.io/velero/velero,
                          docker.io/weaveworks/kured,
                          k8s.gcr.io/kube-state-metrics/kube-state-metrics,
                          quay.io/jetstack/cert-manager-cainjector,
                          quay.io/jetstack/cert-manager-controller,
                          quay.io/jetstack/cert-manager-webhook,
                          quay.io/prometheus-operator/prometheus-operator,
                          quay.io/prometheus/prometheus,
                          quay.io/kiwigrid/k8s-sidecar,
                          docker.io/otomi/core,
                          docker.io/otomi/tasks,
                          docker.io/otomi/api,
                          docker.io/drone/drone-runner-kube,
                          docker.io/grafana/promtail,
                          gcr.io/tekton-releases/github.com/tektoncd/dashboard/cmd/dashboard,
                          quay.io/argoprojlabs/argocd-image-updater
                        ) or (k8s.ns.name = "kube-system")
                          or (k8s.ns.name = "ingress")
                      )
                  - macro: user_known_write_below_etc_activities
                    condition: (
                        (container.image.repository = docker.io/goharbor/harbor-core and proc.name = cp) or
                        (container.image.repository = docker.io/goharbor/harbor-registryctl and proc.name = cp) or
                        (container.image.repository = docker.io/goharbor/registry-photon and proc.name = cp) or
                        (container.image.repository = docker.io/goharbor/trivy-adapter-photon and proc.name = cp)
                      )
                  - macro: user_sensitive_mount_containers
                    condition: (
                        container.image.repository in (
                          quay.io/prometheus/node-exporter
                        )
                      )
                  - macro: user_trusted_containers
                    condition: (
                        container.image.repository in (
                          docker.io/drone/drone-runner-kube,
                          docker.io/otomi/api,
                          docker.io/otomi/tasks
                        )
                      )
                  - macro: user_known_package_manager_in_container
                    condition: (
                        container.image.repository in (
                          docker.io/otomi/tasks
                        )
                      )
                  - macro: user_known_k8s_client_container
                    condition: (
                        container.image.repository in (
                          docker.io/otomi/tasks,
                          ocker.io/otomi/core
                        ) or (k8s.ns.name = "drone-pipelines")
                      )
                  - macro: user_known_non_sudo_setuid_conditions
                    condition: (
                        container.image.repository in (
                          docker.io/otomi/tasks,
                          docker.io/otomi/api,
                          docker.io/otomi/console,
                          docker.io/gitea/gitea,
                          docker.io/grafana/grafana
                        ) or (k8s.ns.name = "ingress")
                          or (k8s.ns.name = "keycloak")
                      )
                  - macro: excessively_capable_container
                    condition: (
                        container.image.repository in (
                          docker.io/otomi/console,
                          docker.io/otomi/api
                        ) or (k8s.ns.name = "keycloak")
                      )
                  - macro: user_known_write_below_root_activities
                    condition: (
                        k8s.ns.name = "drone-pipelines"
                      )
                  - macro: user_known_network_tool_activities
                    condition: (
                        container.image.repository in (
                          docker.io/gitea/gitea
                        ) or (k8s.ns.name = "keycloak")  
                      )
                  - macro: user_known_create_files_below_dev_activities
                    condition: (
                        container.image.repository in (
                          quay.io/operatorhubio/catalog
                        )
                      )
            resources:
              falco:
                requests:
                  cpu: 100m
                  memory: 512Mi
                limits:
                  cpu: 1000m
                  memory: 1024Mi
              falcoCtlFollow:
                requests:
                  cpu: 20m
                  memory: 16Mi
                limits:
                  cpu: 50m
                  memory: 32Mi
              falcoCtlInstall:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              falcoDriverLoader:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              falcoExporter:
                requests:
                  cpu: 20m
                  memory: 16Mi
                limits:
                  cpu: 50m
                  memory: 32Mi
          gitea:
            enabled: true
            adminUsername: otomi-admin
          grafana:
            enabled: false
          harbor:
            enabled: false
            oidcAutoOnboard: true
            oidcUserClaim: 'email'
            registry:
              credentials:
                username: otomi-admin
            resources:
              trivy:
                requests:
                  cpu: 200m
                  memory: 256Mi
                limits:
                  cpu: 400m
                  memory: 512Mi
          httpbin:
            enabled: false
          ingress-nginx:
            enabled: true
            autoscaling:
              enabled: true
              minReplicas: 2
              maxReplicas: 10
            modsecurity:
              enabled: false
              block: false
              owasp: true
            private:
              enabled: false
              autoscaling:
                enabled: true
                minReplicas: 2
                maxReplicas: 10
            tracing:
              enabled: false
              samplingRatio: '0.01'
          istio:
            enabled: true
            tracing:
              enabled: false
              samplingRatio: '0.01'
            autoscaling:
              egressgateway:
                minReplicas: 2
                maxReplicas: 10
              ingressgateway:
                minReplicas: 2
                maxReplicas: 10
              pilot:
                minReplicas: 2
                maxReplicas: 10
            egressGateway:
              enabled: false
          jaeger:
            enabled: false
          keycloak:
            enabled: true
            adminUsername: otomi-admin
            theme: otomi
            resources:
              keycloak:
                requests:
                  cpu: 200m
                  memory: 512Mi
                limits:
                  cpu: 2000m
                  memory: 1Gi
              operator:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 1000m
                  memory: 512Mi
            idp:
              alias: otomi-idp
              clientID: otomi
          kiali:
            enabled: false
            resources:
              pod:
                requests:
                  cpu: 200m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 1Gi
              operator:
                requests:
                  cpu: 1000m
                  memory: 512Mi
                limits:
                  cpu: 2000m
                  memory: 1Gi
          knative:
            enabled: false
            serving:
              replicas: 1
          kured:
            enabled: false
            resources:
              kuredDaemonSet:
                requests:
                  cpu: 20m
                  memory: 16Mi
                limits:
                  cpu: 50m
                  memory: 32Mi
          kyverno:
            enabled: false
            mode: DevTest
            resources:
              admissionController:
                requests:
                  cpu: 200m
                  memory: 128Mi
                limits:
                  cpu: '1'
                  memory: 512Mi
              cleanupController:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: '1'
                  memory: 512Mi
              backgroundController:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: '1'
                  memory: 512Mi
              reportsController:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: '1'
                  memory: 512Mi
          tekton:
            resources:
              dashboard:
                limits:
                  cpu: 100m
                  memory: 128Mi
                requests:
                  cpu: 10m
                  memory: 64Mi
          loki:
            enabled: false
            resources:
              compactor:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              ingester:
                requests:
                  cpu: 250m
                  memory: 512Mi
                limits:
                  cpu: 500m
                  memory: 1Gi
              gateway:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              querier:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              distributor:
                requests:
                  cpu: 150m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              queryFrontend:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
            persistence:
              ingester:
                size: 20Gi
              querier:
                size: 10Gi
            autoscaling:
              ingester:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              gateway:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              querier:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              distributor:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              queryFrontend:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
          metrics-server:
            apiServer:
              create: true
          minio:
            enabled: false
            provisioning:
              enabled: true
            persistence:
              enabled: true
              size: 50Gi
            resources:
              requests:
                cpu: 500m
                memory: 128Mi
              limits:
                cpu: '1'
                memory: 1Gi
          oauth2-proxy: {}
          oauth2-proxy-redis: {}
          otomi-api:
            editorInactivityTimeout: 1
          otomi-console: {}
          otomi-operator:
            resources:
              operator:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
          apl-harbor-operator:
            resources:
              operator:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
          apl-gitea-operator:
            resources:
              operator:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
          apl-keycloak-operator:
            resources:
              operator:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
          promtail:
            enabled: false
          prometheus-blackbox-exporter: {}
          prometheus:
            enabled: false
            disabledRules:
              - InfoInhibitor
            remoteWrite:
              enabled: false
              rwConfig:
                insecureSkipVerify: false
            replicas: 1
            scrapeInterval: 60s
            retentionSize: 4GB
            storageSize: 5Gi
          redis-shared:
            enabled: false
          otel:
            enabled: false
            collector:
              mode: deployment
              attributes:
                - k8s.pod.name
                - k8s.pod.uid
                - k8s.deployment.name
                - k8s.namespace.name
                - k8s.node.name
                - k8s.pod.start_time
            operator:
              replicaCount: 1
            resources:
              collector:
                requests:
                  cpu: 100m
                  memory: 64Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              manager:
                requests:
                  cpu: 50m
                  memory: 16Mi
                limits:
                  cpu: 200m
                  memory: 512Mi
              kubeRBACProxy:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 500m
                  memory: 128Mi
          sealed-secrets:
            enabled: true
            resources:
              operator:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 2000m
                  memory: 1024Mi
          tempo:
            enabled: false
            resources:
              compactor:
                requests:
                  cpu: 100m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 1Gi
              ingester:
                requests:
                  cpu: 100m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 1Gi
              memcached:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              querier:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              metricsGenerator:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              distributor:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              queryFrontend:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
            persistence:
              ingester:
                size: 10Gi
            autoscaling:
              ingester:
                enabled: false
              querier:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              distributor:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              queryFrontend:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
          rabbitmq:
            enabled: false
            resources:
              clusterOperator:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 900m
                  memory: 512Mi
              msgTopologyOperator:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 900m
                  memory: 512Mi
          trivy:
            enabled: false
            operator:
              replicaCount: 1
            resources:
              operator:
                requests:
                  cpu: 100m
                  memory: 64Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              trivy:
                requests:
                  cpu: 100m
                  memory: 64M
                limits:
                  cpu: 500m
                  memory: 512Mi
          velero:
            enabled: false
            restic:
              enabled: false
            logLevel: info
            resources:
              requests:
                cpu: 500m
                memory: 128Mi
              limits:
                cpu: 1000m
                memory: 512Mi
        databases:
          keycloak:
            imported: false
            size: '5Gi'
            replicas: 2
            resources:
              limits:
                cpu: 100m
                memory: 512Mi
              requests:
                cpu: 50m
                memory: 256Mi
          harbor:
            size: '5Gi'
            replicas: 2
            coreDatabase: registry
          gitea:
            useOtomiDB: true
            imported: false
            size: '5Gi'
            replicas: 2
            resources:
              limits:
                cpu: 100m
                memory: 512Mi
              requests:
                cpu: 50m
                memory: 256Mi
        obj:
          provider:
            type: disabled
          buckets:
              loki: loki
              cnpg: cnpg
              velero: velero
              harbor: harbor
              tempo: tempo
        platformBackups:
          database:
            harbor:
              enabled: false
            gitea:
              enabled: false
            keycloak:
              enabled: false
          persistentVolumes:
            gitea:
              enabled: false
        cluster:
          provider: linode
          name: apl
        dns:
          domainFilters: []
          zoneIdFilters: []
        ingress:
          platformClass:
            className: platform
            network: public
          classes: []
        alerts:
          receivers:
            - none
        otomi:
          hasExternalDNS: false
          hasExternalIDP: false
          isHomeMonitored: false
          isMultitenant: true
          nodeSelector: {}
        e2e:
          enabled: false
          upgrade:
            version: main
        # TODO: update this when schema version changes: (and think more?)
        version: 26
