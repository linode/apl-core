environments:
  default:
    values:
      - azure:
          appgw:
            isManaged: false
        apps:
          alertmanager:
            enabled: false
            resources:
              alertmanagerTeams:
                requests:
                  cpu: 10m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              alertmanager:
                requests:
                  cpu: 10m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi              
            _rawValues: {}
          argocd:
            applicationSet:
              replicas: 1
            controller:
              replicas: 1
            autoscaling:
              repoServer:
                enabled: true
                minReplicas: 1
                maxReplicas: 5
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              server:
                enabled: true
                minReplicas: 1
                maxReplicas: 5
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
            resources:
              controller:
                requests:
                  cpu: 500m
                  memory: 1Gi
                limits:
                  cpu: "2"
                  memory: 2Gi
              server:
                requests:
                  cpu: 100m
                  memory: 512M
                limits:
                  cpu: "1"
                  memory: 1Gi
              repo:
                requests:
                  cpu: 100m
                  memory: 512M
                limits:
                  cpu: "1"
                  memory: 1Gi
              redis:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
              applicationSet:
                requests:
                  cpu: 100m
                  memory: 256M
                limits:
                  cpu: "1"
                  memory: 1Gi
              notifications:
                requests:
                  cpu: 50m
                  memory: 64M
                limits:
                  cpu: "1"
                  memory: 1Gi
              imageUpdater:
                requests:
                  memory: 50Mi
                  cpu: 50m
                limits:
                  memory: 1Gi
                  cpu: "1"
            _rawValues: {}
          cert-manager:
            issuer: custom-ca
            resources:
              certManager:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 512Mi
              startupapicheck:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 384Mi
              cainjector:
                requests:
                  cpu: 50m
                  memory: 384Mi
                limits:
                  cpu: 200m
                  memory: 1Gi
              webhook:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 100m
                  memory: 256Mi                              
            _rawValues: {}
          cnpg:
            resources:
              requests:
                cpu: 50m
                memory: 144Mi
              limits:
                cpu: "1"
                memory: 1Gi
            _rawValues: {}
          drone:
            enabled: false
            debug: false
            trace: false
            sourceControl:
              provider: gitea
              username: otomi-admin
          external-dns:
            logLevel: info
            resources:
              limits:
                cpu: 100m
                memory: 128Mi
              requests:
                memory: 64Mi
                cpu: 10m  
          falco:
            enabled: false
            driver: ebpf
            _rawValues:
              customRules:
                otomi-rules.yaml: >-
                  - macro: protected_shell_spawner
                    condition: (
                        container.image.repository in (
                          ghcr.io/cloudnative-pg
                        )
                      )
                  - macro: k8s_containers
                    condition: (
                        container.image.repository in (
                          docker.io/velero/velero,
                          docker.io/weaveworks/kured,
                          ghcr.io/aquasecurity/trivy-operator,
                          quay.io/argoproj/argocd,
                          quay.io/keycloak/keycloak-operator,
                          k8s.gcr.io/kube-state-metrics/kube-state-metrics,
                          quay.io/jetstack/cert-manager-cainjector,
                          quay.io/jetstack/cert-manager-controller,
                          quay.io/jetstack/cert-manager-webhook,
                          quay.io/prometheus-operator/prometheus-operator,
                          quay.io/prometheus/prometheus,
                          quay.io/kiwigrid/k8s-sidecar,
                          docker.io/linode/apl-core,
                          docker.io/linode/apl-tasks,
                          docker.io/linode/apl-api,
                          docker.io/drone/drone-runner-kube,
                          docker.io/grafana/promtail,
                          gcr.io/tekton-releases/github.com/tektoncd/dashboard/cmd/dashboard,
                          quay.io/argoprojlabs/argocd-image-updater,
                          gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/eventlistenersink,
                          docker.io/bitnami/sealed-secrets-controller,
                          ghcr.io/cloudnative-pg/postgresql,
                          jaegertracing/jaeger-operator
                        ) or (k8s.ns.name = "kube-system")
                          or (k8s.ns.name = "ingress")
                          or (k8s.ns.name = "kyverno")
                          or (k8s.ns.name = "cnpg-system")
                          or (k8s.ns.name = "tekton-pipelines")
                          or (k8s.ns.name = "falco")
                      )
                  - macro: user_known_write_below_etc_activities
                    condition: (
                        (container.image.repository = docker.io/goharbor/harbor-core and proc.name = cp) or
                        (container.image.repository = docker.io/goharbor/harbor-registryctl and proc.name = cp) or
                        (container.image.repository = docker.io/goharbor/registry-photon and proc.name = cp) or
                        (container.image.repository = docker.io/goharbor/trivy-adapter-photon and proc.name = cp)
                      )
                  - macro: user_sensitive_mount_containers
                    condition: (
                        container.image.repository in (
                          quay.io/prometheus/node-exporter
                        )
                      )
                  - macro: user_trusted_containers
                    condition: (
                        container.image.repository in (
                          docker.io/drone/drone-runner-kube,
                          docker.io/linode/apl-api,
                          docker.io/linode/apl-tasks
                        )
                      )
                  - macro: user_known_package_manager_in_container
                    condition: (
                        container.image.repository in (
                          docker.io/linode/apl-tasks
                        )
                      )
                  - macro: user_known_k8s_client_container
                    condition: (
                        container.image.repository in (
                          docker.io/linode/apl-tasks,
                          docker.io/linode/apl-core
                        ) or (k8s.ns.name = "drone-pipelines")
                      )
                  - macro: user_known_non_sudo_setuid_conditions
                    condition: (
                        container.image.repository in (
                          docker.io/linode/apl-tasks,
                          docker.io/linode/apl-api,
                          docker.io/linode/apl-console,
                          docker.io/gitea/gitea,
                          docker.io/grafana/grafana
                        ) or (k8s.ns.name = "ingress")
                          or (k8s.ns.name = "keycloak")
                      )
                  - macro: excessively_capable_container
                    condition: (
                        container.image.repository in (
                          docker.io/linode/apl-console,
                          docker.io/linode/apl-api
                        ) or (k8s.ns.name = "keycloak")
                      )
                  - macro: user_known_write_below_root_activities
                    condition: (
                        k8s.ns.name = "drone-pipelines"
                      )
                  - macro: user_known_network_tool_activities
                    condition: (
                        container.image.repository in (
                          docker.io/gitea/gitea
                        ) or (k8s.ns.name = "keycloak")  
                      )
                  - macro: user_known_create_files_below_dev_activities
                    condition: (
                        container.image.repository in (
                          quay.io/operatorhubio/catalog
                        )
                      )
            resources:
              falco:
                requests:
                  cpu: 100m
                  memory: 512Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
              falcoCtlFollow:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 256Mi
              falcoCtlInstall:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              falcoDriverLoader:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              falcoExporter:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
          gitea:
            adminUsername: otomi-admin
            _rawValues: {}
            resources:
              gitea:
                limits:
                  cpu: "1"
                  memory: 1Gi
                requests:
                  cpu: 100m
                  memory: 128Mi
              memcached:
                limits:
                  cpu: 250m
                  memory: 256Mi
                requests:
                  cpu: 100m
                  memory: 128Mi
              memcachedMetrics:
                limits:
                  cpu: 200m
                  memory: 128M
                requests:
                  cpu: 50m
                  memory: 64M
              init:
                limits:
                  cpu: 400m
                  memory: 256Mi
                requests:
                  cpu: 100m
                  memory: 128Mi
          grafana:
            enabled: false
            resources:
              grafana:
                requests:
                  cpu: 10m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
              grafanaTeams:
                requests:
                  cpu: 10m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
              sidecar:
                limits:
                  cpu: 500m
                  memory: 256Mi
                requests:
                  cpu: 10m
                  memory: 128Mi
              sidecarTeams:
                limits:
                  cpu: 500m
                  memory: 256Mi
                requests:
                  cpu: 10m
                  memory: 128Mi
            _rawValues: {}
          harbor:
            enabled: false
            oidcAutoOnboard: true
            oidcUserClaim: email
            registry:
              credentials:
                username: otomi-admin
            resources:
              chartmuseum:
                requests:
                  cpu: 10m
                  memory: 56Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              core:
                requests:
                  cpu: 10m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              jobservice:
                requests:
                  cpu: 10m
                  memory: 32Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              portal:
                requests:
                  cpu: 10m
                  memory: 32Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              redis:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              registry:
                requests:
                  cpu: 10m
                  memory: 32Mi
                limits:
                  cpu: 500m
                  memory: 256Mi
              registryController:
                requests:
                  cpu: 10m
                  memory: 32Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              trivy:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              nginx:
                requests:
                  memory: 32Mi
                  cpu: 10m
                limits:
                  memory: 512Mi
                  cpu: 200m
            _rawValues: {}
          httpbin:
            enabled: false
            _rawValues: {}
          ingress-nginx:
            autoscaling:
              enabled: true
              minReplicas: 2
              maxReplicas: 10
            modsecurity:
              enabled: false
              block: false
              owasp: true
            tracing:
              enabled: false
              samplingRatio: "0.01"
            maxBodySize: 1024m
            maxBodySizeBytes: 1073741824
            resources:
              controller:
                requests:
                  cpu: 100m
                  memory: 256Mi
                limits:
                  cpu: "2"
                  memory: 2Gi
              opentelemetry:
                requests:
                  cpu: 100m
                  memory: 65Mi
                limits:
                  cpu: 500m
                  memory: 256Mi
              defaultBackend:
                limits:
                  cpu: 20m
                  memory: 20Mi
                requests:
                  cpu: 10m
                  memory: 10Mi
            _rawValues: {}
          istio:
            tracing:
              enabled: false
              samplingRatio: "0.01"
            autoscaling:
              egressgateway:
                minReplicas: 2
                maxReplicas: 10
              ingressgateway:
                minReplicas: 2
                maxReplicas: 10
              pilot:
                minReplicas: 2
                maxReplicas: 10
            egressGateway:
              enabled: false
            resources:
              proxy:
                requests:
                  cpu: 20m
                  memory: 80Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
              egressgateway:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 256Mi
              ingressgateway:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 256Mi
              pilot:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: "2"
                  memory: 2Gi
            _rawValues: {}
          jaeger:
            enabled: false
            resources:
              operator:
                limits:
                  cpu: 500m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 128Mi
              agent:
                limits:
                  cpu: 100m
                  memory: 128Mi
                requests:
                  cpu: 10m
                  memory: 32Mi
              collector:
                limits:
                  cpu: 100m
                  memory: 128Mi
                requests:
                  cpu: 10m
                  memory: 32Mi
              ingester:
                limits:
                  cpu: 100m
                  memory: 128Mi
                requests:
                  cpu: 10m
                  memory: 32Mi
              jaeger:
                limits:
                  cpu: "1"
                  memory: 2Gi
                requests:
                  cpu: 200m
                  memory: 384Mi
            _rawValues: {}
          keycloak:
            adminUsername: otomi-admin
            theme: otomi
            resources:
              keycloak:
                requests:
                  cpu: 200m
                  memory: 512Mi
                limits:
                  cpu: "2"
                  memory: 2Gi
              operator:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 512Mi
            idp:
              alias: otomi-idp
              clientID: otomi
            _rawValues: {}
          kiali:
            enabled: false
            resources:
              pod:
                requests:
                  cpu: 100m
                  memory: 768Mi
                limits:
                  cpu: "2"
                  memory: 1Gi
              operator:
                requests:
                  cpu: 100m
                  memory: 256Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
            _rawValues: {}
          knative:
            enabled: false
            serving:
              replicas: 1
            _rawValues: {}
          kured:
            enabled: false
            resources:
              kuredDaemonSet:
                requests:
                  cpu: 20m
                  memory: 16Mi
                limits:
                  cpu: 50m
                  memory: 32Mi
            _rawValues: {}
          kyverno:
            enabled: false
            mode: DevTest
            resources:
              admissionController:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 512Mi
              cleanupController:
                requests:
                  cpu: 10m
                  memory: 64Mi
                limits:
                  cpu: "1"
                  memory: 512Mi
              backgroundController:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: "1"
                  memory: 512Mi
              reportsController:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 512Mi
            _rawValues: {}
          tekton:
            resources:
              dashboard:
                limits:
                  cpu: 100m
                  memory: 128Mi
                requests:
                  cpu: 10m
                  memory: 64Mi
              pipelinesController:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
              pipelinesRemoteresolver:
                requests:
                  cpu: 100m
                  memory: 100Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
              triggersInterceptors:
                limits:
                  cpu: 500m
                  memory: 256Mi
                requests:
                  cpu: 50m
                  memory: 64Mi
              triggersController:
                limits:
                  cpu: 500m
                  memory: 256Mi
                requests:
                  cpu: 50m
                  memory: 64Mi
              triggersWebhook:
                limits:
                  cpu: 500m
                  memory: 256Mi
                requests:
                  cpu: 50m
                  memory: 64Mi
            _rawValues: {}
          loki:
            enabled: false
            resources:
              compactor:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              ingester:
                requests:
                  cpu: 250m
                  memory: 512Mi
                limits:
                  cpu: 500m
                  memory: 1Gi
              gateway:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              querier:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              distributor:
                requests:
                  cpu: 150m
                  memory: 128Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              queryFrontend:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              reverseProxy:
                limits:
                  cpu: 100m
                  memory: 32Mi
                requests:
                  cpu: 50m
                  memory: 16Mi                
            persistence:
              ingester:
                size: 20Gi
              querier:
                size: 10Gi
            autoscaling:
              ingester:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              gateway:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              querier:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              distributor:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              queryFrontend:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
            _rawValues: {}
          metrics-server:
            apiServer:
              create: true
            _rawValues: {}
          minio:
            enabled: false
            provisioning:
              enabled: true
            persistence:
              enabled: true
              size: 50Gi
            resources:
              requests:
                cpu: 500m
                memory: 128Mi
              limits:
                cpu: "1"
                memory: 1Gi
            _rawValues: {}
          oauth2-proxy:
            resources:
              limits:
                cpu: 200m
                memory: 128Mi
              requests:
                cpu: 20m
                memory: 32Mi
            _rawValues: {}
          oauth2-proxy-redis:
            architecture: standalone
            resources:
              master:
                requests:
                  cpu: 20m
                  memory: 16Mi
                limits:
                  cpu: 200m
                  memory: 128Mi
              replica:
                requests:
                  cpu: 200m
                  memory: 64Mi
                limits:
                  cpu: 500m
                  memory: 256Mi
              sentinel:
                requests:
                  cpu: 200m
                  memory: 64Mi
                limits:
                  cpu: 500m
                  memory: 256Mi
              metrics:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 100m
                  memory: 256Mi
            persistence:
                master: 
                  size: 1Gi
                sentinel:
                  size: 1Gi
                replica:
                  size: 1Gi
            _rawValues: {}
          otomi-api:
            editorInactivityTimeout: 1
            _rawValues: {}
            resources:
              api:
                limits:
                  cpu: 500m
                  memory: 512Mi
                requests:
                  cpu: 100m
                  memory: 256Mi
              tools:
                limits:
                  cpu: "1"
                  memory: 1Gi
                requests:
                  cpu: 300m
                  memory: 256Mi
          otomi-console:
            _rawValues: {}
            resources:
              limits:
                cpu: 400m
                memory: 256Mi
              requests:
                cpu: 50m
                memory: 128Mi
          otomi-operator:
            resources:
              operator:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
            _rawValues: {}
          apl-harbor-operator:
            resources:
              operator:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 512Mi
            _rawValues: {}
          apl-gitea-operator:
            resources:
              operator:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 512Mi
            _rawValues: {}
          apl-keycloak-operator:
            resources:
              operator:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 512Mi
            _rawValues: {}
          promtail:
            enabled: false
            resources:
              requests:
                cpu: 200m
                memory: 256Mi
              limits:
                cpu: "1"
                memory: 512Mi
            _rawValues: {}
          prometheus-blackbox-exporter:
            _rawValues: {}
          prometheus:
            enabled: false
            disabledRules:
              - InfoInhibitor
            remoteWrite:
              enabled: false
              rwConfig:
                insecureSkipVerify: false
            replicas: 1
            scrapeInterval: 60s
            retention: 15d
            retentionSize: 4GB
            storageSize: 5Gi
            resources:
              prometheusOperator:
                limits:
                  cpu: 400m
                  memory: 256Mi
                requests:
                  cpu: 50m
                  memory: 128Mi
              prometheus:
                requests:
                  cpu: 50m
                  memory: 1Gi
                limits:
                  cpu: '3'
                  memory: 3Gi
              kube-state-metrics:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 256Mi
              node-exporter:
                requests:
                  cpu: 50m
                  memory: 32Mi
                limits:
                  cpu: 500m
                  memory: 256Mi
              thanosSidecar:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: "1"
                  memory: 256Mi
              prometheusConfigReloader:
                requests:
                  cpu: 10m
                  memory: 32Mi
                limits:
                  cpu: 100m
                  memory: 128Mi              
            _rawValues: {}
          otel:
            enabled: false
            collector:
              mode: deployment
              attributes:
                - k8s.pod.name
                - k8s.pod.uid
                - k8s.deployment.name
                - k8s.namespace.name
                - k8s.node.name
                - k8s.pod.start_time
            operator:
              replicaCount: 1
            resources:
              collector:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
              manager:
                requests:
                  cpu: 50m
                  memory: 32Mi
                limits:
                  cpu: 200m
                  memory: 512Mi
              kubeRBACProxy:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 500m
                  memory: 128Mi
            _rawValues: {}
          sealed-secrets:
            resources:
              operator:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: "2"
                  memory: 1Gi
            _rawValues: {}
          tempo:
            enabled: false
            resources:
              compactor:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
              ingester:
                requests:
                  cpu: 100m
                  memory: 768Mi
                limits:
                  cpu: 500m
                  memory: 2Gi
              memcached:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 512Mi
              querier:
                requests:
                  cpu: 50m
                  memory: 64Mi
                limits:
                  cpu: 200m
                  memory: 1Gi
              metricsGenerator:
                requests:
                  cpu: 50m
                  memory: 256Mi
                limits:
                  cpu: 200m
                  memory: 1Gi
              distributor:
                requests:
                  cpu: 50m
                  memory: 384Mi
                limits:
                  cpu: 200m
                  memory: 1Gi
              queryFrontend:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: 200m
                  memory: 512Mi
            persistence:
              ingester:
                size: 10Gi
            autoscaling:
              ingester:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              querier:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              distributor:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
              queryFrontend:
                enabled: false
                minReplicas: 1
                maxReplicas: 3
                targetCPUUtilizationPercentage: 80
                targetMemoryUtilizationPercentage: 80
            _rawValues: {}
          rabbitmq:
            enabled: false
            resources:
              clusterOperator:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 900m
                  memory: 512Mi
              msgTopologyOperator:
                requests:
                  cpu: 100m
                  memory: 128Mi
                limits:
                  cpu: 900m
                  memory: 512Mi
            _rawValues: {}
          thanos:
            enabled: false
            query:
              replicaCount: 1
            compactor:
              retentionResolutionRaw: 30d
              retentionResolution5m: 30d
              retentionResolution1h: 10y
            persistence:
              compactor:
                size: 10Gi
              storegateway:
                size: 10Gi
            resources:
              query:
                requests:
                  cpu: 50m
                  memory: 160Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
              compactor:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
              storegateway:
                requests:
                  cpu: 50m
                  memory: 265Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
            _rawValues: {}
          trivy:
            enabled: false
            operator:
              replicaCount: 1
            resources:
              operator:
                requests:
                  cpu: 10m
                  memory: 256Mi
                limits:
                  cpu: "1"
                  memory: 1Gi
              trivy:
                requests:
                  cpu: 10m
                  memory: 128M
                limits:
                  cpu: "1"
                  memory: 1G
            _rawValues: {}
          velero:
            enabled: false
            restic:
              enabled: false
            logLevel: info
            resources:
              requests:
                cpu: 20m
                memory: 184Mi
              limits:
                cpu: "1"
                memory: 512Mi
            _rawValues: {}
        databases:
          keycloak:
            imported: false
            size: 5Gi
            replicas: 2
            resources:
              limits:
                cpu: "1"
                memory: 1Gi
              requests:
                cpu: 50m
                memory: 128Mi
          harbor:
            size: 5Gi
            replicas: 2
            coreDatabase: registry
            resources:
              limits:
                cpu: "1"
                memory: 1Gi
              requests:
                cpu: 50m
                memory: 128Mi
          gitea:
            useOtomiDB: true
            imported: false
            size: 5Gi
            replicas: 2
            resources:
              limits:
                cpu: "1"
                memory: 1Gi
              requests:
                cpu: 50m
                memory: 128Mi
        obj:
          provider:
            type: disabled
        platformBackups:
          database:
            harbor:
              enabled: false
            gitea:
              enabled: false
            keycloak:
              enabled: false
          gitea:
            enabled: false
        cluster:
          provider: linode
          name: apl
        dns:
          domainFilters: []
          zoneIdFilters: []
        ingress:
          platformClass:
            className: platform
          classes: []
        alerts:
          receivers:
            - none
        otomi:
          hasExternalDNS: false
          hasExternalIDP: false
          isMultitenant: true
          nodeSelector: {}
        users: []
        e2e:
          enabled: false
          upgrade:
            version: main
        # TODO: update this when schema version changes
        version: 28
