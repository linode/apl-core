{{- $v := . }}
{{- $tc := .teamConfig }}
{{- $coreAdminServices := list }}{{- range $s := .services }}{{ $coreAdminServices = append $coreAdminServices (merge $s (dict "isCore" true)) }}{{ end }}
{{- $coreTeamServices := list }}{{- range $s := $tc.services }}{{ $coreTeamServices = append $coreTeamServices (merge $s (dict "isCore" true)) }}{{ end }}
{{- $domains := list }}
{{- $domainNames := list }}
{{- $teams := set $tc.teams "admin" dict }}
{{- range $teamId, $team := $tc.teams }}
  {{- $baseDomain := printf "%s%s" (eq $teamId "admin" | ternary "" (printf "team-%s." $teamId)) $v.cluster.domainSuffix }}
  {{- $services := (eq $teamId "admin" | ternary $coreAdminServices (concat $coreTeamServices ($team | get "services" list))) }}
  {{- range $s := $services }}
    {{- if and (not (hasKey $s "internal")) (not (hasKey $s "host")) }}
      {{- $domain := printf "apps.%s" $baseDomain }}
      {{- if hasKey $s "domain" }}
        {{- $domain = $s.domain }}
      {{- else if hasKey $s "isShared" }}
        {{- $domain = printf "%s.%s" $s.name $v.cluster.domainSuffix }}
      {{- else if hasKey $s "ownHost" }}
        {{- $domain = printf "%s.%s" $s.name $baseDomain }}
      {{- end }}
      {{- if not (has $domain $domainNames) }}
        {{- $domInfo := dict "domain" $domain "hasCert" (hasKey $s "hasCert") "certName" ($s |get "certName" "") "certArn" ($s | get "certArn" "") }}
        {{- $domains = append $domains $domInfo }}
        {{- $domainNames = append $domainNames $domain }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
{{- $proxyDomain := print "proxy." $v.cluster.domainSuffix }}
{{- $authDomain := print "auth." $v.cluster.domainSuffix }}
{{- $domains = concat $domains (list (dict "domain" $proxyDomain "hasCert" false "certArn" "" "certName" "") (dict "domain" $authDomain "hasCert" false "certArn" "" "certName" "")) }}
domains:
  {{- range $domInfo := $domains }}
  - {{- $domInfo | toYaml | nindent 4 }}
  {{- end }}
