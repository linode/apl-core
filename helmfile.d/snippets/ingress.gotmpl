{{- /* Add ingress configurations */}}
{{- $v := .Values }}

environments:
  default:
    values:
    - apps:
        {{- /* Combine platform class with other ingress classes in a single loop */}}
        {{- if $v.ingress }}
        {{- /* Create a new list with unique ingress classes */}}
        {{- $allClasses := list }}
        {{- $classMap := dict }}
        
        {{- /* Process all classes, ensuring uniqueness */}}
        
        {{- /* First collect classes from ingress.classes if they exist */}}
        {{- if $v.ingress.classes }}
        {{- range $v.ingress.classes }}
        {{- if not (hasKey $classMap .className) }}
        {{- $allClasses = append $allClasses . }}
        {{- $_ := set $classMap .className true }}
        {{- end }}
        {{- end }}
        {{- end }}
        
        {{- /* Then add platform class if it exists and isn't already added */}}
        {{- if $v.ingress.platformClass }}
        {{- if not (hasKey $classMap $v.ingress.platformClass.className) }}
        {{- $platformClass := dict "className" $v.ingress.platformClass.className }}
        {{- $allClasses = append $allClasses $platformClass }}
        {{- $_ := set $classMap $v.ingress.platformClass.className true }}
        {{- end }}
        {{- end }}
        
        {{- /* Loop through all unique classes and apply defaults */}}
        {{- range $allClasses }}
        ingress-nginx-{{ .className }}:
          autoscaling:
            enabled: true
            minReplicas: 2
            maxReplicas: 10
            targetCPUUtilizationPercentage: 80
            targetMemoryUtilizationPercentage: 80
          modsecurity:
            enabled: false
            block: false
            owasp: true
          tracing:
            enabled: false
            samplingRatio: "0.01"
          maxBodySize: 1024m
          maxBodySizeBytes: 1073741824
          resources:
            controller:
              requests:
                cpu: 100m
                memory: 384Mi
              limits:
                cpu: "2"
                memory: 2Gi
            opentelemetry:
              requests:
                cpu: 100m
                memory: 65Mi
              limits:
                cpu: 500m
                memory: 256Mi
            defaultBackend:
              limits:
                cpu: 20m
                memory: 20Mi
              requests:
                cpu: 10m
                memory: 10Mi
          _rawValues: {}
        {{- end }}
        {{- end }}
