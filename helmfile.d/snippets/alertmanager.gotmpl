{{- $receivers := .instance | get "alerts.receivers" (.root | get "alerts.receivers" (list "slack")) }}
{{- $suffix := (true | ternary "" ".monitoring.svc.cluster.local") }}
global:
{{- if or (has "slack" $receivers ) (and .root.otomi.isHomeMonitored (.root | get "home.receivers" (list "slack"))) }}
  slack_api_url: {{ .instance | get "alerts.slack.url" (.root | get "alerts.slack.url" (.root | get "home.slack.url")) }}
{{- end }}
{{- if has "email" $receivers }}
  smtp_smarthost: {{ .instance | get "alerts.email.smarthost" (.root | get "alerts.email.smarthost") }}
  smtp_hello: {{ .instance | get "alerts.email.hello" (.root | get "alerts.email.hello" .root.cluster.domain) }}
  smtp_auth_username: {{ .instance | get "alerts.email.auth_username" (.root | get "alerts.email.auth_username" nil) }}
  smtp_auth_password: {{ .instance | get "alerts.email.auth_password" (.root | get "alerts.email.auth_password" nil) }}
  smtp_auth_secret: {{ .instance | get "alerts.email.auth_secret" (.root | get "alerts.email.auth_secret" nil) }}
  smtp_auth_identity: {{ .instance | get "alerts.email.auth_identity" (.root | get "alerts.email.auth_identity" nil) }}
{{- end }}
route:
  receiver: default
  group_by: [alertname]
  group_interval: {{ .instance | get "alerts.groupInterval" (.root | get "alerts.groupInterval" "5m") }}
  repeat_interval: {{ .instance | get "alerts.repeatInterval" (.root | get "alerts.repeatInterval" "3h") }}
  routes:
    - match:
        alertname: Watchdog
      receiver: "null"
    - match:
        alertname: CPUThrottlingHigh
      receiver: "null"
    {{- if eq .root.cluster.provider "azure" }}
    - match:
        alertname: KubeAPILatencyHigh
      receiver: "null"
    {{- end }}
    - match:
        severity: critical
      receiver: critical
    {{- if .root.otomi.isHomeMonitored }}
      continue: true
    - match:
        severity: critical
      receiver: critical-home
    {{- end }}
receivers:
  - name: "null"
{{- if has "slack" $receivers  }}
  - name: default
    slack_configs:
      - channel: "#{{ .instance | get "alerts.slack.channel" (.root | get "alerts.slack.channel" "mon-otomi") }}"
        {{- .slackTpl | nindent 8 }}
  - name: critical
    slack_configs:
      - channel: "#{{ .instance | get "alerts.slack.channelCrit" (.root | get "alerts.slack.channelCrit" "mon-otomi-crit") }}"
        {{- .slackTpl | nindent 8 }}
{{- end }}
{{- if has "msteams" $receivers }}
  - name: default
    webhook_configs:
      - url: "http://prometheus-msteams{{ $suffix }}:800/low_priority_channel"
        send_resolved: true
  - name: critical
    webhook_configs:
      - url: "http://prometheus-msteams{{ $suffix }}:800/high_priority_channel"
        send_resolved: true
{{- end }}
{{- if has "email" $receivers }}
  {{- $to := .instance | get "alerts.email.to" (.root | get "alerts.email.to") }}
  {{- $from := .instance | get "alerts.email.from" (.root | get "alerts.email.from" (print "alerts@" .root.cluster.domain)) }}
  - name: default
    email_configs:
      - to: {{ $to }}
        from: {{ $from }}
        send_resolved: true
  - name: critical
    email_configs:
      - to: {{ $to }}
        from: {{ $from }}
        send_resolved: true
{{- end }}
{{- if .root.otomi.isHomeMonitored }}
  - name: critical-home
  {{- $receivers := .root.home | get "receivers" }}
    # sending criticals also to home to be aware of issues
  {{- if has "slack" $receivers  }}
    slack_configs:
      - channel: "#{{ .root | get "home.slack.channelCrit" "mon-otomi-crit" }}"
        {{- .slackTpl | nindent 8 }}
  {{- end }}
  {{- if has "msteams" $receivers  }}
    webhook_configs:
      - url: "http://prometheus-msteams.monitoring.svc.cluster.local:800/high_priority_channel"
        send_resolved: true
  {{- end }}
  {{- if has "email" $receivers  }}
    email_configs:
      - to: {{ .root | get "home.email.to" }}
        from: {{ .root | get "home.email.from" (print "alerts@" .root.cluster.domain) }}
        send_resolved: true
  {{- end }}
{{- end }}
