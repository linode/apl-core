_def:
  alerts:
    groupInterval: 5m
    repeatInterval: 3h
    slack:
      channel: mon-otomi
      channelCrit: mon-otomi-crit
  apps:
    alertmanager:
      enabled: false
      image:
        pullPolicy: IfNotPresent
        tag: v0.24.0
    argocd:
      autoscaling:
        enabled: true
        maxReplicas: 10
        minReplicas: 1
      enabled: false
    cert-manager:
      issuer: custom-ca
      stage: production
    cluster-autoscaler:
      enabled: false
    cluster-overprovisioner:
      cpu: 1000m
      enabled: false
      memory: 1000Mi
    demo-tlspass:
      enabled: false
    drone:
      adminIsMachine: false
      debug: false
      githubAdmins:
        team: admin
      image:
        agent:
          pullPolicy: IfNotPresent
        server:
          pullPolicy: IfNotPresent
      resources:
        runner:
          requests:
            cpu: 1000
            memory: 1Gi
      sourceControl:
        github:
          server: https://github.com
        provider: gitea
      trace: false
    external-dns:
      logLevel: info
    external-secrets:
      logLevel: info
      pollingInterval: 60000
    gatekeeper:
      auditFromCache: false
      auditInterval: 60
      constraintViolationsLimit: 20
      disableValidatingWebhook: true
      emitAdmissionEvents: false
      emitAuditEvents: false
      enabled: false
      image:
        pullPolicy: IfNotPresent
        tag: v3.7.1
      logLevel: INFO
      replicas: 1
    gitea:
      adminUsername: otomi-admin
      enabled: true
      image:
        gitea:
          pullPolicy: IfNotPresent
          tag: 1.16.6
        memcached:
          pullPolicy: IfNotPresent
          tag: 1.6.12
        postgresql:
          pullPolicy: IfNotPresent
          tag: 13.5.0
    grafana:
      enabled: false
      image:
        pullPolicy: IfNotPresent
        tag: 9.0.1
    harbor:
      backup:
        enabled: false
        schedule: 0 0 * * *
      enabled: false
      image:
        pullPolicy: IfNotPresent
        tag: v2.5.4
      persistence:
        imageChartStorage:
          type: filesystem
      privateLibrary: true
      registry:
        credentials:
          username: otomi-admin
    hello:
      enabled: false
    host-mods:
      enabled: false
    httpbin:
      enabled: false
    ingress-azure:
      appgw:
        usePrivateIP: false
    ingress-nginx:
      autoscaling:
        enabled: true
        maxReplicas: 10
        minReplicas: 1
      image:
        pullPolicy: IfNotPresent
        tag: v1.1.2
      maxBodySize: 1024m
      maxBodySizeBytes: 1073741824
      modsecurity:
        block: false
        enabled: false
        owasp: true
    istio:
      autoscaling:
        egressgateway:
          maxReplicas: 10
          minReplicas: 1
        ingressgateway:
          maxReplicas: 10
          minReplicas: 1
        pilot:
          maxReplicas: 10
          minReplicas: 1
      egressGateway:
        enabled: false
      enabled: true
      global:
        logging:
          level: default:info
      image:
        pullPolicy: IfNotPresent
        tag: 1.13.1
      meshConfig:
        defaultConfig:
          tracing:
            sampling: 0.1
    jaeger:
      enabled: false
    keycloak:
      adminUsername: otomi-admin
      enabled: true
      idp:
        alias: otomi-idp
        clientID: otomi
      image:
        keycloak:
          pullPolicy: IfNotPresent
          tag: 15.1.1
        postgresql:
          pullPolicy: IfNotPresent
          tag: 13.5.0
      theme: otomi
    kiali:
      enabled: false
    knative:
      enabled: false
      serving:
        replicas: 1
    kube-descheduler:
      enabled: false
      schedule: "*/30 * * * *"
    kubeapps:
      autoscaling:
        dashboard:
          maxReplicas: 10
          minReplicas: 1
        frontend:
          maxReplicas: 10
          minReplicas: 1
        kubeops:
          maxReplicas: 10
          minReplicas: 1
      enableCommonGround: false
      enabled: false
    kubeclarity:
      enabled: false
      logLevel: warning
    loki:
      enabled: false
      persistence:
        size: 20Gi
      retention:
        duration: 24h
        period: 24h
    metrics-server:
      apiServer:
        create: true
        enabled: true
      enabled: false
      extraArgs:
        kubelet-preferred-address-types: InternalIP
    minio:
      enabled: false
      persistence:
        enabled: true
        size: 20Gi
      provisioning:
        enabled: true
    oauth2-proxy: {}
    oauth2-proxy-redis:
      architecture: standalone
      sizes:
        master: 1Gi
        replica: 1Gi
        sentinel: 1Gi
    otomi-api:
      editorInactivityTimeout: 10
      git:
        branch: main
    prometheus:
      enabled: false
      image:
        kube-state-metrics:
          pullPolicy: IfNotPresent
        node-exporter:
          pullPolicy: IfNotPresent
        prometheus:
          pullPolicy: IfNotPresent
          tag: v2.36.1
      remoteWrite:
        enabled: false
        insecureSkipVerify: false
        otomiThanos: false
        rwConfig:
          basicAuth:
            enabled: false
      replicas: 1
      retention: 1d
      retentionSize: 4GB
      scrapeInterval: 60s
      storageSize: 5Gi
    prometheus-blackbox-exporter: {}
    promtail: {}
    redis-shared:
      architecture: standalone
      enabled: false
      sizes:
        master: 1Gi
        replica: 1Gi
        sentinel: 1Gi
    tigera-operator:
      enabled: false
    vault:
      enabled: false
      image:
        pullPolicy: IfNotPresent
        tag: 1.15.2
      logLevel: info
    velero:
      enabled: false
      logLevel: info
      provider:
        azure:
          environment: AzurePublicCloud
  azure:
    appgw:
      isManaged: false
    monitor:
      azureLogAnalyticsSameAs: true
  backup:
    platformSchedule:
      enabled: false
      schedule: 0 0 * * *
      ttl: 240h
    teamSchedule:
      enabled: false
      schedule: 0 0 * * *
      ttl: 240h
  cluster:
    owner: otomi
    profile: small
  dns:
    domainFilters: []
    zoneIdFilters: []
  home:
    groupInterval: 5m
    repeatInterval: 3h
    slack:
      channel: mon-otomi
      channelCrit: mon-otomi-crit
  ingress:
    classes: []
    platformClass:
      className: platform
      network: public
  letsencryptCA: |
    -----BEGIN CERTIFICATE-----
    MIIFWzCCA0OgAwIBAgIQTfQrldHumzpMLrM7jRBd1jANBgkqhkiG9w0BAQsFADBm
    MQswCQYDVQQGEwJVUzEzMDEGA1UEChMqKFNUQUdJTkcpIEludGVybmV0IFNlY3Vy
    aXR5IFJlc2VhcmNoIEdyb3VwMSIwIAYDVQQDExkoU1RBR0lORykgUHJldGVuZCBQ
    ZWFyIFgxMB4XDTIwMDkwNDAwMDAwMFoXDTI1MDkxNTE2MDAwMFowWTELMAkGA1UE
    BhMCVVMxIDAeBgNVBAoTFyhTVEFHSU5HKSBMZXQncyBFbmNyeXB0MSgwJgYDVQQD
    Ex8oU1RBR0lORykgQXJ0aWZpY2lhbCBBcHJpY290IFIzMIIBIjANBgkqhkiG9w0B
    AQEFAAOCAQ8AMIIBCgKCAQEAu6TR8+74b46mOE1FUwBrvxzEYLck3iasmKrcQkb+
    gy/z9Jy7QNIAl0B9pVKp4YU76JwxF5DOZZhi7vK7SbCkK6FbHlyU5BiDYIxbbfvO
    L/jVGqdsSjNaJQTg3C3XrJja/HA4WCFEMVoT2wDZm8ABC1N+IQe7Q6FEqc8NwmTS
    nmmRQm4TQvr06DP+zgFK/MNubxWWDSbSKKTH5im5j2fZfg+j/tM1bGaczFWw8/lS
    nukyn5J2L+NJYnclzkXoh9nMFnyPmVbfyDPOc4Y25aTzVoeBKXa/cZ5MM+WddjdL
    biWvm19f1sYn1aRaAIrkppv7kkn83vcth8XCG39qC2ZvaQIDAQABo4IBEDCCAQww
    DgYDVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATAS
    BgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBTecnpI3zHDplDfn4Uj31c3S10u
    ZTAfBgNVHSMEGDAWgBS182Xy/rAKkh/7PH3zRKCsYyXDFDA2BggrBgEFBQcBAQQq
    MCgwJgYIKwYBBQUHMAKGGmh0dHA6Ly9zdGcteDEuaS5sZW5jci5vcmcvMCsGA1Ud
    HwQkMCIwIKAeoByGGmh0dHA6Ly9zdGcteDEuYy5sZW5jci5vcmcvMCIGA1UdIAQb
    MBkwCAYGZ4EMAQIBMA0GCysGAQQBgt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCN
    DLam9yN0EFxxn/3p+ruWO6n/9goCAM5PT6cC6fkjMs4uas6UGXJjr5j7PoTQf3C1
    vuxiIGRJC6qxV7yc6U0X+w0Mj85sHI5DnQVWN5+D1er7mp13JJA0xbAbHa3Rlczn
    y2Q82XKui8WHuWra0gb2KLpfboYj1Ghgkhr3gau83pC/WQ8HfkwcvSwhIYqTqxoZ
    Uq8HIf3M82qS9aKOZE0CEmSyR1zZqQxJUT7emOUapkUN9poJ9zGc+FgRZvdro0XB
    yphWXDaqMYph0DxW/10ig5j4xmmNDjCRmqIKsKoWA52wBTKKXK1na2ty/lW5dhtA
    xkz5rVZFd4sgS4J0O+zm6d5GRkWsNJ4knotGXl8vtS3X40KXeb3A5+/3p0qaD215
    Xq8oSNORfB2oI1kQuyEAJ5xvPTdfwRlyRG3lFYodrRg6poUBD/8fNTXMtzydpRgy
    zUQZh/18F6B/iW6cbiRN9r2Hkh05Om+q0/6w0DdZe+8YrNpfhSObr/1eVZbKGMIY
    qKmyZbBNu5ysENIK5MPc14mUeKmFjpN840VR5zunoU52lqpLDua/qIM8idk86xGW
    xx2ml43DO/Ya/tVZVok0mO0TUjzJIfPqyvr455IsIut4RlCR9Iq0EDTve2/ZwCuG
    hSjpTUFGSiQrR2JK2Evp+o6AETUkBCO1aw0PpQBPDQ==
    -----END CERTIFICATE-----
  letsencryptRootCA: |
    -----BEGIN CERTIFICATE-----
    MIIFmDCCA4CgAwIBAgIQU9C87nMpOIFKYpfvOHFHFDANBgkqhkiG9w0BAQsFADBm
    MQswCQYDVQQGEwJVUzEzMDEGA1UEChMqKFNUQUdJTkcpIEludGVybmV0IFNlY3Vy
    aXR5IFJlc2VhcmNoIEdyb3VwMSIwIAYDVQQDExkoU1RBR0lORykgUHJldGVuZCBQ
    ZWFyIFgxMB4XDTE1MDYwNDExMDQzOFoXDTM1MDYwNDExMDQzOFowZjELMAkGA1UE
    BhMCVVMxMzAxBgNVBAoTKihTVEFHSU5HKSBJbnRlcm5ldCBTZWN1cml0eSBSZXNl
    YXJjaCBHcm91cDEiMCAGA1UEAxMZKFNUQUdJTkcpIFByZXRlbmQgUGVhciBYMTCC
    AiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBALbagEdDTa1QgGBWSYkyMhsc
    ZXENOBaVRTMX1hceJENgsL0Ma49D3MilI4KS38mtkmdF6cPWnL++fgehT0FbRHZg
    jOEr8UAN4jH6omjrbTD++VZneTsMVaGamQmDdFl5g1gYaigkkmx8OiCO68a4QXg4
    wSyn6iDipKP8utsE+x1E28SA75HOYqpdrk4HGxuULvlr03wZGTIf/oRt2/c+dYmD
    oaJhge+GOrLAEQByO7+8+vzOwpNAPEx6LW+crEEZ7eBXih6VP19sTGy3yfqK5tPt
    TdXXCOQMKAp+gCj/VByhmIr+0iNDC540gtvV303WpcbwnkkLYC0Ft2cYUyHtkstO
    fRcRO+K2cZozoSwVPyB8/J9RpcRK3jgnX9lujfwA/pAbP0J2UPQFxmWFRQnFjaq6
    rkqbNEBgLy+kFL1NEsRbvFbKrRi5bYy2lNms2NJPZvdNQbT/2dBZKmJqxHkxCuOQ
    FjhJQNeO+Njm1Z1iATS/3rts2yZlqXKsxQUzN6vNbD8KnXRMEeOXUYvbV4lqfCf8
    mS14WEbSiMy87GB5S9ucSV1XUrlTG5UGcMSZOBcEUpisRPEmQWUOTWIoDQ5FOia/
    GI+Ki523r2ruEmbmG37EBSBXdxIdndqrjy+QVAmCebyDx9eVEGOIpn26bW5LKeru
    mJxa/CFBaKi4bRvmdJRLAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB
    Af8EBTADAQH/MB0GA1UdDgQWBBS182Xy/rAKkh/7PH3zRKCsYyXDFDANBgkqhkiG
    9w0BAQsFAAOCAgEAncDZNytDbrrVe68UT6py1lfF2h6Tm2p8ro42i87WWyP2LK8Y
    nLHC0hvNfWeWmjZQYBQfGC5c7aQRezak+tHLdmrNKHkn5kn+9E9LCjCaEsyIIn2j
    qdHlAkepu/C3KnNtVx5tW07e5bvIjJScwkCDbP3akWQixPpRFAsnP+ULx7k0aO1x
    qAeaAhQ2rgo1F58hcflgqKTXnpPM02intVfiVVkX5GXpJjK5EoQtLceyGOrkxlM/
    sTPq4UrnypmsqSagWV3HcUlYtDinc+nukFk6eR4XkzXBbwKajl0YjztfrCIHOn5Q
    CJL6TERVDbM/aAPly8kJ1sWGLuvvWYzMYgLzDul//rUF10gEMWaXVZV51KpS9DY/
    5CunuvCXmEQJHo7kGcViT7sETn6Jz9KOhvYcXkJ7po6d93A/jy4GKPIPnsKKNEmR
    xUuXY4xRdh45tMJnLTUDdC9FIU0flTeO9/vNpVA8OPU1i14vCz+MU8KX1bV3GXm/
    fxlB7VBBjX9v5oUep0o/j68R/iDlCOM4VVfRa8gX6T2FU7fNdatvGro7uQzIvWof
    gN9WUwCbEMBy/YhBSrXycKA8crgGg3x1mIsopn88JKwmMBa68oS7EHM9w7C4y71M
    7DiA+/9Qdp9RBWJpTS9i/mDnJg1xvo8Xz49mrrgfmcAXTCJqXi24NatI3Oc=
    -----END CERTIFICATE-----
  oidc:
    subClaimMapper: sub
    usernameClaimMapper: ${CLAIM.upn}
  otomi:
    globalPullSecret:
      email: not@us.ed
      server: docker.io
    hasCloudLB: false
    hasExternalDNS: false
    hasExternalIDP: false
    isHomeMonitored: false
    isMultitenant: false
    nodeSelector: {}
    version: latest
  policies:
    banned-image-tags:
      enabled: false
    container-limits:
      enabled: false
    psp-allowed-repos:
      enabled: false
    psp-allowed-users:
      enabled: false
    psp-apparmor:
      enabled: false
    psp-capabilities:
      enabled: false
    psp-forbidden-sysctls:
      enabled: false
    psp-host-filesystem:
      enabled: false
    psp-host-networking-ports:
      enabled: false
    psp-host-security:
      enabled: false
    psp-privileged:
      enabled: false
    psp-seccomp:
      enabled: false
    psp-selinux:
      enabled: false
  teamConfig:
    admin:
      id: admin
  version: 5
_derived:
  caCert: |
    -----BEGIN CERTIFICATE-----
    MIIFmDCCA4CgAwIBAgIQU9C87nMpOIFKYpfvOHFHFDANBgkqhkiG9w0BAQsFADBm
    MQswCQYDVQQGEwJVUzEzMDEGA1UEChMqKFNUQUdJTkcpIEludGVybmV0IFNlY3Vy
    aXR5IFJlc2VhcmNoIEdyb3VwMSIwIAYDVQQDExkoU1RBR0lORykgUHJldGVuZCBQ
    ZWFyIFgxMB4XDTE1MDYwNDExMDQzOFoXDTM1MDYwNDExMDQzOFowZjELMAkGA1UE
    BhMCVVMxMzAxBgNVBAoTKihTVEFHSU5HKSBJbnRlcm5ldCBTZWN1cml0eSBSZXNl
    YXJjaCBHcm91cDEiMCAGA1UEAxMZKFNUQUdJTkcpIFByZXRlbmQgUGVhciBYMTCC
    AiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBALbagEdDTa1QgGBWSYkyMhsc
    ZXENOBaVRTMX1hceJENgsL0Ma49D3MilI4KS38mtkmdF6cPWnL++fgehT0FbRHZg
    jOEr8UAN4jH6omjrbTD++VZneTsMVaGamQmDdFl5g1gYaigkkmx8OiCO68a4QXg4
    wSyn6iDipKP8utsE+x1E28SA75HOYqpdrk4HGxuULvlr03wZGTIf/oRt2/c+dYmD
    oaJhge+GOrLAEQByO7+8+vzOwpNAPEx6LW+crEEZ7eBXih6VP19sTGy3yfqK5tPt
    TdXXCOQMKAp+gCj/VByhmIr+0iNDC540gtvV303WpcbwnkkLYC0Ft2cYUyHtkstO
    fRcRO+K2cZozoSwVPyB8/J9RpcRK3jgnX9lujfwA/pAbP0J2UPQFxmWFRQnFjaq6
    rkqbNEBgLy+kFL1NEsRbvFbKrRi5bYy2lNms2NJPZvdNQbT/2dBZKmJqxHkxCuOQ
    FjhJQNeO+Njm1Z1iATS/3rts2yZlqXKsxQUzN6vNbD8KnXRMEeOXUYvbV4lqfCf8
    mS14WEbSiMy87GB5S9ucSV1XUrlTG5UGcMSZOBcEUpisRPEmQWUOTWIoDQ5FOia/
    GI+Ki523r2ruEmbmG37EBSBXdxIdndqrjy+QVAmCebyDx9eVEGOIpn26bW5LKeru
    mJxa/CFBaKi4bRvmdJRLAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB
    Af8EBTADAQH/MB0GA1UdDgQWBBS182Xy/rAKkh/7PH3zRKCsYyXDFDANBgkqhkiG
    9w0BAQsFAAOCAgEAncDZNytDbrrVe68UT6py1lfF2h6Tm2p8ro42i87WWyP2LK8Y
    nLHC0hvNfWeWmjZQYBQfGC5c7aQRezak+tHLdmrNKHkn5kn+9E9LCjCaEsyIIn2j
    qdHlAkepu/C3KnNtVx5tW07e5bvIjJScwkCDbP3akWQixPpRFAsnP+ULx7k0aO1x
    qAeaAhQ2rgo1F58hcflgqKTXnpPM02intVfiVVkX5GXpJjK5EoQtLceyGOrkxlM/
    sTPq4UrnypmsqSagWV3HcUlYtDinc+nukFk6eR4XkzXBbwKajl0YjztfrCIHOn5Q
    CJL6TERVDbM/aAPly8kJ1sWGLuvvWYzMYgLzDul//rUF10gEMWaXVZV51KpS9DY/
    5CunuvCXmEQJHo7kGcViT7sETn6Jz9KOhvYcXkJ7po6d93A/jy4GKPIPnsKKNEmR
    xUuXY4xRdh45tMJnLTUDdC9FIU0flTeO9/vNpVA8OPU1i14vCz+MU8KX1bV3GXm/
    fxlB7VBBjX9v5oUep0o/j68R/iDlCOM4VVfRa8gX6T2FU7fNdatvGro7uQzIvWof
    gN9WUwCbEMBy/YhBSrXycKA8crgGg3x1mIsopn88JKwmMBa68oS7EHM9w7C4y71M
    7DiA+/9Qdp9RBWJpTS9i/mDnJg1xvo8Xz49mrrgfmcAXTCJqXi24NatI3Oc=
    -----END CERTIFICATE-----

    -----BEGIN CERTIFICATE-----
    MIIFWzCCA0OgAwIBAgIQTfQrldHumzpMLrM7jRBd1jANBgkqhkiG9w0BAQsFADBm
    MQswCQYDVQQGEwJVUzEzMDEGA1UEChMqKFNUQUdJTkcpIEludGVybmV0IFNlY3Vy
    aXR5IFJlc2VhcmNoIEdyb3VwMSIwIAYDVQQDExkoU1RBR0lORykgUHJldGVuZCBQ
    ZWFyIFgxMB4XDTIwMDkwNDAwMDAwMFoXDTI1MDkxNTE2MDAwMFowWTELMAkGA1UE
    BhMCVVMxIDAeBgNVBAoTFyhTVEFHSU5HKSBMZXQncyBFbmNyeXB0MSgwJgYDVQQD
    Ex8oU1RBR0lORykgQXJ0aWZpY2lhbCBBcHJpY290IFIzMIIBIjANBgkqhkiG9w0B
    AQEFAAOCAQ8AMIIBCgKCAQEAu6TR8+74b46mOE1FUwBrvxzEYLck3iasmKrcQkb+
    gy/z9Jy7QNIAl0B9pVKp4YU76JwxF5DOZZhi7vK7SbCkK6FbHlyU5BiDYIxbbfvO
    L/jVGqdsSjNaJQTg3C3XrJja/HA4WCFEMVoT2wDZm8ABC1N+IQe7Q6FEqc8NwmTS
    nmmRQm4TQvr06DP+zgFK/MNubxWWDSbSKKTH5im5j2fZfg+j/tM1bGaczFWw8/lS
    nukyn5J2L+NJYnclzkXoh9nMFnyPmVbfyDPOc4Y25aTzVoeBKXa/cZ5MM+WddjdL
    biWvm19f1sYn1aRaAIrkppv7kkn83vcth8XCG39qC2ZvaQIDAQABo4IBEDCCAQww
    DgYDVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATAS
    BgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBTecnpI3zHDplDfn4Uj31c3S10u
    ZTAfBgNVHSMEGDAWgBS182Xy/rAKkh/7PH3zRKCsYyXDFDA2BggrBgEFBQcBAQQq
    MCgwJgYIKwYBBQUHMAKGGmh0dHA6Ly9zdGcteDEuaS5sZW5jci5vcmcvMCsGA1Ud
    HwQkMCIwIKAeoByGGmh0dHA6Ly9zdGcteDEuYy5sZW5jci5vcmcvMCIGA1UdIAQb
    MBkwCAYGZ4EMAQIBMA0GCysGAQQBgt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCN
    DLam9yN0EFxxn/3p+ruWO6n/9goCAM5PT6cC6fkjMs4uas6UGXJjr5j7PoTQf3C1
    vuxiIGRJC6qxV7yc6U0X+w0Mj85sHI5DnQVWN5+D1er7mp13JJA0xbAbHa3Rlczn
    y2Q82XKui8WHuWra0gb2KLpfboYj1Ghgkhr3gau83pC/WQ8HfkwcvSwhIYqTqxoZ
    Uq8HIf3M82qS9aKOZE0CEmSyR1zZqQxJUT7emOUapkUN9poJ9zGc+FgRZvdro0XB
    yphWXDaqMYph0DxW/10ig5j4xmmNDjCRmqIKsKoWA52wBTKKXK1na2ty/lW5dhtA
    xkz5rVZFd4sgS4J0O+zm6d5GRkWsNJ4knotGXl8vtS3X40KXeb3A5+/3p0qaD215
    Xq8oSNORfB2oI1kQuyEAJ5xvPTdfwRlyRG3lFYodrRg6poUBD/8fNTXMtzydpRgy
    zUQZh/18F6B/iW6cbiRN9r2Hkh05Om+q0/6w0DdZe+8YrNpfhSObr/1eVZbKGMIY
    qKmyZbBNu5ysENIK5MPc14mUeKmFjpN840VR5zunoU52lqpLDua/qIM8idk86xGW
    xx2ml43DO/Ya/tVZVok0mO0TUjzJIfPqyvr455IsIut4RlCR9Iq0EDTve2/ZwCuG
    hSjpTUFGSiQrR2JK2Evp+o6AETUkBCO1aw0PpQBPDQ==
    -----END CERTIFICATE-----
  caCertRoot: |
    -----BEGIN CERTIFICATE-----
    MIIFmDCCA4CgAwIBAgIQU9C87nMpOIFKYpfvOHFHFDANBgkqhkiG9w0BAQsFADBm
    MQswCQYDVQQGEwJVUzEzMDEGA1UEChMqKFNUQUdJTkcpIEludGVybmV0IFNlY3Vy
    aXR5IFJlc2VhcmNoIEdyb3VwMSIwIAYDVQQDExkoU1RBR0lORykgUHJldGVuZCBQ
    ZWFyIFgxMB4XDTE1MDYwNDExMDQzOFoXDTM1MDYwNDExMDQzOFowZjELMAkGA1UE
    BhMCVVMxMzAxBgNVBAoTKihTVEFHSU5HKSBJbnRlcm5ldCBTZWN1cml0eSBSZXNl
    YXJjaCBHcm91cDEiMCAGA1UEAxMZKFNUQUdJTkcpIFByZXRlbmQgUGVhciBYMTCC
    AiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBALbagEdDTa1QgGBWSYkyMhsc
    ZXENOBaVRTMX1hceJENgsL0Ma49D3MilI4KS38mtkmdF6cPWnL++fgehT0FbRHZg
    jOEr8UAN4jH6omjrbTD++VZneTsMVaGamQmDdFl5g1gYaigkkmx8OiCO68a4QXg4
    wSyn6iDipKP8utsE+x1E28SA75HOYqpdrk4HGxuULvlr03wZGTIf/oRt2/c+dYmD
    oaJhge+GOrLAEQByO7+8+vzOwpNAPEx6LW+crEEZ7eBXih6VP19sTGy3yfqK5tPt
    TdXXCOQMKAp+gCj/VByhmIr+0iNDC540gtvV303WpcbwnkkLYC0Ft2cYUyHtkstO
    fRcRO+K2cZozoSwVPyB8/J9RpcRK3jgnX9lujfwA/pAbP0J2UPQFxmWFRQnFjaq6
    rkqbNEBgLy+kFL1NEsRbvFbKrRi5bYy2lNms2NJPZvdNQbT/2dBZKmJqxHkxCuOQ
    FjhJQNeO+Njm1Z1iATS/3rts2yZlqXKsxQUzN6vNbD8KnXRMEeOXUYvbV4lqfCf8
    mS14WEbSiMy87GB5S9ucSV1XUrlTG5UGcMSZOBcEUpisRPEmQWUOTWIoDQ5FOia/
    GI+Ki523r2ruEmbmG37EBSBXdxIdndqrjy+QVAmCebyDx9eVEGOIpn26bW5LKeru
    mJxa/CFBaKi4bRvmdJRLAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB
    Af8EBTADAQH/MB0GA1UdDgQWBBS182Xy/rAKkh/7PH3zRKCsYyXDFDANBgkqhkiG
    9w0BAQsFAAOCAgEAncDZNytDbrrVe68UT6py1lfF2h6Tm2p8ro42i87WWyP2LK8Y
    nLHC0hvNfWeWmjZQYBQfGC5c7aQRezak+tHLdmrNKHkn5kn+9E9LCjCaEsyIIn2j
    qdHlAkepu/C3KnNtVx5tW07e5bvIjJScwkCDbP3akWQixPpRFAsnP+ULx7k0aO1x
    qAeaAhQ2rgo1F58hcflgqKTXnpPM02intVfiVVkX5GXpJjK5EoQtLceyGOrkxlM/
    sTPq4UrnypmsqSagWV3HcUlYtDinc+nukFk6eR4XkzXBbwKajl0YjztfrCIHOn5Q
    CJL6TERVDbM/aAPly8kJ1sWGLuvvWYzMYgLzDul//rUF10gEMWaXVZV51KpS9DY/
    5CunuvCXmEQJHo7kGcViT7sETn6Jz9KOhvYcXkJ7po6d93A/jy4GKPIPnsKKNEmR
    xUuXY4xRdh45tMJnLTUDdC9FIU0flTeO9/vNpVA8OPU1i14vCz+MU8KX1bV3GXm/
    fxlB7VBBjX9v5oUep0o/j68R/iDlCOM4VVfRa8gX6T2FU7fNdatvGro7uQzIvWof
    gN9WUwCbEMBy/YhBSrXycKA8crgGg3x1mIsopn88JKwmMBa68oS7EHM9w7C4y71M
    7DiA+/9Qdp9RBWJpTS9i/mDnJg1xvo8Xz49mrrgfmcAXTCJqXi24NatI3Oc=
    -----END CERTIFICATE-----
  oidcBaseUrl: https://keycloak.demo.eks.otomi.cloud/realms/otomi
  oidcBaseUrlBackchannel: http://keycloak-http.keycloak/realms/otomi
  oidcWellKnownUrl: https://keycloak.demo.eks.otomi.cloud/realms/otomi/.well-known/openid-configuration
  oidcWellKnownUrlBackchannel: http://keycloak-http.keycloak/realms/otomi/.well-known/openid-configuration
  supportedCloud: true
  untrustedCA: false
_files:
  alerts:
    drone:
      - slack
    email:
      critical: admins@yourdoma.in
      nonCritical: admins@yourdoma.in
    groupInterval: 5m
    receivers:
      - slack
      - email
    repeatInterval: 3h
    slack:
      url: https://hooks.slack.com/services/id
  apps:
    alertmanager:
      enabled: true
    argocd:
      enabled: true
    cert-manager:
      customRootCA: |
        -----BEGIN CERTIFICATE-----
        MIIDdDCCAlygAwIBAgIBATANBgkqhkiG9w0BAQUFADBuMRUwEwYDVQQDEwxyZWRr
        dWJlcy5jb20xCzAJBgNVBAYTAk5MMRAwDgYDVQQIEwdVdHJlY2h0MRAwDgYDVQQH
        EwdVdHJlY2h0MQ4wDAYDVQQKEwVPdG9taTEUMBIGA1UECxMLU2VsZi1TaWduZWQw
        HhcNMjExMTAzMTAxOTAyWhcNMzExMTAzMTAxOTAyWjBuMRUwEwYDVQQDEwxyZWRr
        dWJlcy5jb20xCzAJBgNVBAYTAk5MMRAwDgYDVQQIEwdVdHJlY2h0MRAwDgYDVQQH
        EwdVdHJlY2h0MQ4wDAYDVQQKEwVPdG9taTEUMBIGA1UECxMLU2VsZi1TaWduZWQw
        ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQD4quPwHrharZhmqVQx/75N
        M7Vp3ZmSd3gR2u8Dc1PkmEa6W9CiheVAB5KCzdN5sWaOlFKTy5sHg/zvyYZjvNGX
        xaHCa4i6OyRgiTOC4NCrxuN5010G0vAxYaM1aIFcqObXuLcaK6miOybDLRfDxoHl
        g/TKqdiPOMEb2ZgphFxL7oYXjkobOggH+wzwwMIc/1nA3eBjEPsIkQehmb0R0Kxw
        K5VHPCvbPQb3USVqUs+NmsuCxmqkTtI32WqR0IuNAVqjaD9oNqcsKBgUOPYLYXM8
        xsTzIn0QPysJIKUCRn1quHwvCQc1RnQBB8UG6iJboVdRe0GNS13vu5ikhoCb0oyV
        AgMBAAGjHTAbMAwGA1UdEwQFMAMBAf8wCwYDVR0PBAQDAgL0MA0GCSqGSIb3DQEB
        BQUAA4IBAQBJWHPGnTqXME/MGwG2nAG/JqiCQ0ZOOyKgwN97wrQIlbra2BaUT1K4
        tMDOjZlft1Luipg/IkzzMXt4eAmqGMxLIweqbve6aLm8KTpHkLdxLm3VPnhK8zzg
        ysRRRjtkMo9KUOSvrS2dFsY+fQnbGUzpRcK8RrzM6CpgIaf29neP1xLUWQuUsy5y
        yKCb6OQ9vaJBf/uvz73rQq0ym4Kx0FCFssshaja6lbz/jqCJmppdZE5pe5jvMVVv
        ae5UQLbva0JyLY8Rc1vSY/epIHMLrV90GEagSkF/ejgF3uh8cliLuUYFAFyU8TnN
        FWG+enMJfR04aWjp8M3MQ1IoCPVxoXxI
        -----END CERTIFICATE-----
      customRootCAKey: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIEpQIBAAKCAQEA+Krj8B64Wq2YZqlUMf++TTO1ad2Zknd4EdrvA3NT5JhGulvQ
        ooXlQAeSgs3TebFmjpRSk8ubB4P878mGY7zRl8WhwmuIujskYIkzguDQq8bjedNd
        BtLwMWGjNWiBXKjm17i3Giupojsmwy0Xw8aB5YP0yqnYjzjBG9mYKYRcS+6GF45K
        GzoIB/sM8MDCHP9ZwN3gYxD7CJEHoZm9EdCscCuVRzwr2z0G91ElalLPjZrLgsZq
        pE7SN9lqkdCLjQFao2g/aDanLCgYFDj2C2FzPMbE8yJ9ED8rCSClAkZ9arh8LwkH
        NUZ0AQfFBuoiW6FXUXtBjUtd77uYpIaAm9KMlQIDAQABAoIBAQCTsIuotdYwpSH6
        9172Qzq3h5qbwe3QO/yoPivvFLQi9P4s+RM1M+kw2k5+Odj8UgzjadyRwz/UeuPj
        VwHmguLJDaxBWLTgRvgYDeT2Oqg1He9FD/AUeXwHGEJjGiqa6gYQ4bh+Zqhdnlwr
        V8DhmijUNEdThwUEK2UmMVpabi6TOW/dfO6sbnOHYwx326qF3LhYcUrmdeowEGLT
        UhxdXJQQUsfD+zft6dcPnqucIxd5OEsn3L8/pcumOxHUGFBHDMuB5nTpcZyDxKaN
        joC0zQy0BDQIMN1F7wNRukSiSYqvRvmvztF2Ka0yEWAdvBBXVVN8nKQw69oGoe9B
        EQ5HSkKBAoGBAP0KnCE19jW9jq1CWFkFwd1BALWA3GOuxJqSX6M5APM+JRBR4UOZ
        AUOogvGlrc1ns58q7oNoc1CHiMHd2lNFgfqWqopfVz1Tt9qHqU6VoJnkmJlJRriE
        57F08RTjslTFzYEsE9zMlL1xa5pq1aGAFB0/mYuxopRw39mS14ugxF1pAoGBAPuT
        MFLfp2wttGe2WhVepOnhD13sEMGCS6GE16jinjP3qAWIPM/Wdy+Ab8n+KWQkYPLw
        UsQVi+41LWFIexjzdrq9rG5LQbZdjDCyR4eomDGZhc0Vtsu79NbVrnSmjH8w6psa
        DXB1uN9/VcCzae/hRpk2Q6zFiMcPE8utUU5RvFRNAoGBAJ19+wsYoPN11dW0k3Rl
        BvKEwMI3P/SzFB74t5nJovPCXCM6MzB1jLnlqgppCjHsN3n7qJQVcKBQmye+w2JM
        wseK+v5AtPWwo5/aC+CjdGAUTX4qg1/ZKLPkiyBrT9U/f9bD7mDg3DrE2yozEGAC
        bYJ+0TyHBR/K2Sh8Irf/CfjxAoGBAM4wuwCRkpUVeLEwQfEV2zBdZ8zg+HLBqd8+
        E8u1wVhyeOHf4YevDYx/RiBWEfKj5ln3Ir7XshKQvxrm3w16Liur3bGgOMGRNp+K
        3xmO0v6EB6gpTeL5sBiMlinBf5GXtBFfbvhnZBi6Mrx30DHtf4F/ekQWup37+4uK
        CAOa9jJZAoGAYbU4CoCxktBECxAVAjtpvYW5176cxiitd75s1ANhXGiOH1A6/y6H
        rnZ+fMAuvPjrDXbtmqJsq0RXq1E07ng4ZDIjN+0pShVFQdakJRFo1y+d3b82lBYX
        EZrfMBCWVj31dXeGEHfVvOpwrQ5ffTzs2lVmTh7Ft61gs4TJ7gNTDbE=
        -----END RSA PRIVATE KEY-----
      email: test@test.local
      issuer: letsencrypt
    cluster-overprovisioner:
      enabled: true
    drone:
      adminUser: somesecretvalue
      debug: false
      githubAdmins:
        org: redkubes
        team: admins
        token: somesecretvalue
      orgsFilter: redkubes
      repoFilter: redkubes
      sharedSecret: somesecretvalue
      sourceControl:
        github:
          clientID: somesecretvalue
          clientSecretValue: somesecretvalue
          server: https://github.com
        provider: github
    external-secrets:
      logLevel: warn
    gatekeeper:
      auditFromCache: false
      auditInterval: 60
      constraintViolationsLimit: 20
      dataSync:
        - kind: CronJob
          version: v1
        - kind: DaemonSet
          version: v1
        - kind: Deployment
          version: v1
        - kind: Job
          version: v1
        - kind: Pod
          version: v1
        - kind: StatefulSet
          version: v1
      disableValidatingWebhook: false
      emitAdmissionEvents: false
      emitAuditEvents: false
      enabled: true
      excludedNamespaces:
        - sandbox
      logLevel: INFO
      replicas: 1
    gitea:
      adminUsername: otomi-admin
      postgresqlPassword: postgresqlPassword
    grafana:
      enabled: true
    harbor:
      adminPassword: somesecretvalue
      backup:
        enabled: true
        schedule: 0/3 * * * *
      core:
        secret: somesecretvalue
        xsrfKey: somesecretvalue
      databasePassword: somesecretvalue
      enabled: true
      jobservice:
        secret: somesecretvalue
      persistence:
        imageChartStorage:
          gcs:
            bucket: otomi-harbor
            encodedkey: somesecretvalue
            rootdirectory: /google/demo
          type: gcs
      registry:
        credentials:
          htpasswd: somesecretvalue
          password: somesecretvalue
          username: somesecretvalue
        secret: somesecretvalue
      secretKey: somesecretvalue
    hello:
      enabled: true
    httpbin:
      enabled: true
    ingress-nginx:
      _rawValues:
        controller:
          config:
            modsecurity-snippet: |
              SecRuleRemoveById 911100
      maxBodySize: 1024m
      modsecurity:
        enabled: true
      resources:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 192Mi
    istio:
      autoscaling:
        ingressgateway:
          maxReplicas: 5
          minReplicas: 1
        pilot:
          maxReplicas: 5
          minReplicas: 1
      egressGateway:
        enabled: false
      global:
        logging:
          level: default:warn
      resources:
        ingressgateway:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        pilot:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 100Mi
        prometheus:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 500Mi
        proxy:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 20m
            memory: 80Mi
    jaeger:
      enabled: true
    keycloak:
      enabled: true
      idp:
        alias: redkubes-azure
        clientID: otomi
        clientSecret: somsecretvalue
      postgresqlPassword: postgresqlPassword
      theme: otomi
    kiali:
      enabled: true
    knative:
      enabled: true
    kubeapps:
      enabled: true
      postgresqlPassword: postgresqlPassword
    kubeclarity:
      databasePassword: 123jefkejoql
      enabled: true
    loki:
      adminPassword: somesecretvalue
      enabled: true
      persistence:
        size: 20Gi
      retention:
        duration: 24h
        period: 24h
      storage:
        azure:
          account_key: account_key
          account_name: account_name
          container_name: container_name
        storageType: azure
      v11StartDate: 2021-05-13
    metrics-server:
      enabled: true
    minio:
      enabled: true
      persistence:
        enabled: true
        size: 20Gi
      provisioning:
        enabled: true
    oauth2-proxy:
      config:
        cookieSecret: gkhugxJsPjhbCybH
    oauth2-proxy-redis:
      password: gkhugxJsPjhbCybH
    otomi-api:
      editorInactivityTimeout: 5
      git:
        email: some@secret.value
        password: somesecretvalue
        repoUrl: github.com/redkubes/otomi-values-demo.git
        user: someuser
    prometheus:
      enabled: true
      remoteWrite:
        enabled: true
        otomiThanos: false
        rwConfig:
          basicAuth:
            enabled: true
            password: blalalalalal
            username: testaccount
          customConfig: |-
            writeRelabelConfigs:
              - targetLabel: tenant
                sourceLabels:
                - instance
                replacement: otomi-aks-ont
              - targetLabel: cluster
                sourceLabels:
                - instance
                replacement: otomi-aks-ont
              - targetLabel: customer_id
                sourceLabels:
                - instance
                replacement: "00001"
            queueConfig:
              capacity: 18000
              maxShards: 100
              maxSamplesPerSend: 6000
          target: https://remote.target.io/api/v1/push
    redis-shared:
      enabled: false
      sizes:
        master: 1Gi
    vault:
      enabled: true
      logLevel: warn
    velero:
      enabled: true
      provider:
        azure:
          config:
            bucket: otomi
            resourceGroup: test
            storageAccount: test
          environment: AzurePublicCloud
          secretContents:
            aadClientId: bla12344556666658457847476
            aadClientSecret: somesecret
            resourceGroup: wokernodes_rg
            subscriptionId: test
            tenantId: test
  azure:
    appgw:
      isManaged: true
    monitor:
      clientId: somesecretvalue
      clientSecret: somesecretvalue
      subscriptionId: somesecretvalue
      tenantId: somesecretvalue
    resourceGroup: somevalue
    subscriptionId: somevalue
    tenantId: somevalue
  backup:
    platformSchedule:
      enabled: true
      schedule: 0 0 * * *
      ttl: 240h
    teamSchedule:
      enabled: true
      schedule: 0 0 * * *
      ttl: 240h
  cloud:
    skipStorageClasses:
      - std
      - std-immediate
  cluster:
    apiName: eks_otomi-cloud_eu-central-1_otomi-eks-demo
    apiServer: https://1.1.1.1:8443
    domainSuffix: demo.eks.otomi.cloud
    k8sContext: otomi-eks-demo
    k8sVersion: "1.22"
    name: demo
    owner: redkubes
    provider: azure
    region: eu-central-1
  dns:
    domainFilters:
      - otomi.cloud
    provider:
      azure-private-dns:
        aadClientId: 00-aadClientId
        aadClientSecret: 00-aadClientSecret
        resourceGroup: external-dns
        subscriptionId: 00-subscriptionId
        tenantId: 00-tenantId
    zoneIdFilters:
      - otomi
  home:
    email:
      critical: admins@yourdoma.in
    receivers:
      - slack
    slack:
      channel: mon-otomi
      channelCrit: mon-otomi-crit
      url: https://hooks.slack.com/services/id
  ingress:
    classes:
      - className: private
        loadBalancerSubnet: subnet
        network: private
      - className: net-a
        loadBalancerIP: 11.0.0.1
        loadBalancerRG: myrg
        network: public
        sourceIpAddressFiltering: 10.0.0.0/24
  kms:
    sops:
      azure:
        clientId: somesecretvalue
        clientSecret: somesecretvalue
        keys: somesecretvalue
        tenantId: somesecretvalue
  oidc:
    adminGroupID: someAdminGroupID
    clientID: someClientID
    clientSecret: somesecretvalue
    issuer: https://login.microsoftonline.com/xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    subClaimMapper: oid
    teamAdminGroupID: xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
  otomi:
    additionalClusters:
      - domainSuffix: demo.eks.otomi.cloud
        name: demo
        provider: aws
    adminPassword: bladibla
    hasCloudLB: false
    hasExternalDNS: true
    hasExternalIDP: true
    isHomeMonitored: true
    isMultitenant: true
    nodeSelector:
      otomi: otomi-sys
    version: main
  policies:
    banned-image-tags:
      enabled: false
      tags:
        - latest
    container-limits:
      cpu: "2"
      enabled: true
      memory: 2Gi
    psp-allowed-repos:
      enabled: false
      repos:
        - harbor.demo.gke.otomi.cloud
        - harbor.demo.aks.otomi.cloud
        - harbor.demo.eks.otomi.cloud
    psp-allowed-users:
      enabled: true
      fsGroup:
        ranges:
          - max: 65535
            min: 1
        rule: MayRunAs
      runAsGroup:
        ranges:
          - max: 65535
            min: 1
        rule: MayRunAs
      runAsUser:
        rule: MustRunAsNonRoot
      supplementalGroups:
        ranges:
          - max: 65535
            min: 1
        rule: MayRunAs
    psp-apparmor:
      allowedProfiles:
        - runtime/default
      enabled: true
    psp-capabilities:
      allowedCapabilities:
        - NET_BIND_SERVICE
        - NET_RAW
      enabled: false
      requiredDropCapabilities:
        - ALL
    psp-forbidden-sysctls:
      enabled: true
      forbiddenSysctls:
        - kernel.*
        - net.*
        - abi.*
        - fs.*
        - sunrpc.*
        - user.*
        - vm.*
    psp-host-filesystem:
      allowedHostPaths:
        - pathPrefix: /tmp/
          readOnly: false
      enabled: true
    psp-host-networking-ports:
      enabled: true
    psp-host-security:
      enabled: true
    psp-privileged:
      enabled: true
    psp-seccomp:
      allowedProfiles:
        - runtime/default
      enabled: false
    psp-selinux:
      enabled: false
      seLinuxContext: RunAsAny
  smtp:
    auth_password: somesecretvalue
    auth_username: no-reply@doma.in
    from: no-reply@doma.in
    hello: doma.in
    smarthost: smtp-relay.gmail.com:587
  teamConfig:
    admin:
      id: admin
      jobs: []
      password: somesecretvalue
      secrets: []
      services:
        - auth: true
          domain: hello.team-admin.demo.eks.otomi.cloud
          id: cb5149c4-8ea5-4c5a-be04-a37258658bd0
          name: hello-admin
          networkPolicy:
            ingressPrivate:
              mode: AllowAll
          ownHost: true
          port: 80
          type: public
    demo:
      alerts:
        email:
          critical: admins@yourdoma.in
          nonCritical: admins@yourdoma.in
        receivers:
          - email
      id: demo
      jobs:
        - enabled: true
          env:
            receiver: world
          files:
            /config/some-file: someData
            /config/some-file3: |-
              some data on another line
              another line
            /config/some/file2: someData2
          image:
            pullPolicy: IfNotPresent
            repository: busybox
            tag: latest
          init:
            - command:
                - echo
                - hello foo $foo
              env:
                foo: bar
              image:
                pullPolicy: IfNotPresent
                repository: busybox
                tag: latest
              resources:
                limits:
                  cpu: 50m
                  memory: 64Mi
                requests:
                  cpu: 50m
                  memory: 64Mi
              secrets:
                - mysecret-generic
                - hello-otomi
          name: contains-everything
          podSecurityContext:
            fsGroup: 1002
            runAsGroup: 1002
            runAsNonRoot: true
            runAsUser: 1002
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 64Mi
          runPolicy: Always
          script: echo "hello $receiver"
          secretMounts:
            /config/some-folder: someSecret
          secrets:
            - mysecret-generic
            - hello-otomi
          securityContext:
            runAsGroup: 1002
            runAsNonRoot: true
            runAsUser: 1002
          type: Job
        - enabled: true
          env:
            receiver: world
          files:
            /some-file: someData
            /some-file2: someData2
            /some-file3: |-
              some data on another line
              another line
          image:
            pullPolicy: IfNotPresent
            repository: busybox
            tag: latest
          init:
            - env:
                foo: bar
              image:
                pullPolicy: IfNotPresent
                repository: busybox
                tag: latest
              resources:
                limits:
                  cpu: 50m
                  memory: 64Mi
                requests:
                  cpu: 50m
                  memory: 64Mi
              script: |
                echo "hello $receiver"
          name: also-contains-everything-and-cron
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 64Mi
          runPolicy: Always
          schedule: 0 1 * * *
          script: echo "hello $receiver"
          secrets:
            - generic-example
            - hello-otomi
          type: CronJob
        - enabled: true
          image:
            pullPolicy: IfNotPresent
            repository: busybox
            tag: latest
          name: base
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 64Mi
          script: echo "hello world"
          type: Job
        - enabled: true
          image:
            pullPolicy: IfNotPresent
            repository: busybox
            tag: latest
          name: base-cronjob
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 64Mi
          schedule: 0 1 * * *
          script: echo "hello world"
          type: CronJob
        - enabled: true
          image:
            pullPolicy: IfNotPresent
            repository: busybox
            tag: latest
          init:
            - env:
                foo: bar
              image:
                pullPolicy: IfNotPresent
                repository: busybox
                tag: latest
              resources:
                limits:
                  cpu: 50m
                  memory: 64Mi
                requests:
                  cpu: 50m
                  memory: 64Mi
              script: echo "hello world"
          name: init-cronjob
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 64Mi
          schedule: 0 1 * * *
          script: echo "hello $receiver"
          type: CronJob
      networkPolicy:
        egressPublic: true
        ingressPrivate: true
      oidc:
        groupMapping: somesecretvalue
      password: somesecretvalue
      resourceQuota:
        services.loadbalancers: "1"
      secrets:
        - entries:
            - TARGET
          id: 15bb8ecf-1fef-474c-9143-a1f19c81c378
          name: mysecret-generic
          teamId: demo
          type: generic
        - id: d29ab8f8-1281-4eba-81b0-be01baed03a6
          name: mysecret-registry
          teamId: demo
          type: docker-registry
        - ca: ca.crt
          crt: tls.crt
          id: efe80c21-cfb2-4436-a9dd-e6838ea9c4f9
          key: tls.key
          name: mysecret-tls
          teamId: demo
          type: tls
      selfService:
        apps: []
        service:
          - ingress
          - networkPolicy
        team:
          - alerts
      services:
        - auth: true
          domain: hello.team-demo.demo.eks.otomi.cloud
          id: cb5149c4-8ea5-4c5a-be04-a37258658bd3
          ksvc:
            image:
              repository: otomi/nodejs-helloworld
              tag: v1.2.12
            resources:
              limits:
                cpu: 50m
                memory: 64Mi
              requests:
                cpu: 50m
                memory: 64Mi
            scaleToZero: false
            secrets:
              - mysecret-generic
          name: hello
          networkPolicy:
            ingressPrivate:
              mode: AllowAll
          ownHost: true
          port: 80
          type: public
        - domain: tlspass.eks.dev.otomi.cloud
          id: cb5149c4-8ea5-4c5a-be04-a37258658bd4
          ksvc:
            image:
              repository: otomi/nodejs-helloworld
              tag: v1.2.12
            resources:
              limits:
                cpu: 50m
                memory: 64Mi
              requests:
                cpu: 50m
                memory: 64Mi
            scaleToZero: false
            secrets:
              - mysecret-generic
            securityContext:
              runAsUser: 1002
          name: hello-auth
          ownHost: true
          paths: []
          port: 80
          type: public
        - id: cb5149c4-8ea5-4c5a-be04-a37258658bd5
          ksvc:
            containerPort: 80
            files:
              /etc/nginx.conf: >
                events {

                }


                http {
                  log_format main '$remote_addr - $remote_user [$time_local]  $status '
                  '"$request" $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
                  access_log /var/log/nginx/access.log main;
                  error_log  /var/log/nginx/error.log;

                  server {
                    listen 443 ssl;

                    root /usr/share/nginx/html;
                    index index.html;

                    server_name tlspass.eks.dev.otomi.cloud;
                    ssl_certificate /etc/nginx-server-certs/tls.crt;
                    ssl_certificate_key /etc/nginx-server-certs/tls.key;
                  }
                }
            image:
              repository: nginx
              tag: latest
            resources:
              limits:
                cpu: 50m
                memory: 64Mi
              requests:
                cpu: 50m
                memory: 64Mi
            scaleToZero: false
            secretMounts:
              /etc/nginx-server-certs: mysecret-tls
          name: tlspass
          port: 443
          tlsPass: true
          type: public
        - id: cb5149c4-8ea5-4c5a-be04-a37258658bd6
          name: some-svc
          networkPolicy:
            ingressPrivate:
              mode: AllowAll
          port: 80
          type: cluster
        - hasCert: true
          name: has-cert-svc
          paths:
            - /jeho
          type: public
        - name: service-a
          networkPolicy:
            egressPublic:
              - domain: domain1.com
                ports:
                  - number: 8443
                    protocol: TCP
              - domain: domain2.com
                ports:
                  - number: 443
                    protocol: HTTPS
              - domain: 185.199.110.153
                ports:
                  - number: 443
                    protocol: TCP
              - domain: ae::1
                ports:
                  - number: 443
                    protocol: TCP
            ingressPrivate:
              allow:
                - team: team1
                - service: service-x
                  team: team2
              mode: AllowOnly
          type: cluster
        - name: service-b
          networkPolicy:
            egressPublic: []
            ingressPrivate:
              mode: DenyAll
          type: cluster
        - name: service-d
          networkPolicy:
            ingressPrivate:
              mode: AllowOnly
          type: cluster
        - ingressClassName: net-a
          name: service-e
          type: public
  version: 5
adminApps:
  - deps:
      - prometheus
    ingress:
      - auth: true
        namespace: monitoring
        port: 9093
        svc: po-alertmanager
        type: public
    name: alertmanager
    tags:
      - alerting
      - observability
  - ingress:
      - auth: true
        namespace: argocd
        svc: argocd-server
        type: public
    isShared: true
    name: argocd
    ownHost: true
    tags:
      - cicd
      - gitops
  - name: cert-manager
    tags:
      - ingress
      - security
      - tls
  - ingress:
      - auth: true
        namespace: drone
        removeRequestHeaders:
          - authorization
        svc: drone
        type: public
      - forwardPath: true
        namespace: drone
        paths:
          - /hook
          - /api/user
          - /api/repo
        removeRequestHeaders:
          - authorization
        svc: drone
        type: public
    isShared: true
    name: drone
    ownHost: true
    tags:
      - cicd
      - deployment
      - pipeline
  - name: external-dns
    tags:
      - ingress
      - security
      - tls
  - name: gatekeeper
    tags:
      - security
      - policies
      - observability
  - ingress:
      - namespace: gitea
        port: 3000
        svc: gitea-http
        type: public
    isShared: true
    name: gitea
    ownHost: true
    tags:
      - git
  - deps:
      - prometheus
    ingress:
      - auth: true
        namespace: grafana
        removeRequestHeaders:
          - authorization
        svc: po-grafana
        type: public
    name: grafana
    ownHost: true
    shortcuts:
      - description: NGINX ingress controller metrics
        path: /d/nginx/nginx-ingress-controller?orgId=1&refresh=5s
        title: NGINX
    tags:
      - tracing
      - telemetry
      - observability
  - ingress:
      - auth: true
        namespace: harbor
        svc: harbor-portal
        type: public
      - auth: true
        forwardPath: true
        namespace: harbor
        paths:
          - /api/
          - /c/
        svc: harbor-core
        type: public
      - forwardPath: true
        namespace: harbor
        paths:
          - /chartrepo/
          - /service/
          - /v1/
          - /v2/
        svc: harbor-core
        type: public
    isShared: true
    name: harbor
    ownHost: true
    tags:
      - security
  - hide: true
    name: hello
    tags:
      - demo
  - ingress:
      - auth: true
        namespace: httpbin
        svc: httpbin
        type: public
    isShared: true
    name: httpbin
    ownHost: true
    tags:
      - dev
      - testing
      - debugging
  - name: ingress-nginx
    tags:
      - ingress
      - auth
  - name: istio
    tags:
      - ingress
      - egress
      - routing
      - security
      - tls
      - observability
      - policies
  - deps:
      - istio
    ingress:
      - auth: true
        forwardPath: true
        namespace: jaeger
        port: 16686
        svc: jaeger-operator-jaeger-query
        type: public
    isShared: true
    name: jaeger
    tags:
      - ingress
      - telemetry
      - observability
  - ingress:
      - namespace: keycloak
        svc: keycloak-http
        type: public
    name: keycloak
    ownHost: true
    shortcuts:
      - description: Edit your account settings.
        path: /realms/otomi/account/
        title: Account
    tags:
      - auth
      - sso
  - deps:
      - istio
    ingress:
      - auth: true
        forwardPath: true
        namespace: kiali
        port: 20001
        removeRequestHeaders:
          - authorization
        svc: kiali
        type: public
    name: kiali
    path: /api/auth/openid_redirect
    tags:
      - tracing
      - telemetry
      - observability
  - deps:
      - istio
    name: knative
    tags:
      - serverless
      - functions
  - deps:
      - operator-lifecycle-manager
    ingress:
      - namespace: kubeapps
        svc: kubeapps
        type: public
    isShared: true
    name: kubeapps
    ownHost: true
    tags:
      - dev
      - apps
  - ingress:
      - auth: true
        namespace: kubeclarity
        port: 8080
        svc: kubeclarity
        type: public
    isShared: true
    name: kubeclarity
    ownHost: true
    tags:
      - security
  - deps:
      - grafana
      - prometheus
    name: loki
    path: /explore?orgId=1&left=%5B"now-1h","now","Loki",%7B%7D,%7B"mode":"Logs"%7D,%7B"ui":%5Btrue,true,true,"none"%5D%7D%5D
    shortcuts:
      - description: All logs generated in the "ingress" namespace
        path: /explore?orgId=1&left=%5B"now-1h","now","Loki",%7B"expr":"%7Bnamespace%3D%5C"ingress%5C"%7D","refId":"A"%7D%5D
        title: Ingress logs
      - description: All OWASP rule violations
        path: /explore?orgId=1&left=%5B"now-1h","now","Loki",%7B"expr":"%7Bnamespace%3D%5C"ingress%5C"%7D%20%7C%3D%5C"ModSecurity:%20%5C""%7D%5D
        title: OWASP violations
      - description: Kube API violations logged by OPA gatekepeer
        path: /explore?orgId=1&left=%5B"now-1h","now","Loki",%7B"expr":"%7Bnamespace%3D%5C"gatekeeper-system%5C"%7D%20%7C%3D%5C"Policy:%20%5C""%7D%5D
        title: Gatekeeper violations
    tags:
      - logging
      - telemetry
      - observability
    useHost: grafana
  - ingress:
      - auth: true
        namespace: minio
        port: 9001
        removeRequestHeaders:
          - authorization
        svc: minio
        type: public
    name: minio
    ownHost: true
    tags:
      - storage
      - backup
  - hide: true
    ingress:
      - auth: true
        namespace: otomi
        paths:
          - /api/
        svc: otomi-api
        type: public
      - auth: true
        namespace: otomi
        svc: otomi-console
        type: public
    isShared: true
    name: otomi
    ownHost: true
  - ingress:
      - auth: true
        namespace: monitoring
        port: 9090
        svc: po-prometheus
        type: public
    name: prometheus
    tags:
      - metrics
      - observability
  - deps:
      - external-secrets
    ingress:
      - auth: true
        namespace: vault
        port: 8200
        svc: vault
        type: public
    isShared: true
    name: vault
    ownHost: true
    path: /ui/vault/auth?redirect_to=%2Fvault%2Fsecrets%2Fsecret%2Flist%2Fteams%2F#NS#%2F&with=oidc
    tags:
      - secrets
      - security
      - observability
  - name: velero
    tags:
      - backup
alerts:
  drone:
    - slack
  email:
    critical: admins@yourdoma.in
    nonCritical: admins@yourdoma.in
  groupInterval: 5m
  receivers:
    - slack
    - email
  repeatInterval: 3h
  slack:
    channel: mon-otomi
    channelCrit: mon-otomi-crit
    url: https://hooks.slack.com/services/id
apps:
  alertmanager:
    enabled: true
    image:
      pullPolicy: IfNotPresent
      tag: v0.24.0
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
  argocd:
    autoscaling:
      enabled: true
      maxReplicas: 10
      minReplicas: 1
    enabled: true
    resources:
      controller:
        limits:
          cpu: 1
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256M
      redis:
        limits:
          cpu: 1
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256M
      repo:
        limits:
          cpu: 1
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256M
      server:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
  aws-alb-ingress-controller:
    enabled: false
  aws-ebs-csi-driver:
    enabled: false
  cert-manager:
    customRootCA: |
      -----BEGIN CERTIFICATE-----
      MIIDdDCCAlygAwIBAgIBATANBgkqhkiG9w0BAQUFADBuMRUwEwYDVQQDEwxyZWRr
      dWJlcy5jb20xCzAJBgNVBAYTAk5MMRAwDgYDVQQIEwdVdHJlY2h0MRAwDgYDVQQH
      EwdVdHJlY2h0MQ4wDAYDVQQKEwVPdG9taTEUMBIGA1UECxMLU2VsZi1TaWduZWQw
      HhcNMjExMTAzMTAxOTAyWhcNMzExMTAzMTAxOTAyWjBuMRUwEwYDVQQDEwxyZWRr
      dWJlcy5jb20xCzAJBgNVBAYTAk5MMRAwDgYDVQQIEwdVdHJlY2h0MRAwDgYDVQQH
      EwdVdHJlY2h0MQ4wDAYDVQQKEwVPdG9taTEUMBIGA1UECxMLU2VsZi1TaWduZWQw
      ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQD4quPwHrharZhmqVQx/75N
      M7Vp3ZmSd3gR2u8Dc1PkmEa6W9CiheVAB5KCzdN5sWaOlFKTy5sHg/zvyYZjvNGX
      xaHCa4i6OyRgiTOC4NCrxuN5010G0vAxYaM1aIFcqObXuLcaK6miOybDLRfDxoHl
      g/TKqdiPOMEb2ZgphFxL7oYXjkobOggH+wzwwMIc/1nA3eBjEPsIkQehmb0R0Kxw
      K5VHPCvbPQb3USVqUs+NmsuCxmqkTtI32WqR0IuNAVqjaD9oNqcsKBgUOPYLYXM8
      xsTzIn0QPysJIKUCRn1quHwvCQc1RnQBB8UG6iJboVdRe0GNS13vu5ikhoCb0oyV
      AgMBAAGjHTAbMAwGA1UdEwQFMAMBAf8wCwYDVR0PBAQDAgL0MA0GCSqGSIb3DQEB
      BQUAA4IBAQBJWHPGnTqXME/MGwG2nAG/JqiCQ0ZOOyKgwN97wrQIlbra2BaUT1K4
      tMDOjZlft1Luipg/IkzzMXt4eAmqGMxLIweqbve6aLm8KTpHkLdxLm3VPnhK8zzg
      ysRRRjtkMo9KUOSvrS2dFsY+fQnbGUzpRcK8RrzM6CpgIaf29neP1xLUWQuUsy5y
      yKCb6OQ9vaJBf/uvz73rQq0ym4Kx0FCFssshaja6lbz/jqCJmppdZE5pe5jvMVVv
      ae5UQLbva0JyLY8Rc1vSY/epIHMLrV90GEagSkF/ejgF3uh8cliLuUYFAFyU8TnN
      FWG+enMJfR04aWjp8M3MQ1IoCPVxoXxI
      -----END CERTIFICATE-----
    customRootCAKey: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEpQIBAAKCAQEA+Krj8B64Wq2YZqlUMf++TTO1ad2Zknd4EdrvA3NT5JhGulvQ
      ooXlQAeSgs3TebFmjpRSk8ubB4P878mGY7zRl8WhwmuIujskYIkzguDQq8bjedNd
      BtLwMWGjNWiBXKjm17i3Giupojsmwy0Xw8aB5YP0yqnYjzjBG9mYKYRcS+6GF45K
      GzoIB/sM8MDCHP9ZwN3gYxD7CJEHoZm9EdCscCuVRzwr2z0G91ElalLPjZrLgsZq
      pE7SN9lqkdCLjQFao2g/aDanLCgYFDj2C2FzPMbE8yJ9ED8rCSClAkZ9arh8LwkH
      NUZ0AQfFBuoiW6FXUXtBjUtd77uYpIaAm9KMlQIDAQABAoIBAQCTsIuotdYwpSH6
      9172Qzq3h5qbwe3QO/yoPivvFLQi9P4s+RM1M+kw2k5+Odj8UgzjadyRwz/UeuPj
      VwHmguLJDaxBWLTgRvgYDeT2Oqg1He9FD/AUeXwHGEJjGiqa6gYQ4bh+Zqhdnlwr
      V8DhmijUNEdThwUEK2UmMVpabi6TOW/dfO6sbnOHYwx326qF3LhYcUrmdeowEGLT
      UhxdXJQQUsfD+zft6dcPnqucIxd5OEsn3L8/pcumOxHUGFBHDMuB5nTpcZyDxKaN
      joC0zQy0BDQIMN1F7wNRukSiSYqvRvmvztF2Ka0yEWAdvBBXVVN8nKQw69oGoe9B
      EQ5HSkKBAoGBAP0KnCE19jW9jq1CWFkFwd1BALWA3GOuxJqSX6M5APM+JRBR4UOZ
      AUOogvGlrc1ns58q7oNoc1CHiMHd2lNFgfqWqopfVz1Tt9qHqU6VoJnkmJlJRriE
      57F08RTjslTFzYEsE9zMlL1xa5pq1aGAFB0/mYuxopRw39mS14ugxF1pAoGBAPuT
      MFLfp2wttGe2WhVepOnhD13sEMGCS6GE16jinjP3qAWIPM/Wdy+Ab8n+KWQkYPLw
      UsQVi+41LWFIexjzdrq9rG5LQbZdjDCyR4eomDGZhc0Vtsu79NbVrnSmjH8w6psa
      DXB1uN9/VcCzae/hRpk2Q6zFiMcPE8utUU5RvFRNAoGBAJ19+wsYoPN11dW0k3Rl
      BvKEwMI3P/SzFB74t5nJovPCXCM6MzB1jLnlqgppCjHsN3n7qJQVcKBQmye+w2JM
      wseK+v5AtPWwo5/aC+CjdGAUTX4qg1/ZKLPkiyBrT9U/f9bD7mDg3DrE2yozEGAC
      bYJ+0TyHBR/K2Sh8Irf/CfjxAoGBAM4wuwCRkpUVeLEwQfEV2zBdZ8zg+HLBqd8+
      E8u1wVhyeOHf4YevDYx/RiBWEfKj5ln3Ir7XshKQvxrm3w16Liur3bGgOMGRNp+K
      3xmO0v6EB6gpTeL5sBiMlinBf5GXtBFfbvhnZBi6Mrx30DHtf4F/ekQWup37+4uK
      CAOa9jJZAoGAYbU4CoCxktBECxAVAjtpvYW5176cxiitd75s1ANhXGiOH1A6/y6H
      rnZ+fMAuvPjrDXbtmqJsq0RXq1E07ng4ZDIjN+0pShVFQdakJRFo1y+d3b82lBYX
      EZrfMBCWVj31dXeGEHfVvOpwrQ5ffTzs2lVmTh7Ft61gs4TJ7gNTDbE=
      -----END RSA PRIVATE KEY-----
    email: test@test.local
    issuer: letsencrypt
    resources:
      limits:
        cpu: 200m
        memory: 384Mi
      requests:
        cpu: 50m
        memory: 64Mi
    stage: production
  cluster-autoscaler:
    enabled: false
  cluster-overprovisioner:
    cpu: 1000m
    enabled: true
    memory: 1000Mi
  demo-tlspass:
    enabled: false
  drone:
    adminIsMachine: false
    adminUser: somesecretvalue
    debug: false
    githubAdmins:
      org: redkubes
      team: admins
      token: somesecretvalue
    image:
      agent:
        pullPolicy: IfNotPresent
      server:
        pullPolicy: IfNotPresent
    orgsFilter: redkubes
    repoFilter: redkubes
    resources:
      agent:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 40m
          memory: 32Mi
      runner:
        requests:
          cpu: 1000
          memory: 1Gi
      server:
        limits:
          cpu: 200m
          memory: 256Mi
        requests:
          cpu: 40m
          memory: 32Mi
    sharedSecret: somesecretvalue
    sourceControl:
      github:
        clientID: somesecretvalue
        clientSecretValue: somesecretvalue
        server: https://github.com
      provider: github
    trace: false
  drone-admit-members:
    enabled: true
  external-dns:
    enabled: true
    logLevel: info
  external-secrets:
    enabled: true
    logLevel: warn
    pollingInterval: 60000
  gatekeeper:
    auditFromCache: false
    auditInterval: 60
    constraintViolationsLimit: 20
    dataSync:
      - kind: CronJob
        version: v1
      - kind: DaemonSet
        version: v1
      - kind: Deployment
        version: v1
      - kind: Job
        version: v1
      - kind: Pod
        version: v1
      - kind: StatefulSet
        version: v1
    disableValidatingWebhook: false
    emitAdmissionEvents: false
    emitAuditEvents: false
    enabled: true
    excludedNamespaces:
      - sandbox
    image:
      pullPolicy: IfNotPresent
      tag: v3.7.1
    logLevel: INFO
    replicas: 1
    resources:
      audit:
        limits:
          cpu: 1000m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 256Mi
      controller:
        limits:
          cpu: 1000m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 256Mi
  gitea:
    adminPassword: bladibla
    adminUsername: otomi-admin
    enabled: false
    image:
      gitea:
        pullPolicy: IfNotPresent
        tag: 1.16.6
      memcached:
        pullPolicy: IfNotPresent
        tag: 1.6.12
      postgresql:
        pullPolicy: IfNotPresent
        tag: 13.5.0
    postgresqlPassword: postgresqlPassword
    resources:
      gitea:
        limits:
          cpu: 1
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 128Mi
      memcached:
        limits:
          cpu: 250m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      postgresql:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
  grafana:
    enabled: true
    image:
      pullPolicy: IfNotPresent
      tag: 9.0.1
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
  harbor:
    adminPassword: somesecretvalue
    backup:
      enabled: true
      schedule: 0/3 * * * *
    core:
      secret: somesecretvalue
      xsrfKey: somesecretvalue
    databasePassword: somesecretvalue
    enabled: true
    image:
      pullPolicy: IfNotPresent
      tag: v2.5.4
    jobservice:
      secret: somesecretvalue
    persistence:
      imageChartStorage:
        gcs:
          bucket: otomi-harbor
          encodedkey: somesecretvalue
          rootdirectory: /google/demo
        type: gcs
    privateLibrary: true
    registry:
      credentials:
        htpasswd: somesecretvalue
        password: somesecretvalue
        username: somesecretvalue
      secret: somesecretvalue
    resources:
      chartmuseum:
        limits:
          cpu: 400m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      clair:
        limits:
          cpu: 400m
          memory: 2Gi
        requests:
          cpu: 100m
          memory: 1Gi
      clair-adapter:
        limits:
          cpu: 400m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 256Mi
      core:
        limits:
          cpu: 100m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 256Mi
      database:
        limits:
          cpu: 100m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 256Mi
      jobservice:
        limits:
          cpu: 100m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 256Mi
      portal:
        limits:
          cpu: 400m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      redis:
        limits:
          cpu: 400m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      registry:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
      registry-controller:
        limits:
          cpu: 100m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 256Mi
      trivy:
        limits:
          cpu: 400m
          memory: 2Gi
        requests:
          cpu: 100m
          memory: 1Gi
    secretKey: somesecretvalue
  hello:
    enabled: true
  host-mods:
    enabled: false
  httpbin:
    enabled: true
  ingress-azure:
    appgw:
      usePrivateIP: false
    enabled: false
  ingress-nginx:
    _rawValues:
      controller:
        config:
          modsecurity-snippet: |
            SecRuleRemoveById 911100
    autoscaling:
      enabled: true
      maxReplicas: 10
      minReplicas: 1
    image:
      pullPolicy: IfNotPresent
      tag: v1.1.2
    maxBodySize: 1024m
    maxBodySizeBytes: 1073741824
    modsecurity:
      block: false
      enabled: true
      owasp: true
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 192Mi
  istio:
    autoscaling:
      egressgateway:
        maxReplicas: 10
        minReplicas: 1
      ingressgateway:
        maxReplicas: 5
        minReplicas: 1
      pilot:
        maxReplicas: 5
        minReplicas: 1
    egressGateway:
      enabled: false
    enabled: true
    global:
      logging:
        level: default:warn
    image:
      pullPolicy: IfNotPresent
      tag: 1.13.1
    meshConfig:
      defaultConfig:
        tracing:
          sampling: 0.1
    operatorNamespace: istio-operator
    resources:
      egressgateway:
        limits:
          cpu: "1"
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      ingressgateway:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      pilot:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 100Mi
      prometheus:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 200m
          memory: 500Mi
      proxy:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 20m
          memory: 80Mi
  jaeger:
    enabled: true
  keycloak:
    address: https://keycloak.demo.eks.otomi.cloud
    adminPassword: bladibla
    adminUsername: otomi-admin
    enabled: true
    idp:
      alias: redkubes-azure
      clientID: otomi
      clientSecret: somsecretvalue
    image:
      keycloak:
        pullPolicy: IfNotPresent
        tag: 15.1.1
      postgresql:
        pullPolicy: IfNotPresent
        tag: 13.5.0
    postgresqlPassword: postgresqlPassword
    resources:
      keycloak:
        limits:
          cpu: 1
          memory: 1.5Gi
        requests:
          cpu: 100m
          memory: 1Gi
      postgresql:
        limits:
          cpu: 1
          memory: 1.5Gi
        requests:
          cpu: 100m
          memory: 1Gi
    theme: otomi
  kiali:
    enabled: true
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 50m
        memory: 32Mi
  knative:
    enabled: true
    serving:
      replicas: 1
  kube-descheduler:
    enabled: false
    schedule: "*/30 * * * *"
  kubeapps:
    autoscaling:
      dashboard:
        maxReplicas: 10
        minReplicas: 1
      frontend:
        maxReplicas: 10
        minReplicas: 1
      kubeops:
        maxReplicas: 10
        minReplicas: 1
    enableCommonGround: false
    enabled: true
    postgresqlPassword: postgresqlPassword
  kubeclarity:
    databasePassword: 123jefkejoql
    enabled: true
    logLevel: warning
  kured:
    enabled: true
  loki:
    adminPassword: somesecretvalue
    enabled: true
    persistence:
      size: 20Gi
    resources:
      limits:
        cpu: 800m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
    retention:
      duration: 24h
      period: 24h
    storage:
      azure:
        account_key: account_key
        account_name: account_name
        container_name: container_name
      storageType: azure
    v11StartDate: 2021-05-13
  metrics-server:
    apiServer:
      create: true
      enabled: true
    enabled: true
    extraArgs:
      kubelet-preferred-address-types: InternalIP
    resources:
      limits:
        cpu: 300m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi
  minio:
    enabled: true
    persistence:
      enabled: true
      size: 20Gi
    provisioning:
      enabled: true
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 128Mi
  oauth2-proxy:
    config:
      cookieSecret: gkhugxJsPjhbCybH
  oauth2-proxy-redis:
    architecture: standalone
    password: gkhugxJsPjhbCybH
    resources:
      master:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 64Mi
      replica:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 64Mi
      sentinel:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 64Mi
    sizes:
      master: 1Gi
      replica: 1Gi
      sentinel: 1Gi
  otomi-api:
    editorInactivityTimeout: 5
    git:
      branch: main
      email: some@secret.value
      password: somesecretvalue
      repoUrl: github.com/redkubes/otomi-values-demo.git
      user: someuser
    resources:
      api:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 256Mi
      tools:
        limits:
          cpu: 600m
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 128Mi
  otomi-console:
    resources:
      limits:
        cpu: 400m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 128Mi
  prometheus:
    enabled: true
    image:
      kube-state-metrics:
        pullPolicy: IfNotPresent
      node-exporter:
        pullPolicy: IfNotPresent
      prometheus:
        pullPolicy: IfNotPresent
        tag: v2.36.1
    remoteWrite:
      enabled: true
      insecureSkipVerify: false
      otomiThanos: false
      rwConfig:
        basicAuth:
          enabled: true
          password: blalalalalal
          username: testaccount
        customConfig: |-
          writeRelabelConfigs:
            - targetLabel: tenant
              sourceLabels:
              - instance
              replacement: otomi-aks-ont
            - targetLabel: cluster
              sourceLabels:
              - instance
              replacement: otomi-aks-ont
            - targetLabel: customer_id
              sourceLabels:
              - instance
              replacement: "00001"
          queueConfig:
            capacity: 18000
            maxShards: 100
            maxSamplesPerSend: 6000
        target: https://remote.target.io/api/v1/push
    replicas: 1
    resources:
      kube-state-metrics:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      node-exporter:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
      prometheus:
        limits:
          cpu: "3"
          memory: 3Gi
        requests:
          cpu: 100m
          memory: 512Mi
    retention: 1d
    retentionSize: 4GB
    scrapeInterval: 60s
    storageSize: 5Gi
  prometheus-blackbox-exporter: {}
  prometheus-msteams:
    enabled: false
  promtail: {}
  redis-shared:
    architecture: standalone
    enabled: false
    resources:
      master:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 64Mi
      replica:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 64Mi
      sentinel:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 200m
          memory: 64Mi
    sizes:
      master: 1Gi
      replica: 1Gi
      sentinel: 1Gi
  snapshot-controller:
    enabled: false
  tigera-operator:
    enabled: false
  vault:
    enabled: true
    image:
      pullPolicy: IfNotPresent
      tag: 1.15.2
    logLevel: warn
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 256Mi
  velero:
    enabled: true
    logLevel: info
    provider:
      azure:
        config:
          bucket: otomi
          resourceGroup: test
          storageAccount: test
        environment: AzurePublicCloud
        secretContents:
          aadClientId: bla12344556666658457847476
          aadClientSecret: somesecret
          resourceGroup: wokernodes_rg
          subscriptionId: test
          tenantId: test
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
      requests:
        cpu: 500m
        memory: 128Mi
azure:
  appgw:
    isManaged: true
  monitor:
    azureLogAnalyticsSameAs: true
    clientId: somesecretvalue
    clientSecret: somesecretvalue
    subscriptionId: somesecretvalue
    tenantId: somesecretvalue
  resourceGroup: somevalue
  subscriptionId: somevalue
  tenantId: somevalue
backup:
  platformSchedule:
    enabled: true
    schedule: 0 0 * * *
    ttl: 240h
  teamSchedule:
    enabled: true
    schedule: 0 0 * * *
    ttl: 240h
cloud:
  skipStorageClasses:
    - std
    - std-immediate
cluster:
  apiName: eks_otomi-cloud_eu-central-1_otomi-eks-demo
  apiServer: https://1.1.1.1:8443
  domainSuffix: demo.eks.otomi.cloud
  k8sContext: otomi-eks-demo
  k8sVersion: "1.22"
  name: demo
  owner: redkubes
  profile: small
  provider: azure
  region: eu-central-1
dns:
  domainFilters:
    - otomi.cloud
  provider:
    azure-private-dns:
      aadClientId: 00-aadClientId
      aadClientSecret: 00-aadClientSecret
      resourceGroup: external-dns
      subscriptionId: 00-subscriptionId
      tenantId: 00-tenantId
  zoneIdFilters:
    - otomi
home:
  email:
    critical: admins@yourdoma.in
  groupInterval: 5m
  receivers:
    - slack
  repeatInterval: 3h
  slack:
    channel: mon-otomi
    channelCrit: mon-otomi-crit
    url: https://hooks.slack.com/services/id
ingress:
  classes:
    - className: platform
      network: public
    - className: private
      loadBalancerSubnet: subnet
      network: private
    - className: net-a
      loadBalancerIP: 11.0.0.1
      loadBalancerRG: myrg
      network: public
      sourceIpAddressFiltering: 10.0.0.0/24
  platformClass:
    className: platform
    network: public
k8s:
  namespaces:
    - app: argocd
      name: argocd
    - disableIstioInjection: true
      name: cert-manager
    - disableIstioInjection: true
      disablePolicyChecks: true
      name: default
    - name: drone
    - disableIstioInjection: true
      disablePolicyChecks: true
      name: drone-pipelines
    - disableIstioInjection: true
      name: external-dns
    - app: harbor
      name: harbor
    - app: gatekeeper
      disableIstioInjection: true
      name: gatekeeper-system
    - name: gitea
    - app: grafana
      name: grafana
    - disableIstioInjection: true
      name: istio-system
    - app: httpbin
      name: httpbin
    - disableIstioInjection: true
      name: ingress
    - app: jaeger
      name: jaeger
    - app: jaeger
      disableIstioInjection: true
      name: jaeger-operator
    - name: keycloak
    - app: kiali
      name: kiali
    - app: kiali
      disableIstioInjection: true
      name: kiali-operator
    - app: knative
      disableIstioInjection: true
      disablePolicyChecks: true
      name: knative-serving
    - app: kubeapps
      disableIstioInjection: true
      disablePolicyChecks: true
      name: kubeapps
    - app: kubeclarity
      name: kubeclarity
    - disableIstioInjection: true
      name: maintenance
    - app: minio
      disableIstioInjection: true
      disablePolicyChecks: true
      name: minio
    - disableIstioInjection: true
      name: monitoring
    - disableIstioInjection: true
      disablePolicyChecks: true
      name: olm
    - disableIstioInjection: true
      disablePolicyChecks: true
      name: operators
    - name: otomi
    - app: cluster-overprovisioner
      disableIstioInjection: true
      name: cluster-overprovisioner
    - app: prometheus
      disableIstioInjection: true
      name: redis
    - name: team-admin
    - disableIstioInjection: true
      disablePolicyChecks: true
      name: tigera-operator
    - app: vault
      name: vault
    - app: velero
      name: velero
kms:
  sops:
    azure:
      clientId: somesecretvalue
      clientSecret: somesecretvalue
      keys: somesecretvalue
      tenantId: somesecretvalue
letsencryptCA: |
  -----BEGIN CERTIFICATE-----
  MIIFWzCCA0OgAwIBAgIQTfQrldHumzpMLrM7jRBd1jANBgkqhkiG9w0BAQsFADBm
  MQswCQYDVQQGEwJVUzEzMDEGA1UEChMqKFNUQUdJTkcpIEludGVybmV0IFNlY3Vy
  aXR5IFJlc2VhcmNoIEdyb3VwMSIwIAYDVQQDExkoU1RBR0lORykgUHJldGVuZCBQ
  ZWFyIFgxMB4XDTIwMDkwNDAwMDAwMFoXDTI1MDkxNTE2MDAwMFowWTELMAkGA1UE
  BhMCVVMxIDAeBgNVBAoTFyhTVEFHSU5HKSBMZXQncyBFbmNyeXB0MSgwJgYDVQQD
  Ex8oU1RBR0lORykgQXJ0aWZpY2lhbCBBcHJpY290IFIzMIIBIjANBgkqhkiG9w0B
  AQEFAAOCAQ8AMIIBCgKCAQEAu6TR8+74b46mOE1FUwBrvxzEYLck3iasmKrcQkb+
  gy/z9Jy7QNIAl0B9pVKp4YU76JwxF5DOZZhi7vK7SbCkK6FbHlyU5BiDYIxbbfvO
  L/jVGqdsSjNaJQTg3C3XrJja/HA4WCFEMVoT2wDZm8ABC1N+IQe7Q6FEqc8NwmTS
  nmmRQm4TQvr06DP+zgFK/MNubxWWDSbSKKTH5im5j2fZfg+j/tM1bGaczFWw8/lS
  nukyn5J2L+NJYnclzkXoh9nMFnyPmVbfyDPOc4Y25aTzVoeBKXa/cZ5MM+WddjdL
  biWvm19f1sYn1aRaAIrkppv7kkn83vcth8XCG39qC2ZvaQIDAQABo4IBEDCCAQww
  DgYDVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATAS
  BgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBTecnpI3zHDplDfn4Uj31c3S10u
  ZTAfBgNVHSMEGDAWgBS182Xy/rAKkh/7PH3zRKCsYyXDFDA2BggrBgEFBQcBAQQq
  MCgwJgYIKwYBBQUHMAKGGmh0dHA6Ly9zdGcteDEuaS5sZW5jci5vcmcvMCsGA1Ud
  HwQkMCIwIKAeoByGGmh0dHA6Ly9zdGcteDEuYy5sZW5jci5vcmcvMCIGA1UdIAQb
  MBkwCAYGZ4EMAQIBMA0GCysGAQQBgt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCN
  DLam9yN0EFxxn/3p+ruWO6n/9goCAM5PT6cC6fkjMs4uas6UGXJjr5j7PoTQf3C1
  vuxiIGRJC6qxV7yc6U0X+w0Mj85sHI5DnQVWN5+D1er7mp13JJA0xbAbHa3Rlczn
  y2Q82XKui8WHuWra0gb2KLpfboYj1Ghgkhr3gau83pC/WQ8HfkwcvSwhIYqTqxoZ
  Uq8HIf3M82qS9aKOZE0CEmSyR1zZqQxJUT7emOUapkUN9poJ9zGc+FgRZvdro0XB
  yphWXDaqMYph0DxW/10ig5j4xmmNDjCRmqIKsKoWA52wBTKKXK1na2ty/lW5dhtA
  xkz5rVZFd4sgS4J0O+zm6d5GRkWsNJ4knotGXl8vtS3X40KXeb3A5+/3p0qaD215
  Xq8oSNORfB2oI1kQuyEAJ5xvPTdfwRlyRG3lFYodrRg6poUBD/8fNTXMtzydpRgy
  zUQZh/18F6B/iW6cbiRN9r2Hkh05Om+q0/6w0DdZe+8YrNpfhSObr/1eVZbKGMIY
  qKmyZbBNu5ysENIK5MPc14mUeKmFjpN840VR5zunoU52lqpLDua/qIM8idk86xGW
  xx2ml43DO/Ya/tVZVok0mO0TUjzJIfPqyvr455IsIut4RlCR9Iq0EDTve2/ZwCuG
  hSjpTUFGSiQrR2JK2Evp+o6AETUkBCO1aw0PpQBPDQ==
  -----END CERTIFICATE-----
letsencryptRootCA: |
  -----BEGIN CERTIFICATE-----
  MIIFmDCCA4CgAwIBAgIQU9C87nMpOIFKYpfvOHFHFDANBgkqhkiG9w0BAQsFADBm
  MQswCQYDVQQGEwJVUzEzMDEGA1UEChMqKFNUQUdJTkcpIEludGVybmV0IFNlY3Vy
  aXR5IFJlc2VhcmNoIEdyb3VwMSIwIAYDVQQDExkoU1RBR0lORykgUHJldGVuZCBQ
  ZWFyIFgxMB4XDTE1MDYwNDExMDQzOFoXDTM1MDYwNDExMDQzOFowZjELMAkGA1UE
  BhMCVVMxMzAxBgNVBAoTKihTVEFHSU5HKSBJbnRlcm5ldCBTZWN1cml0eSBSZXNl
  YXJjaCBHcm91cDEiMCAGA1UEAxMZKFNUQUdJTkcpIFByZXRlbmQgUGVhciBYMTCC
  AiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBALbagEdDTa1QgGBWSYkyMhsc
  ZXENOBaVRTMX1hceJENgsL0Ma49D3MilI4KS38mtkmdF6cPWnL++fgehT0FbRHZg
  jOEr8UAN4jH6omjrbTD++VZneTsMVaGamQmDdFl5g1gYaigkkmx8OiCO68a4QXg4
  wSyn6iDipKP8utsE+x1E28SA75HOYqpdrk4HGxuULvlr03wZGTIf/oRt2/c+dYmD
  oaJhge+GOrLAEQByO7+8+vzOwpNAPEx6LW+crEEZ7eBXih6VP19sTGy3yfqK5tPt
  TdXXCOQMKAp+gCj/VByhmIr+0iNDC540gtvV303WpcbwnkkLYC0Ft2cYUyHtkstO
  fRcRO+K2cZozoSwVPyB8/J9RpcRK3jgnX9lujfwA/pAbP0J2UPQFxmWFRQnFjaq6
  rkqbNEBgLy+kFL1NEsRbvFbKrRi5bYy2lNms2NJPZvdNQbT/2dBZKmJqxHkxCuOQ
  FjhJQNeO+Njm1Z1iATS/3rts2yZlqXKsxQUzN6vNbD8KnXRMEeOXUYvbV4lqfCf8
  mS14WEbSiMy87GB5S9ucSV1XUrlTG5UGcMSZOBcEUpisRPEmQWUOTWIoDQ5FOia/
  GI+Ki523r2ruEmbmG37EBSBXdxIdndqrjy+QVAmCebyDx9eVEGOIpn26bW5LKeru
  mJxa/CFBaKi4bRvmdJRLAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB
  Af8EBTADAQH/MB0GA1UdDgQWBBS182Xy/rAKkh/7PH3zRKCsYyXDFDANBgkqhkiG
  9w0BAQsFAAOCAgEAncDZNytDbrrVe68UT6py1lfF2h6Tm2p8ro42i87WWyP2LK8Y
  nLHC0hvNfWeWmjZQYBQfGC5c7aQRezak+tHLdmrNKHkn5kn+9E9LCjCaEsyIIn2j
  qdHlAkepu/C3KnNtVx5tW07e5bvIjJScwkCDbP3akWQixPpRFAsnP+ULx7k0aO1x
  qAeaAhQ2rgo1F58hcflgqKTXnpPM02intVfiVVkX5GXpJjK5EoQtLceyGOrkxlM/
  sTPq4UrnypmsqSagWV3HcUlYtDinc+nukFk6eR4XkzXBbwKajl0YjztfrCIHOn5Q
  CJL6TERVDbM/aAPly8kJ1sWGLuvvWYzMYgLzDul//rUF10gEMWaXVZV51KpS9DY/
  5CunuvCXmEQJHo7kGcViT7sETn6Jz9KOhvYcXkJ7po6d93A/jy4GKPIPnsKKNEmR
  xUuXY4xRdh45tMJnLTUDdC9FIU0flTeO9/vNpVA8OPU1i14vCz+MU8KX1bV3GXm/
  fxlB7VBBjX9v5oUep0o/j68R/iDlCOM4VVfRa8gX6T2FU7fNdatvGro7uQzIvWof
  gN9WUwCbEMBy/YhBSrXycKA8crgGg3x1mIsopn88JKwmMBa68oS7EHM9w7C4y71M
  7DiA+/9Qdp9RBWJpTS9i/mDnJg1xvo8Xz49mrrgfmcAXTCJqXi24NatI3Oc=
  -----END CERTIFICATE-----
oidc:
  adminGroupID: someAdminGroupID
  clientID: someClientID
  clientSecret: somesecretvalue
  issuer: https://login.microsoftonline.com/xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
  subClaimMapper: oid
  teamAdminGroupID: xxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
  usernameClaimMapper: ${CLAIM.upn}
otomi:
  additionalClusters:
    - domainSuffix: demo.eks.otomi.cloud
      name: demo
      provider: aws
  adminPassword: bladibla
  globalPullSecret:
    email: not@us.ed
    server: docker.io
  hasCloudLB: false
  hasExternalDNS: true
  hasExternalIDP: true
  isHomeMonitored: true
  isMultitenant: true
  nodeSelector:
    otomi: otomi-sys
  version: main
policies:
  banned-image-tags:
    enabled: false
    tags:
      - latest
  container-limits:
    cpu: "2"
    enabled: true
    memory: 2Gi
  psp-allowed-repos:
    enabled: false
    repos:
      - harbor.demo.gke.otomi.cloud
      - harbor.demo.aks.otomi.cloud
      - harbor.demo.eks.otomi.cloud
  psp-allowed-users:
    enabled: true
    fsGroup:
      ranges:
        - max: 65535
          min: 1
      rule: MayRunAs
    runAsGroup:
      ranges:
        - max: 65535
          min: 1
      rule: MayRunAs
    runAsUser:
      rule: MustRunAsNonRoot
    supplementalGroups:
      ranges:
        - max: 65535
          min: 1
      rule: MayRunAs
  psp-apparmor:
    allowedProfiles:
      - runtime/default
    enabled: true
  psp-capabilities:
    allowedCapabilities:
      - NET_BIND_SERVICE
      - NET_RAW
    enabled: false
    requiredDropCapabilities:
      - ALL
  psp-forbidden-sysctls:
    enabled: true
    forbiddenSysctls:
      - kernel.*
      - net.*
      - abi.*
      - fs.*
      - sunrpc.*
      - user.*
      - vm.*
  psp-host-filesystem:
    allowedHostPaths:
      - pathPrefix: /tmp/
        readOnly: false
    enabled: true
  psp-host-networking-ports:
    enabled: true
  psp-host-security:
    enabled: true
  psp-privileged:
    enabled: true
  psp-seccomp:
    allowedProfiles:
      - runtime/default
    enabled: false
  psp-selinux:
    enabled: false
    seLinuxContext: RunAsAny
smtp:
  auth_password: somesecretvalue
  auth_username: no-reply@doma.in
  from: no-reply@doma.in
  hello: doma.in
  smarthost: smtp-relay.gmail.com:587
teamApps:
  - ingress:
      - auth: true
        hasPrefix: true
        port: 9093
        svc: po-alertmanager
        type: public
    name: alertmanager
  - ingress:
      - auth: true
        forwardPath: true
        hasPrefix: true
        removeRequestHeaders:
          - authorization
        svc: po-grafana
        type: public
    name: grafana
    ownHost: true
  - name: loki
    path: /explore?orgId=1&left=%5B%22now-1h%22,%22now%22,%22Loki%22,%7B%22expr%22:%22%7Bnamespace%3D%5C%22#NS#%5C%22%7D%22%7D,%7B%22mode%22:%22Logs%22%7D,%7B%22ui%22:%5Btrue,true,true,%22none%22%5D%7D%5D
    useHost: grafana
  - ingress:
      - auth: true
        hasPrefix: true
        port: 9090
        svc: po-prometheus
        type: public
    name: prometheus
teamConfig:
  admin:
    id: admin
    jobs: []
    password: somesecretvalue
    secrets: []
    services:
      - auth: true
        domain: hello.team-admin.demo.eks.otomi.cloud
        id: cb5149c4-8ea5-4c5a-be04-a37258658bd0
        name: hello-admin
        networkPolicy:
          ingressPrivate:
            mode: AllowAll
        ownHost: true
        port: 80
        type: public
  demo:
    alerts:
      email:
        critical: admins@yourdoma.in
        nonCritical: admins@yourdoma.in
      receivers:
        - email
    id: demo
    jobs:
      - enabled: true
        env:
          receiver: world
        files:
          /config/some-file: someData
          /config/some-file3: |-
            some data on another line
            another line
          /config/some/file2: someData2
        image:
          pullPolicy: IfNotPresent
          repository: busybox
          tag: latest
        init:
          - command:
              - echo
              - hello foo $foo
            env:
              foo: bar
            image:
              pullPolicy: IfNotPresent
              repository: busybox
              tag: latest
            resources:
              limits:
                cpu: 50m
                memory: 64Mi
              requests:
                cpu: 50m
                memory: 64Mi
            secrets:
              - mysecret-generic
              - hello-otomi
        name: contains-everything
        podSecurityContext:
          fsGroup: 1002
          runAsGroup: 1002
          runAsNonRoot: true
          runAsUser: 1002
        resources:
          limits:
            cpu: 50m
            memory: 64Mi
          requests:
            cpu: 50m
            memory: 64Mi
        runPolicy: Always
        script: echo "hello $receiver"
        secretMounts:
          /config/some-folder: someSecret
        secrets:
          - mysecret-generic
          - hello-otomi
        securityContext:
          runAsGroup: 1002
          runAsNonRoot: true
          runAsUser: 1002
        type: Job
      - enabled: true
        env:
          receiver: world
        files:
          /some-file: someData
          /some-file2: someData2
          /some-file3: |-
            some data on another line
            another line
        image:
          pullPolicy: IfNotPresent
          repository: busybox
          tag: latest
        init:
          - env:
              foo: bar
            image:
              pullPolicy: IfNotPresent
              repository: busybox
              tag: latest
            resources:
              limits:
                cpu: 50m
                memory: 64Mi
              requests:
                cpu: 50m
                memory: 64Mi
            script: |
              echo "hello $receiver"
        name: also-contains-everything-and-cron
        resources:
          limits:
            cpu: 50m
            memory: 64Mi
          requests:
            cpu: 50m
            memory: 64Mi
        runPolicy: Always
        schedule: 0 1 * * *
        script: echo "hello $receiver"
        secrets:
          - generic-example
          - hello-otomi
        type: CronJob
      - enabled: true
        image:
          pullPolicy: IfNotPresent
          repository: busybox
          tag: latest
        name: base
        resources:
          limits:
            cpu: 50m
            memory: 64Mi
          requests:
            cpu: 50m
            memory: 64Mi
        script: echo "hello $receiver"
        type: Job
      - enabled: true
        image:
          pullPolicy: IfNotPresent
          repository: busybox
          tag: latest
        name: base-cronjob
        resources:
          limits:
            cpu: 50m
            memory: 64Mi
          requests:
            cpu: 50m
            memory: 64Mi
        schedule: 0 1 * * *
        script: echo "hello world"
        type: CronJob
      - enabled: true
        image:
          pullPolicy: IfNotPresent
          repository: busybox
          tag: latest
        init:
          - env:
              foo: bar
            image:
              pullPolicy: IfNotPresent
              repository: busybox
              tag: latest
            resources:
              limits:
                cpu: 50m
                memory: 64Mi
              requests:
                cpu: 50m
                memory: 64Mi
            script: echo "hello world"
        name: init-cronjob
        resources:
          limits:
            cpu: 50m
            memory: 64Mi
          requests:
            cpu: 50m
            memory: 64Mi
        schedule: 0 1 * * *
        script: echo "hello $receiver"
        type: CronJob
    networkPolicy:
      egressPublic: true
      ingressPrivate: true
    oidc:
      groupMapping: somesecretvalue
    password: somesecretvalue
    resourceQuota:
      services.loadbalancers: "1"
    secrets:
      - entries:
          - TARGET
        id: 15bb8ecf-1fef-474c-9143-a1f19c81c378
        name: mysecret-generic
        teamId: demo
        type: generic
      - id: d29ab8f8-1281-4eba-81b0-be01baed03a6
        name: mysecret-registry
        teamId: demo
        type: docker-registry
      - ca: ca.crt
        crt: tls.crt
        id: efe80c21-cfb2-4436-a9dd-e6838ea9c4f9
        key: tls.key
        name: mysecret-tls
        teamId: demo
        type: tls
    selfService:
      apps: []
      service:
        - ingress
        - networkPolicy
      team:
        - alerts
    services:
      - auth: true
        domain: hello.team-demo.demo.eks.otomi.cloud
        id: cb5149c4-8ea5-4c5a-be04-a37258658bd3
        ksvc:
          image:
            repository: otomi/nodejs-helloworld
            tag: v1.2.12
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 64Mi
          scaleToZero: false
          secrets:
            - mysecret-generic
        name: hello
        networkPolicy:
          ingressPrivate:
            mode: AllowAll
        ownHost: true
        port: 80
        type: public
      - domain: tlspass.eks.dev.otomi.cloud
        id: cb5149c4-8ea5-4c5a-be04-a37258658bd4
        ksvc:
          image:
            repository: otomi/nodejs-helloworld
            tag: v1.2.12
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 64Mi
          scaleToZero: false
          secrets:
            - mysecret-generic
          securityContext:
            runAsUser: 1002
        name: hello-auth
        ownHost: true
        paths: []
        port: 80
        type: public
      - id: cb5149c4-8ea5-4c5a-be04-a37258658bd5
        ksvc:
          containerPort: 80
          files:
            /etc/nginx.conf: >
              events {

              }


              http {
                log_format main '$remote_addr - $remote_user [$time_local]  $status '
                '"$request" $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';
                access_log /var/log/nginx/access.log main;
                error_log  /var/log/nginx/error.log;

                server {
                  listen 443 ssl;

                  root /usr/share/nginx/html;
                  index index.html;

                  server_name tlspass.eks.dev.otomi.cloud;
                  ssl_certificate /etc/nginx-server-certs/tls.crt;
                  ssl_certificate_key /etc/nginx-server-certs/tls.key;
                }
              }
          image:
            repository: nginx
            tag: latest
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 64Mi
          scaleToZero: false
          secretMounts:
            /etc/nginx-server-certs: mysecret-tls
        name: tlspass
        port: 443
        tlsPass: true
        type: public
      - id: cb5149c4-8ea5-4c5a-be04-a37258658bd6
        name: some-svc
        networkPolicy:
          ingressPrivate:
            mode: AllowAll
        port: 80
        type: cluster
      - hasCert: true
        name: has-cert-svc
        paths:
          - /jeho
        type: public
      - name: service-a
        networkPolicy:
          egressPublic:
            - domain: domain1.com
              ports:
                - number: 8443
                  protocol: TCP
            - domain: domain2.com
              ports:
                - number: 443
                  protocol: HTTPS
            - domain: 185.199.110.153
              ports:
                - number: 443
                  protocol: TCP
            - domain: ae::1
              ports:
                - number: 443
                  protocol: TCP
          ingressPrivate:
            allow:
              - team: team1
              - service: service-x
                team: team2
            mode: AllowOnly
        type: cluster
      - name: service-b
        networkPolicy:
          egressPublic: []
          ingressPrivate:
            mode: DenyAll
        type: cluster
      - name: service-d
        networkPolicy:
          ingressPrivate:
            mode: AllowOnly
        type: cluster
      - ingressClassName: net-a
        name: service-e
        type: public
version: 5
versions:
  api: main
  console: main
  core: main
  tasks: 0.2.31
  tools: 1.4.25
