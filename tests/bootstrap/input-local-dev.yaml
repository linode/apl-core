# Minimal values file with defaults
cluster:
  name: local
  k8sContext: local
  domainSuffix: local.host
otomi:
  version: 'main'
kms:
  sops:
    provider: age
apps:
  metrics-server:
    enabled: true
users:
  - email: team-member@local.host
    firstName: team-member
    lastName: localhost
    isPlatformAdmin: false
    isTeamAdmin: false
    teams: ['demo']
teamConfig:
  alpha:
    settings: {}
  demo:
    settings:
      id: demo
      selfService:
        service:
          - ingress
      networkPolicy:
        egressPublic: true
        ingressPrivate: true
    builds:
      - name: nodejs-hello-world
        tag: v0.0.1
        trigger: false
        mode:
          docker:
            repoUrl: https://github.com/linode/apl-nodejs-helloworld
            revision: HEAD
            path: ./Dockerfile
          type: docker
      - name: demo-java-maven
        tag: v0.0.1
        trigger: false
        mode:
          buildpacks:
            repoUrl: https://github.com/buildpacks/samples
            revision: HEAD
            path: apps/java-maven
          type: buildpacks
    services:
      - headers:
          response:
            set: []
        id: 78595314-cdaf-4b60-acc2-3b1a7f80fe2b
        ingressClassName: platform
        name: nodejs-helloworld
        ownHost: true
        port: 80
      - id: a106eb22-8c06-41b6-ab15-97aafb0888b5
        ingressClassName: platform
        name: nginx-deployment
        ownHost: true
        paths: []
        port: 80
      - id: 91f6af98-ad8e-4111-b916-cf1b5bdcafb0
        ingressClassName: platform
        ksvc:
          predeployed: true
        name: nginx-ksvc
        ownHost: true
        paths: []
        port: 80
    workloads:
      - name: nodejs-helloworld
        url: https://github.com/linode/apl-nodejs-helloworld.git
        path: ./
        revision: HEAD
files:
  env/teams/demo/workloadValues/nodejs-helloworld.yaml: >

    values: |
        fullnameOverride: ""
        image:
            repository: harbor.lke287297.akamai-apl.net/team-beta/beta-nodejs
            pullPolicy: IfNotPresent
            tag: latest
        containerPorts:
            - name: http
              containerPort: 8080
              protocol: TCP
        env: []
        podAnnotations: {}
        podLabels: {}
        commonLabels: {}
        serviceAccount:
            annotations: {}
            imagePullSecrets: []
        livenessProbe: {}
        readinessProbe: {}
        podSecurityContext: {}
        containerSecurityContext: {}
        servicePorts:
            - port: 80
              targetPort: http
              protocol: TCP
              name: http
        resources: {}
        nodeSelector: {}
        tolerations: []
        affinity: {}
        secrets: []
        command: []
        args: []
        initContainers: []
        volumeMounts: []
        volumes: []
        replicaCount: 2
        autoscaling:
            enabled: false
            minReplicas: 2
            maxReplicas: 10
            targetCPU: 80
            targetMemory: 80
        serviceMonitor:
            create: false
            endpoints: []
        configmap:
            create: false
            mountPath: /etc/config
            data: {}
