{{- $v := .Values }}
{{- $a := $v.apps.argocd }}
{{- $k := $v.apps.keycloak }}
apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: argocd
spec:
  # applicationInstanceLabelKey: argocd.argoproj.io/instance
  # resourceExclusions: ''
  resourceTrackingMethod: annotation
  usersAnonymousEnabled: false
  oidcConfig: |
    issuer: {{ $v._derived.oidcBaseUrl }}
    clientID: {{ $k.idp.clientID }}
    clientSecret: '$oidc.clientSecret'
    requestedScopes:
      - openid
      - profile
      - email
{{- if $v._derived.untrustedCA }}
    rootCA: |
      {{- $v._derived.caCert | nindent 6 }}
{{- end }}
  rbac:
    policy: |
      # image updater
      p, role:image-updater, applications, get, */*, allow
      p, role:image-updater, applications, update, */*, allow
      g, image-updater, role:image-updater
      # admin
      g, admin, role:admin
{{- if $v.otomi.isMultitenant }}
    defaultPolicy: ''
{{- else }}
      # not multitenant, make team-admin admin and keep global read-only
      g, team-admin, role:admin
    defaultPolicy: role:readonly
{{- end }}
  applicationSet:
    logLevel: info
    resources:
      limits:
        cpu: '500m'
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 256M
  {{- with $v.otomi | get "nodeSelector" nil }}
  nodePlacement:
    nodeSelector:
      {{- range $key, $val := . }}
      {{ $key }}: {{ $val }}
      {{- end }}
  {{- end }}
  server:
    host: argocd.{{ $v.cluster.domainSuffix }}
    insecure: true # nginx terminates tls
    autoscale:
      enabled: {{ $a.autoscaling.enabled }} 
    {{- with $a.autoscaling }}
      hpa:
        maxReplicas: {{ .maxReplicas }}
        minReplicas: {{ .minReplicas }}
        scaleTargetRef:
          apiVersion: extensions/v1
          kind: Deployment
          name: otomi-argocd
        targetCPUUtilizationPercentage: 70
    {{- end }}
    resources:
      {{- with $a | get "resources.server" nil }}
        {{- toYaml .| nindent 4 }}
      {{- else }}
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 256M
      {{- end }}
  controller:
    logLevel: info
    resources:
      {{- with $a | get "resources.controller" nil }}
        {{- toYaml .| nindent 4 }}
      {{- else }}
      limits:
        cpu: 1
        memory: 3Gi
      requests:
        cpu: 100m
        memory: 1Gi
      {{- end }}
  repo:
    logLevel: info
    resources:
      {{- with $a | get "resources.repo" nil }}
        {{- toYaml .| nindent 4 }}
      {{- else }}
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 256M
      {{- end }}
{{- if $v._derived.untrustedCA }}    
    volumeMounts:
      - name: custom-ca
        mountPath: /etc/ssl/certs/custom-ca-certificates.crt
        subPath: custom-ca-certificates.crt
    volumes:
      - name: custom-ca
        secret:
          defaultMode: 420
          secretName: custom-ca
{{- end }}
  redis:
    resources:
      {{- with $a | get "resources.redis" nil }}
        {{- toYaml .| nindent 4 }}
      {{- else }}
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 256M
      {{- end }}
  # initialRepositories: |
  #   - url: https://github.com/argoproj/my-private-repository
  #     passwordSecret:
  #       name: my-secret
  #       key: password
  #     usernameSecret:
  #       name: my-secret
  #       key: username
  #     sshPrivateKeySecret:
  #       name: my-secret
  #       key: sshPrivateKey
  #   - type: helm
  #     url: https://harbor.{{ $v.cluster.domainSuffix }}
  #     name: Harbor cluster charts
  #     usernameSecret:
  #       name: my-secret
  #       key: username
  #     passwordSecret:
  #       name: my-secret
  #       key: password
  #   - type: git
  #     url: https://github.com/argoproj/argocd-example-apps.git
  {{- if $v._derived.untrustedCA }}
  tls:
    # Initial set of certificates in the argocd-tls-certs-cm ConfigMap for connecting Git repositories via HTTPS.
    initialCerts:
      gitea.{{ $v.cluster.domainSuffix }}: |
        {{- .Values._derived.caCert | nindent 8 }}
  {{- end }}
