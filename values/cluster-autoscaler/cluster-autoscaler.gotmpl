{{- $v := .Environment.Values }}
{{- $a := $v.charts | get "cluster-autoscaler" dict }}
nameOverride: cluster-autoscaler
fullNameOverride: cluster-autoscaler
# image:
#   tag: v1.17.1
{{ $map := readFile "../../helmfile.d/snippets/provider-engine-map.gotmpl" | fromYaml }}
autoDiscovery:
  clusterName:  {{ printf "%s-%s-%s" $v.customer.name (index $map $v.cluster.provider) $v.cluster.name }}

cloudProvider: {{ $v.cluster.provider }}

{{- if eq $v.cluster.provider "azure" }}
azureClientID: {{ $v.azure.clientId }}
azureClientSecret: {{ $v.azure.clientSecret }}
azureResourceGroup: {{ $v.azure.resourceGroup }}
azureSubscriptionID: {{ $v.azure.subscriptionId }}
azureTenantID: {{ $v.azure.tenantId }}
# if using AKS azureVMType should be set to "AKS"
azureVMType: "AKS"
azureClusterName: {{ $v.clusterName }}
# azureNodeResourceGroup: "" # not needed for managed group
# if using MSI, ensure subscription ID and resource group are set
azureUseManagedIdentityExtension: false
# only azure does not have autodiscovery, so list groups:
autoscalingGroups: {{- $a.autoscalingGroups | toYaml | nindent 2 }}
{{- else if eq $v.cluster.provider "aws" }}
awsRegion: {{ $v.cluster.region }}
{{- end }}

rbac:
  create: true
  pspEnabled: false

priorityClassName: "otomi-critical"
resources:
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 256Mi

serviceMonitor:
  enabled: true
  interval: "10s"
  namespace: monitoring
   ## Defaults to whats used if you follow CoreOS [Prometheus Install Instructions](https://github.com/helm/charts/tree/master/stable/prometheus-operator#tldr)
   ## [Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#prometheus-operator-1)
   ## [Kube Prometheus Selector Label](https://github.com/helm/charts/tree/master/stable/prometheus-operator#exporters)
  # selector:
  #   prometheus: kube-prometheus

# Allow overridding the .Capabilities.KubeVersion.GitVersion (useful for "helm template" command)
# kubeTargetVersionOverride: ""
