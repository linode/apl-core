{{- $v := .Environment.Values }}
{{- $domain := printf "%s%s.%s" $v.otomi.teamPrefix "admin" $v.cluster.domain }}
{{- $n := $v | get "charts.nginx-ingress" dict }}
rbac:
  create: true
defaultBackend:
  useComponentLabel: true
  resources:
    limits:
      cpu: 20m
      memory: 20Mi
    requests:
      cpu: 10m
      memory: 10Mi  
  podAnnotations:
    sidecar.istio.io/inject: "false" # {{ if $v.otomi.hasCloudLB }}"true"{{ else }}"false"{{ end }}
{{- if eq $v.cluster.provider "azure" }}
  nodeSelector: 
    beta.kubernetes.io/os: linux
{{- end }}
  service:
    omitClusterIP: true

controller:
  useComponentLabel: true
  {{- if (hasKey $n "resources") }}
  resources: {{- $n.resources | toYaml | nindent 4 }}
  {{- else }}
  # set fixed allocation with limits same as requests
  resources:
    limits:
        cpu: 500m
        memory: 512Mi
    requests:
        cpu: 100m
        memory: 256Mi
  {{- end }}
  podAnnotations:
    sidecar.istio.io/inject: "false" # {{ if $v.otomi.hasCloudLB }}"true"{{ else }}"false"{{ end }}
  replicaCount: 2
  minAvailable: 1
  autoscaling:
    enabled: {{ $n | get "autoscaling.enabled" true }}
    minReplicas: 1
    maxReplicas: 12
    targetCPUUtilizationPercentage: 60
    targetMemoryUtilizationPercentage: 75
{{- if eq $v.cluster.provider "azure" }}
  nodeSelector: 
    beta.kubernetes.io/os: linux
{{- end }}    
  extraArgs:
    v: 3
  config:
    ssl-redirect: {{ if $v.otomi.hasCloudLB }}"false"{{ else }}"true"{{ end }}
    hsts: "true"
    disable-ipv6: "true"
    client-body-timeout: "5"
    client-header-timeout: "5"
    # enable-modsecurity: "true"
    # enable-owasp-modsecurity-crs: "true"
    http2-max-field-size: 64k
    http2-max-header-size: 128k
    proxy-buffers-number: "8"
    proxy-buffer-size: 16k
    large-client-header-buffers: 8 16k
    client-max-body-size: 1024m
    proxy-body-size: 1024m
  stats:
    enabled: true
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels: # needed to be picked up by our one and only prometheus-operator:
        release: prometheus-operator
  service:
    type: {{ if $v.otomi.hasCloudLB }}{{ if eq $v.cluster.provider "azure" }}ClusterIP{{ else }}NodePort{{ end}}{{ else }}LoadBalancer{{ end }}
    omitClusterIP: true
  publishService:
    enabled: true
