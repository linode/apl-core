{{- $v := .Values }}
{{- $n := $v.charts | get "nginx-ingress" dict }}
{{- $domain := printf "team-%s.%s" "admin" $v.cluster.domainSuffix }}
nameOverride: nginx-ingress
controller:
  containerPort:
    http: 80
    https: 443
  admissionWebhooks:
    enabled: false
    patch:
      priorityClassName: "otomi-critical"
  ingressClass: nginx
  useComponentLabel: true
  # set fixed allocation with limits same as requests
  resources:
    {{- if (hasKey $n "resources") }}
      {{- $n.resources | toYaml | nindent 4 }}
    {{- else }}
    limits:
        cpu: 2000m
        memory: 512Mi
    requests:
        cpu: 200m
        memory: 512Mi
    {{- end }}
  podAnnotations:
    sidecar.istio.io/inject: "true" # {{ if $v.otomi.hasCloudLB }}"true"{{ else }}"false"{{ end }}
    policy.otomi.io/ignore: "psp-privileged"

  replicaCount: 2
  minAvailable: 1
  autoscaling:
    enabled: {{ $n | get "autoscaling.enabled" true }}
    minReplicas: {{ $n | get "autoscaling.minReplicas" 1 }}
    maxReplicas: {{ $n | get "autoscaling.maxReplicas" 10 }}
    targetCPUUtilizationPercentage: 60
    targetMemoryUtilizationPercentage: 75
{{- if eq $v.cluster.provider "azure" }}
  nodeSelector: 
    beta.kubernetes.io/os: linux
{{- end }}
  priorityClassName: "otomi-critical"
  extraArgs:
    v: 3
    enable-ssl-passthrough: true
  config:
    ssl-redirect: {{ if $v.otomi.hasCloudLB }}"false"{{ else }}"true"{{ end }}
    hsts: "true"
    disable-ipv6: "true"
    client-body-timeout: "5"
    client-header-timeout: "5"
    enable-modsecurity: {{ $n | get "modsecurity.enabled" "false" }}
    enable-owasp-modsecurity-crs: false # modsecurity-snippet only works when this is turned off
    http2-max-field-size: 64k
    http2-max-header-size: 128k
    proxy-buffers-number: "8"
    proxy-buffer-size: 16k
    large-client-header-buffers: 8 16k
    proxy-body-size: {{ $n | get "maxBodySize" "1024m" }}
    log-format-upstream: '$remote_addr - $remote_user [$time_local] $host "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_length $request_time [$proxy_upstream_name] $upstream_addr $upstream_response_length $upstream_response_time $upstream_status'
    {{- if $n | get "modsecurity.enabled" "true" }}
    modsecurity-snippet: |
      {{ if $n | get "modsecurity.block" "true" }}SecRuleEngine On{{- end }}
      SecRequestBodyLimit {{ $n | get "maxBodySizeBytes" "1073741824" }}
      # SecAuditLogFormat JSON
      SecRuleRemoveById 920350
      {{/* so we include the owasp ruleset here if required */}}
      {{ if ($n | get "modsecurity.owasp" "false") }}Include /etc/nginx/owasp-modsecurity-crs/nginx-modsecurity.conf{{- end }}
    {{- end }}
  stats:
    enabled: true
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels: # needed to be picked up by our one and only prometheus-operator:
        prometheus: system
  service:
    # externalTrafficPolicy: Local
    type: {{ if $v.otomi.hasCloudLB }}{{ if eq $v.cluster.provider "azure" }}ClusterIP{{ else }}NodePort{{ end}}{{ else }}LoadBalancer{{ end }}
    omitClusterIP: true
    {{- with $n | get "loadBalancerIP" nil }}
    loadBalancerIP: {{ . }}
    {{- end }}
    {{ if or ($n | get "loadBalancerRG" nil) ($n | get "service.annotations" nil) }}
    annotations:
      {{- with $n | get "service.annotations" nil }}
      {{ . | toYaml | indent 6 }}
      {{- end }}
      {{- with $n | get "loadBalancerRG" nil }}
      service.beta.kubernetes.io/azure-load-balancer-resource-group: {{ . }}
      {{- end }}
    {{- end }}
  publishService:
    enabled: true

defaultBackend:
  enabled: true
  useComponentLabel: true
  priorityClassName: "otomi-critical"
  resources:
    limits:
      cpu: 20m
      memory: 20Mi
    requests:
      cpu: 10m
      memory: 10Mi

  podAnnotations:
    sidecar.istio.io/inject: "true" # {{ if $v.otomi.hasCloudLB }}"true"{{ else }}"false"{{ end }}
{{- if eq $v.cluster.provider "azure" }}
  nodeSelector: 
    beta.kubernetes.io/os: linux
{{- end }}
  service:
    omitClusterIP: true

rbac:
  create: true

{{- with .Values.otomi | get "globalPullSecret" nil }}
imagePullSecrets:
  - name: otomi-pullsecret-global
{{- end }}
