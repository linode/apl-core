{{- $v := .Values -}}
{{- $l:= $v.apps.loki }}
{{- $obj := $v.obj.provider }}
{{- $bu := $v.obj.buckets }}
{{- $useObjectStorage := eq $obj.type "minioLocal" "linode" }}

nameOverride: loki

{{- with .Values.otomi | get "globalPullSecret" nil }}
imagePullSecrets:
- name: otomi-pullsecret-global
{{- end }}

global:
  priorityClassName: otomi-critical
  {{- if eq $v.cluster.provider "scaleway" }}
  dnsService: coredns
  {{- end }}
serviceMonitor:
  enabled: true
  labels:
    prometheus: system

loki:
  podAnnotations:
    sidecar.istio.io/inject: "false"
  auth_enabled: true
  schemaConfig:
    configs:
    - from: 2020-09-07
      store: boltdb-shipper
      {{- if $useObjectStorage }}
      object_store: s3
      {{- else }}
      object_store: filesystem
      {{- end }}
      schema: v11
      index:
        prefix: loki_index_
        period: 24h
  storageConfig:
    boltdb_shipper:
      active_index_directory: /var/loki/index
      cache_location: /var/loki/index_cache
      resync_interval: 5s
      {{- if $useObjectStorage }}
      shared_store: s3
      {{- else }}
      shared_store: filesystem
      {{- end }}
    {{- if $useObjectStorage }}
    aws:
      {{- if eq $obj.type "minioLocal" }}
      s3: http://otomi-admin:{{ $v.otomi.adminPassword }}@minio.minio.svc.cluster.local.:9000/{{ $bu.loki }}
      s3forcepathstyle: true
      {{- end }}
      {{- if eq $obj.type "linode" }}
      s3: https://{{ $obj.linode.accessKeyId }}:{{ $obj.linode.secretAccessKey }}@{{ $obj.linode.region }}.linodeobjects.com/{{ $bu.loki }}     
      s3forcepathstyle: true
      sse_encryption: false
      http_config:
          idle_conn_timeout: 90s
          insecure_skip_verify: true
      backoff_config:
        min_period: 2s
        max_period: 5s
      {{- end }}
    {{- else }}
    filesystem:
      directory: "/var/loki/chunks"
    {{- end }}

  structuredConfig:
    auth_enabled: true
    {{- if $useObjectStorage }}
    compactor:
      shared_store: s3
    {{- end }}

ingester:
  resources: {{- $l.resources.ingester | toYaml | nindent 4 }}
  podAnnotations:
    policy.otomi.io/ignore: psp-host-filesystem

  autoscaling:
    enabled: {{ $l.autoscaling.ingester.enabled }}
    minReplicas: {{ $l.autoscaling.ingester.minReplicas }}
    maxReplicas: {{ $l.autoscaling.ingester.maxReplicas }}
    targetCPUUtilizationPercentage: {{ $l.autoscaling.ingester.targetCPUUtilizationPercentage }}
    targetMemoryUtilizationPercentage: {{ $l.autoscaling.ingester.targetMemoryUtilizationPercentage }}

gateway:
  resources: {{- $l.resources.gateway | toYaml | nindent 4 }}
  autoscaling:
    enabled: {{ $l.autoscaling.gateway.enabled }}
    minReplicas: {{ $l.autoscaling.gateway.minReplicas }}
    maxReplicas: {{ $l.autoscaling.gateway.maxReplicas }}
    targetCPUUtilizationPercentage: {{ $l.autoscaling.gateway.targetCPUUtilizationPercentage }}
    targetMemoryUtilizationPercentage: {{ $l.autoscaling.gateway.targetMemoryUtilizationPercentage }}

querier:
  resources: {{- $l.resources.querier | toYaml | nindent 4 }}
  podAnnotations:
    policy.otomi.io/ignore: psp-host-filesystem
  autoscaling:
    enabled: {{ $l.autoscaling.querier.enabled }}
    minReplicas: {{ $l.autoscaling.querier.minReplicas }}
    maxReplicas: {{ $l.autoscaling.querier.maxReplicas }}
    targetCPUUtilizationPercentage: {{ $l.autoscaling.querier.targetCPUUtilizationPercentage }}
    targetMemoryUtilizationPercentage: {{ $l.autoscaling.querier.targetMemoryUtilizationPercentage }}

distributor:
  resources: {{- $l.resources.distributor | toYaml | nindent 4 }}
  autoscaling:
    enabled: {{ $l.autoscaling.distributor.enabled }}
    minReplicas: {{ $l.autoscaling.distributor.minReplicas }}
    maxReplicas: {{ $l.autoscaling.distributor.maxReplicas }}
    targetCPUUtilizationPercentage: {{ $l.autoscaling.distributor.targetCPUUtilizationPercentage }}
    targetMemoryUtilizationPercentage: {{ $l.autoscaling.distributor.targetMemoryUtilizationPercentage }}

queryFrontend:
  resources: {{- $l.resources.queryFrontend | toYaml | nindent 4 }}
  podAnnotations:
    checksum/team-config: {{ ( toString (keys $v.teamConfig | sortAlpha ) ) | sha256sum }}
  autoscaling:
    enabled: {{ $l.autoscaling.queryFrontend.enabled }}
    minReplicas: {{ $l.autoscaling.queryFrontend.minReplicas }}
    maxReplicas: {{ $l.autoscaling.queryFrontend.maxReplicas }}
    targetCPUUtilizationPercentage: {{ $l.autoscaling.queryFrontend.targetCPUUtilizationPercentage }}
    targetMemoryUtilizationPercentage: {{ $l.autoscaling.queryFrontend.targetMemoryUtilizationPercentage }}
  extraContainers:
  - name: reverse-proxy
    image: k8spin/loki-multi-tenant-proxy:v1.0.0
    args:
      - "run"
      - "--port=3101"
      - "--loki-server=http://localhost:3100"
      - "--auth-config=/etc/reverse-proxy-conf/authn.yaml"
    ports:
      - name: auth
        containerPort: 3101
        protocol: TCP
    resources:
      limits:
        cpu: 100m
        memory: 32Mi
      requests:
        cpu: 50m
        memory: 16Mi
    volumeMounts:
      - name: reverse-proxy-auth-config
        mountPath: /etc/reverse-proxy-conf
  extraVolumes:
  - name: reverse-proxy-auth-config
    secret:
      secretName: reverse-proxy-auth-config
  extraPorts:
  - port: 3101
    protocol: TCP
    name: http
    targetPort: http

compactor:
  enabled: true
  resources: {{- $l.resources.compactor | toYaml | nindent 4 }}