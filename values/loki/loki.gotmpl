{{- $v := .Values -}}
{{- $l:= $v.apps.loki }}
{{- $st := $l.storage }}

nameOverride: loki

{{- with .Values.otomi | get "globalPullSecret" nil }}
imagePullSecrets:
- name: otomi-pullsecret-global
{{- end }}

global:
  priorityClassName: otomi-critical
  {{- if eq $v.cluster.provider "scaleway" }}
  dnsService: coredns
  {{- end }}
serviceMonitor:
  enabled: true
  labels:
    prometheus: system

loki:
  podAnnotations:
    sidecar.istio.io/inject: "false"
  config: |-
    auth_enabled: true
    server:
      http_listen_port: 3100
    common:
      compactor_address: http://loki-compactor.monitoring:3100
    distributor:
      ring:
        kvstore:
          store: memberlist
    memberlist:
      join_members:
        - loki-memberlist
    ingester:
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 1
      chunk_idle_period: 30m
      chunk_block_size: 262144
      chunk_encoding: snappy
      chunk_retain_period: 1m
      max_transfer_retries: 0
      wal:
        dir: /var/loki/wal
        replay_memory_ceiling: 512MB
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m
      split_queries_by_interval: 15m
    runtime_config:
      file: /var/loki-runtime/runtime.yaml
    chunk_store_config:
      max_look_back_period: 0s
    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s
    query_range:
      align_queries_with_step: true
      max_retries: 5
      cache_results: true
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            ttl: 24h
    frontend_worker:
       frontend_address: loki-query-frontend-headless.monitoring:9095
    frontend:
      log_queries_longer_than: 5s
      compress_responses: true
      tail_proxy_url: http://loki-querier.monitoring:3100
    compactor:
      {{- if eq $st.type "s3" }}
      shared_store: s3
      {{- end }}
      {{- if eq $st.type "minioLocal" }}
      shared_store: s3
      {{- end }}
      {{- if eq $st.type "azure" }}
      shared_store: azure
      {{- end }}
      {{- if eq $st.type "gcs" }}
      shared_store: gcs
      {{- end }}
      working_directory: /loki/compactor
      compaction_interval: 5m
    ruler:
      storage:
        type: local
        local:
          directory: /etc/loki/rules
      ring:
        kvstore:
          store: memberlist
      rule_path: /tmp/loki/scratch
      alertmanager_url: https://alertmanager.xx
      external_url: https://alertmanager.xx
    schema_config:
      configs:
      - from: {{ $l | get "v11StartDate" "2023-01-01" }}
        store: boltdb-shipper
        {{- if eq $st.type "minioLocal" }}
        object_store: s3
        {{- end }}
        {{- if eq $st.type "s3" }}
        object_store: s3
        {{- end }}
        {{- if eq $st.type "azure" }}
        object_store: azure
        {{- end }}
        {{- if eq $st.type "gcs" }}
        object_store: gcs
        {{- end }}
        schema: v11
        index:
          prefix: index_
          period: 24h
    storage_config:
      boltdb_shipper:
        {{- if eq $st.type "minioLocal" }}
        shared_store: s3
        {{- end }}
        {{- if eq $st.type "s3" }}
        shared_store: s3
        {{- end }}
        {{- if eq $st.type "azure" }}
        shared_store: azure
        {{- end }}
        {{- if eq $st.type "gcs" }}
        shared_store: gcs
        {{- end }}
        {{- if eq $st.type "filesystem" }}
        shared_store: filesystem
        {{- end }}
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        cache_ttl: 168h
      {{- if eq $st.type "gcs" }}
      gcs:
        bucket_name: {{ $st.gcs.bucket }}   
      {{- end }}
      {{- if eq $st.type "filesystem" }}
      filesystem:
        directory: "/var/loki/chunks"
      {{- else }}
      filesystem: null
      {{- end }}
      {{- if eq $st.type "minioLocal" }}
      aws:
        s3: http://otomi-admin:{{ $v.otomi.adminPassword }}@minio.minio.svc.cluster.local.:9000/loki
        s3forcepathstyle: true
      {{- end }}
      {{- if eq $st.type "s3" }}
      {{- if $st.s3.useInstanceRole }}
      aws:
        s3: s3://{{ $st.s3.region }}/{{ $st.s3.bucket }}
        dynamodb:
          dynamodb_url: dynamodb://{{ $st.s3.region }}    
      {{- else }}
      aws:
        s3: s3://{{ $st.s3.accessKeyId }}:{{ $st.s3.secretAccessKey }}@{{ $st.s3.s3Url }}/{{ $st.s3.bucket }}
        s3forcepathstyle: true
      {{- end }}
      {{- end }}
      {{- if eq $st.type "azure" }}
      azure:
        account_name: {{ $st.azure.accountName }}
        account_key: {{ $st.azure.accountKey }}
        container_name: {{ $st.azure.containerName }}
      {{- end }}

{{- if and (eq $st.type "gcs") $st.gcs.serviceAccount }}
serviceAccount:
  annotations:
    iam.gke.io/gcp-service-account: {{ $st.gcs.serviceAccount }}
{{- end }}

ingester:
  resources: {{- $l.resources.ingester | toYaml | nindent 4 }}
  podAnnotations:
    policy.otomi.io/ignore: psp-host-filesystem

  autoscaling:
    enabled: {{ $l.autoscaling.ingester.enabled }}
    minReplicas: {{ $l.autoscaling.ingester.minReplicas }}
    maxReplicas: {{ $l.autoscaling.ingester.maxReplicas }}
    targetCPUUtilizationPercentage: {{ $l.autoscaling.ingester.targetCPUUtilizationPercentage }}
    targetMemoryUtilizationPercentage: {{ $l.autoscaling.ingester.targetMemoryUtilizationPercentage }}
  {{- if eq $st.type "filesystem" }}
  persistence:
    enabled: true
    claims:
      - name: data
        size: {{ $l.persistence.ingester.size }}
        storageClass: null
  {{- end }}

gateway:
  resources: {{- $l.resources.gateway | toYaml | nindent 4 }}
  autoscaling:
    enabled: {{ $l.autoscaling.gateway.enabled }}
    minReplicas: {{ $l.autoscaling.gateway.minReplicas }}
    maxReplicas: {{ $l.autoscaling.gateway.maxReplicas }}
    targetCPUUtilizationPercentage: {{ $l.autoscaling.gateway.targetCPUUtilizationPercentage }}
    targetMemoryUtilizationPercentage: {{ $l.autoscaling.gateway.targetMemoryUtilizationPercentage }}

querier:
  resources: {{- $l.resources.querier | toYaml | nindent 4 }}
  podAnnotations:
    policy.otomi.io/ignore: psp-host-filesystem
  autoscaling:
    enabled: {{ $l.autoscaling.querier.enabled }}
    minReplicas: {{ $l.autoscaling.querier.minReplicas }}
    maxReplicas: {{ $l.autoscaling.querier.maxReplicas }}
    targetCPUUtilizationPercentage: {{ $l.autoscaling.querier.targetCPUUtilizationPercentage }}
    targetMemoryUtilizationPercentage: {{ $l.autoscaling.querier.targetMemoryUtilizationPercentage }}
  {{- if eq $st.type "filesystem" }}
  persistence:
    enabled: true
    size: {{ $l.persistence.querier.size }}
    storageClass: null
  {{- end }}

distributor:
  resources: {{- $l.resources.distributor | toYaml | nindent 4 }}
  autoscaling:
    enabled: {{ $l.autoscaling.distributor.enabled }}
    minReplicas: {{ $l.autoscaling.distributor.minReplicas }}
    maxReplicas: {{ $l.autoscaling.distributor.maxReplicas }}
    targetCPUUtilizationPercentage: {{ $l.autoscaling.distributor.targetCPUUtilizationPercentage }}
    targetMemoryUtilizationPercentage: {{ $l.autoscaling.distributor.targetMemoryUtilizationPercentage }}

queryFrontend:
  resources: {{- $l.resources.queryFrontend | toYaml | nindent 4 }}
  podAnnotations:
    checksum/team-config: {{ ( toString (keys $v.teamConfig | sortAlpha ) ) | sha256sum }}
  autoscaling:
    enabled: {{ $l.autoscaling.queryFrontend.enabled }}
    minReplicas: {{ $l.autoscaling.queryFrontend.minReplicas }}
    maxReplicas: {{ $l.autoscaling.queryFrontend.maxReplicas }}
    targetCPUUtilizationPercentage: {{ $l.autoscaling.queryFrontend.targetCPUUtilizationPercentage }}
    targetMemoryUtilizationPercentage: {{ $l.autoscaling.queryFrontend.targetMemoryUtilizationPercentage }}
  extraContainers:
  - name: reverse-proxy
    image: k8spin/loki-multi-tenant-proxy:v1.0.0
    args:
      - "run"
      - "--port=3101"
      - "--loki-server=http://localhost:3100"
      - "--auth-config=/etc/reverse-proxy-conf/authn.yaml"
    ports:
      - name: auth
        containerPort: 3101
        protocol: TCP
    resources:
      limits:
        cpu: 100m
        memory: 32Mi
      requests:
        cpu: 50m
        memory: 16Mi
    volumeMounts:
      - name: reverse-proxy-auth-config
        mountPath: /etc/reverse-proxy-conf
  extraVolumes:
  - name: reverse-proxy-auth-config
    secret:
      secretName: reverse-proxy-auth-config
  extraPorts:
  - port: 3101
    protocol: TCP
    name: http
    targetPort: http

compactor:
  enabled: true
  resources: {{- $l.resources.compactor | toYaml | nindent 4 }}