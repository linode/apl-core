{{- $v := .Environment.Values -}}
{{- $l := $v.charts | get "loki" dict }}
{{- $teamNames := "" }}
{{- range $name, $config := $v.teamConfig.teams }}
{{- $teamNames = print "%s%s" $teamNames $name }}
{{- end }}
# enable tracing for debug, need install jaeger and specify right jaeger_agent_host
tracing:
  jaegerAgentHost:

config:
  auth_enabled: {{ $v.otomi.isMultitenant }}
  ingester:
    chunk_idle_period: 15m
    chunk_block_size: 262144
    lifecycler:
      ring:
        kvstore:
          store: inmemory
        replication_factor: 1

  limits_config:
    enforce_metric_name: false
    reject_old_samples: true
    reject_old_samples_max_age: {{ $l.retention.duration }}
  schema_config:
    configs:
    {{- if $l | get "schemaConfigs" nil }}
    {{- toYaml $l.schemaConfigs | nindent 4 }}
    {{- else }}
    - from: '2021-05-12'
      store: boltdb
      object_store: {{ $l.storageType }}
      schema: v11
      index:
        prefix: index_
        period: {{ $l.retention.duration }}
    {{- end }}
  storage_config:
    boltdb:
      directory: /data/loki/index
    filesystem:
      directory: /data/loki/chunks
    {{- if eq $l.storageType "aws" }}
    aws: 
      s3: s3://{{ $v.cluster.region }}/logs.{{ $v.dns.domain }}
    {{- end }}
  chunk_store_config:
    max_look_back_period: {{ $l.retention.period }}
  table_manager:
    retention_deletes_enabled: true
    retention_period: {{ $l.retention.period }}

networkPolicy:
  enabled: false

## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
## If you set enabled as "True", you need :
## - create a pv which above 10Gi and has same namespace with loki
## - keep storageClassName same with below setting
persistence:
  enabled: true
  accessModes:
  - ReadWriteOnce
  size: {{ $l.persistence.size }}
  storageClassName: fast

## Assign a PriorityClassName to pods if set
# priorityClassName:

resources:
  {{- with $l | get "resources" nil }}
    {{- toYaml . | nindent 2 }}
  {{- else }}
  limits:
    cpu: 800m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi
  {{- end }}

fullnameOverride: loki

promtail:
  serviceName: promtail

extraContainers:
{{- if $v.otomi.isMultitenant }}
- name: reverse-proxy
  image: angelbarrera92/basic-auth-reverse-proxy:dev
  args:
    - "serve"
    - "--upstream=http://localhost:3100"
    - "--auth-config=/etc/reverse-proxy-conf/authn.yaml"
  ports:
    - name: http
      containerPort: 11811
      protocol: TCP
  resources:
    limits:
      cpu: 250m
      memory: 200Mi
    requests:
      cpu: 50m
      memory: 40Mi
  volumeMounts:
    - name: reverse-proxy-auth-config
      mountPath: /etc/reverse-proxy-conf
{{- end }}

extraVolumes:
{{- if $v.otomi.isMultitenant }}
- name: reverse-proxy-auth-config
  secret:
    secretName: reverse-proxy-auth-config
{{- end }}

extraVolumeMounts: []

extraPorts:
{{- if $v.otomi.isMultitenant }}
- port: 11811
  protocol: TCP
  name: http
  targetPort: http
{{- end }}

serviceMonitor:
  enabled: true

extraArgs:
  # log.level: debug

podAnnotations:
  sidecar.istio.io/inject: "false"
  {{- if $v.otomi.isMultitenant }}
  checksum/teams: {{ $teamNames | sha256sum }}
  {{- end }}  
