{{- $v := .Environment.Values }}
{{- $domain := printf "%s%s.%s" $v.cluster.teamPrefix "admin" $v.cluster.domain }}
{{- $cm := index $v.charts "cert-manager" }}
{{- $dnsProvider := $v.cluster.dnsProvider | default $v.cluster.provider }}
{{- $certTpl := readFile "../../helmfile.d/snippets/certificate.gotmpl" }}
resources:
  {{- if eq $dnsProvider "azure" }}
  {{- $ap := $cm.provider.azure.azuredns }}
  - apiVersion: v1
    kind: Secret
    metadata:
      name: {{ $ap.clientSecretSecretRef.name }}
      labels:
        release: cert-manager
    data:
      {{ $ap.clientSecretSecretRef.key }}: "{{ $cm.azureClientSecret | b64enc }}"
  {{- end }}
  {{- if eq $dnsProvider "google" }}
  - apiVersion: v1
    kind: Secret
    metadata:
      name: cloud-dns-key
      labels:
        release: cert-manager
    data:
      key.json: "{{ $v | getOrNil "google.cloudDnsKey" | b64enc }}"
  {{- end }}
  {{- range $stage := (list "staging" "production") }}
  - apiVersion: cert-manager.io/v1alpha2
    kind: ClusterIssuer
    metadata:
      name: letsencrypt-{{ $stage }}
    spec:
      acme:
        server: https://acme{{ (eq $stage "staging") | ternary "-staging" "" }}-v02.api.letsencrypt.org/directory
        email: {{ $cm.email }}
        privateKeySecretRef:
          name: letsencrypt-{{ $stage }}
        solvers:
          - selector: {}
            dns01:
              {{- index $cm.provider $dnsProvider | toYaml | nindent 14 }}
  {{- end }}
  # Create all the public certs that the teams requested here (outside of team charts)
  # We do this so that teams can share domains (e.g. for micro service collaboration)
  {{ $domains := list }}
  {{- $cm := index $v.charts "cert-manager" }}
  {{- $tc := $v.teamConfig }}
  {{- range $teamId, $team := $tc.teams }}
  {{- if hasKey $team "services" }}
  {{- range $s := $team.services }}
  {{- if and (not (hasKey $s "hasCert")) (hasKey $s "domain") }}
  {{- $certName := ($s.domain | replace "." "-") }}
  {{- if not (has $certName $domains) }}
  {{- $domains = append $domains $certName }}
  - {{ tpl $certTpl (merge (dict "domain" $s.domain "name" $certName "stage" $cm.stage) $v) | nindent 4 }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}

