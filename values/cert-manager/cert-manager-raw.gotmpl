{{- $v := .Values }}
{{- $cm := index $v.apps "cert-manager" }}
{{- $dns := $v | get "dns" dict }}
{{- $p := $dns | get "provider" dict }}
{{- $certTpl := readFile "../../helmfile.d/snippets/certificate.gotmpl" }}
{{- $vars := tpl (readFile "../../helmfile.d/snippets/domains.gotmpl") $v | fromYaml }}
{{- $issuerName := ternary (printf "%s-%s" $cm.issuer ($cm | get "stage" "")) $cm.issuer (eq $cm.issuer "letsencrypt") }}
{{- $doms := tpl (readFile "../../helmfile.d/snippets/domains.gotmpl") $v | fromYaml }}
resources:
  - apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      name: custom-ca
    spec:
      ca:
        secretName: custom-ca
{{- if eq $cm.issuer "letsencrypt" }}
  - apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      name: {{ $issuerName }}
    spec:
      acme:
        server: https://acme{{ (eq ($cm | get "stage" "") "staging") | ternary "-staging" "" }}-v02.api.letsencrypt.org/directory
        email: {{ $cm.email }}
        privateKeySecretRef:
          name: {{ $issuerName }}
        solvers:
          - selector: {}
            dns01:
              {{- with $p | get "aws" nil }}
              route53:
                {{- with . | get "credentials.accessKey" nil }}
                accessKeyID: {{ . }}
                {{- end }}
                {{- if or (. | get "credentials.secretKey" nil) (. | get "secretName" nil) }}
                secretAccessKeySecretRef:
                  key: "credentials"
                  secretName: external-dns
                {{- end }}
                region: {{ .region }}
                {{- with . | get "role" nil }}
                role: {{ . }}
                {{- end }}
              {{- end }}
              {{- with $p | get "azure" nil }}
              azureDNS:
                resourceGroupName: {{ .resourceGroup }}
                subscriptionID: {{ .subscriptionId }}
                {{- if hasKey . "aadClientId" }}
                tenantID: {{ .tenantId }}
                clientID: {{ .aadClientId }}
                {{- end }}
                {{- with . | get "hostedZoneName" nil }}
                hostedZoneName: {{ . }}
                {{- end }}
                {{- if or (. | get "aadClientSecret" nil) (. | get "secretName" nil) }}
                clientSecretSecretRef:
                  key: azure.json
                  secretName: external-dns
                {{- end }}
              {{- end }}
              {{- with $p | get "cloudflare" nil }}
              cloudflare:
                {{- if or (. | get "apiToken" nil) (. | get "apiSecret" nil) (. | get "secretName" nil) }}
                  {{- with . | get "apiToken" nil }}
                apiTokenSecretRef:
                  key: cloudflare_api_token
                  {{- end }}
                  {{- with . | get "apiSecret" nil }}
                apiKeySecretRef:
                  key: cloudflare_api_key
                  {{- end }}
                  secretName: external-dns
                {{- else }}
                  {}
                {{- end }}
              {{- end }}
              {{- with $p | get "digitalocean" nil }}
              digitalocean:
                {{- if or (. | get "apiToken" nil) (. | get "secretName" nil) }}
                tokenSecretRef:
                  key: digitalocean_api_token
                  secretName: external-dns
                {{- else }}
                  {}
                {{- end }}
              {{- end }}
              {{- with $p | get "google" nil }}
              cloudDNS:
                project: {{ .project }}
                {{- if or (. | get "serviceAccountKey" nil) (. | get "secretName" nil) }}
                serviceAccountSecretRef:
                  key: credentials.json
                  secretName: external-dns
                {{- end }}
              {{- end }}
              {{- with $p | get "other" nil }}
              {{- toYaml . | get "cert-manager" nindent 14 }}
              {{- end }}
{{- end }}
# generate all da certs
{{- range $domain, $domInfo := $doms }}
  {{- if not $domInfo.hasCert }}
    {{- $certName := ($domain | replace "." "-") }}
  - {{ tpl $certTpl (dict "otomi" $v.otomi "domain" $domain "name" $certName "issuer" $cm.issuer "issuerName" $issuerName) | nindent 4 }}
  {{- end }}
{{- end }}
