{{- $v := .Values }}
{{- $cm := index $v.apps "cert-manager" }}
{{- $dns := $v | get "dns" dict }}
{{- $p := $dns | get "provider" dict }}
{{- $certTpl := readFile "../../helmfile.d/snippets/certificate.gotmpl" }}
{{- $vars := tpl (readFile "../../helmfile.d/snippets/domains.gotmpl") $v | fromYaml }}
{{- $issuerName := ternary (printf "%s-%s" $cm.issuer ($cm | get "stage" "")) $cm.issuer (eq $cm.issuer "letsencrypt") }}
{{- $doms := tpl (readFile "../../helmfile.d/snippets/domains.gotmpl") $v | fromYaml }}
resources:

{{- if $v.otomi.hasExternalDNS }}
  - apiVersion: v1
    kind: Secret
    metadata:
      name: "external-dns"
    data:
      {{- if hasKey $p "google" }}
      secret: "{{ $p.google.serviceAccountKey | b64enc }}"
      {{- else if or (hasKey $p "azure-private-dns") }}
      secret: "{{ $p | get "azure-private-dns.aadClientSecret" | b64enc }}"
      {{- else if or (hasKey $p "azure") }}
      secret: "{{ $p.azure.aadClientSecret | b64enc }}"
      {{- else if ($p | get "$p.aws.credentials.secretKey" nil) }}
      secret: "{{ $p.aws.credentials.secretKey | b64enc }}"
      {{- else if hasKey $p "digitalocean" }}
      secret: "{{ $p.digitalocean.apiToken | b64enc }}"
      {{- else if hasKey $p "cloudflare" }}
      secret: "{{ $p.cloudflare.apiToken | b64enc }}"
      {{- end }}
{{- end }}
  - apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      name: custom-ca
    spec:
      ca:
        secretName: custom-ca
{{- if eq $cm.issuer "letsencrypt" }}
  - apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      name: {{ $issuerName }}
    spec:
      acme:
        server: https://acme{{ (eq ($cm | get "stage" "") "staging") | ternary "-staging" "" }}-v02.api.letsencrypt.org/directory
        email: {{ $cm.email }}
        privateKeySecretRef:
          name: {{ $issuerName }}
        solvers:
          - selector: {}
            dns01:
              {{- with $p | get "aws" nil }}
              route53:
                {{- with . | get "credentials.accessKey" nil }}
                accessKeyID: {{ . }}
                {{- end }}
                {{- if . | get "credentials.secretKey" nil }}
                secretAccessKeySecretRef:
                  key: secret
                  name: external-dns
                {{- end }}
                region: {{ .region }}
                {{- with . | get "role" nil }}
                role: {{ . }}
                {{- end }}
              {{- end }}
              {{- with $p | get "azure" nil }}
              azureDNS:
                resourceGroupName: {{ .resourceGroup }}
                subscriptionID: {{ .subscriptionId }}
                {{- if hasKey . "aadClientId" }}
                tenantID: {{ .tenantId }}
                clientID: {{ .aadClientId }}
                {{- end }}
                {{- with . | get "hostedZoneName" nil }}
                hostedZoneName: {{ . }}
                {{- end }}
                clientSecretSecretRef:
                  key: secret
                  name: external-dns
              {{- end }}
              {{- with $p | get "azure-private-dns" nil }}
              azureDNS:
                resourceGroupName: {{ .resourceGroup }}
                subscriptionID: {{ .subscriptionId }}
                {{- if hasKey . "aadClientId" }}
                tenantID: {{ .tenantId }}
                clientID: {{ .aadClientId }}
                {{- end }}
                {{- with . | get "hostedZoneName" nil }}
                hostedZoneName: {{ . }}
                {{- end }}
                clientSecretSecretRef:
                  key: secret
                  name: external-dns
              {{- end }}
              {{- with $p | get "cloudflare" nil }}
              cloudflare:
                {{- with . | get "apiToken" nil }}
                apiTokenSecretRef:
                {{- end }}
                {{- with . | get "apiSecret" nil }}
                apiKeySecretRef:
                {{- end }}
                  key: secret
                  name: external-dns
              {{- end }}
              {{- with $p | get "digitalocean" nil }}
              digitalocean:
                tokenSecretRef:
                  key: secret
                  name: external-dns
              {{- end }}
              {{- with $p | get "google" nil }}
              cloudDNS:
                project: {{ .project }}
                serviceAccountSecretRef:
                  key: secret
                  name: external-dns
              {{- end }}
              {{- with $p | get "other" nil }}
              {{- toYaml . | get "cert-manager" nindent 14 }}
              {{- end }}
{{- end }}
# generate all da certs
{{- range $domain, $domInfo := $doms }}
  {{- if not $domInfo.hasCert }}
    {{- $certName := ($domain | replace "." "-") }}
  - {{ tpl $certTpl (dict "otomi" $v.otomi "domain" $domain "name" $certName "issuer" $cm.issuer "issuerName" $issuerName) | nindent 4 }}
  {{- end }}
{{- end }}
