{{- $v := .Values }}
{{- $otomiAdmin := "otomi-admin" }}
{{- $obj := $v.obj.provider }}
{{- $giteaBackupConfig := $v.platformBackups.gitea }}

resources:
{{- if $v._derived.untrustedCA }}
- apiVersion: v1
  kind: Secret
  metadata:
    name: custom-ca
  data:
    ca-certificates.crt: {{ .Values._derived.caCert | b64enc }}
{{- end }}
- apiVersion: v1
  kind: Secret
  type: kubernetes.io/basic-auth
  metadata:
    name: gitea-db-secret
  data:
    username: "{{ "gitea" | b64enc }}"
    password: "{{ $v.apps.gitea.postgresqlPassword | b64enc }}"
# DB / app backup resources
{{- if eq $obj.type "minioLocal" }}
- apiVersion: v1
  kind: Secret
  metadata:
    name: minio-creds
  data:
    MINIO_ACCESS_KEY: "{{ $otomiAdmin | b64enc }}"
    MINIO_SECRET_KEY: "{{ $v.otomi.adminPassword | b64enc }}"
{{- end }}
{{- if eq $obj.type "linode" }}
- apiVersion: v1
  kind: Secret
  metadata:
    name: linode-creds
  data:
    S3_STORAGE_ACCOUNT: "{{ $obj.linode.accessKeyId | b64enc }}"
    S3_STORAGE_KEY: "{{ $obj.linode.secretAccessKey | b64enc }}"
{{- end }}
# Application backup resources
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: gitea-backup
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
{{- if $giteaBackupConfig.enabled }}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: gitea-backup
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: gitea-backup-operator
  rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "watch", "list"]  
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: gitea-backup
  subjects:
  - kind: ServiceAccount
    name: gitea-backup
  roleRef:
    kind: Role 
    name: gitea-backup-operator
    apiGroup: rbac.authorization.k8s.io
- apiVersion: batch/v1
  kind: CronJob
  metadata:
    name: gitea-backup-job
  spec:
    schedule: {{ $giteaBackupConfig.schedule | quote }}
    concurrencyPolicy: Forbid
    jobTemplate:
      spec:
        template:
          metadata:
            annotations:
              sidecar.istio.io/inject: "false"
          spec:
            serviceAccountName: gitea-backup
            containers:
              - image: bitnami/kubectl:1.30
                name: kubectl
                command:
                  - /bin/sh
                  - -ec
                  - >-
                    kubectl exec gitea-0 -- /bin/sh -ec "
                    if [ ! -f '/backup/.bin/rclone' ]; then
                      echo 'Installing RClone...' &&
                      mkdir -p /backup/.bin &&
                      cd /backup/.bin &&
                      curl -fsSL -o rclone.zip https://github.com/rclone/rclone/releases/download/v1.68.0/rclone-v1.68.0-linux-amd64.zip &&
                      echo '2fd93c246c72fa6bb192d33b0447013b31a982f9daaaa1f9c0b85e99f4233ee47c089e8b3f7f994dfe21090dab8e2adaec2e62c68aed0c7dadbac9bcce4e1706  rclone.zip' | sha512sum -c - &&
                      unzip -oj rclone.zip
                    fi &&
                    cd /backup &&
                    echo 'Creating backup...' &&
                    gitea dump --type tar.bz2 &&
                    echo '5d20f5562609695b565d696980bbee91ec0503ed946410eb2e6024a8b6850ebd5b587d5c71488f471012ea39e6bf440d843840165e8ac75cd0ec737defa2a749  .bin/rclone' | sha512sum -c - &&
                    echo 'Uploading to object storage...' &&
                    .bin/rclone copy --exclude '\.*/**' /backup gitea:/\$BUCKET_NAME &&
                    echo 'Removing old backups from object storage...' &&
                    .bin/rclone sync --min-age $RETENTION_TIME --exclude '\.*/**' /backup gitea:/\$BUCKET_NAME &&
                    echo 'Cleaning up local backups...' &&
                    find . -type f -iname '*.tar.bz2' -ctime +1 -delete"
                resources:
                  limits:
                    cpu: 250m
                    memory: 256Mi
                  requests:
                    cpu: 100m
                    memory: 128Mi
                env:
                  - name: RETENTION_TIME
                    value: {{ $giteaBackupConfig.retentionPolicy }}
                securityContext:
                  runAsNonRoot: true
                  runAsUser: 65535
                  runAsGroup: 65535
            restartPolicy: Never
            securityContext:
              fsGroup: 65535
{{- end }}
