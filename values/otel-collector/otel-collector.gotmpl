fullnameOverride: otel-collector

# Valid values are "daemonset", "deployment", and "statefulset".
mode: daemonset

resources:
  limits:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 50m
    memory: 16Mi

podAnnotations:
  policy.otomi.io/ignore: psp-allowed-users

# Base collector configuration.
config:
  exporters:
    logging:
      loglevel: info
    otlp/team-test:
      endpoint: tempo-distributor.tempo.svc.cluster.local:4317
      tls:
        insecure: true
      sending_queue:
        enabled: true
        num_consumers: 100
        queue_size: 10000
      headers:
        X-Scope-OrgID: test
    otlp/team-hello:
      endpoint: tempo-distributor.tempo.svc.cluster.local:4317
      tls:
        insecure: true
      sending_queue:
        enabled: true
        num_consumers: 100
        queue_size: 10000
      headers:
        X-Scope-OrgID: hello
  processors:
    batch: {}
    # If set to null, will be overridden with values based on k8s resource limits
    memory_limiter: null
    k8sattributes/default:
      extract:
        labels:
        - tag_name: team
          key: "name"
          from: namespace
    routing:
      from_attribute: team
      attribute_source: resource
      table:
      - value: team-test
        exporters: [logging, otlp/team-test]
      - value: team-hello
        exporters: [logging, otlp/team-hello]
  receivers:
    zipkin:
      endpoint: ${env:MY_POD_IP}:9411
    otlp:
      protocols:
        grpc:
          endpoint: ${env:MY_POD_IP}:4317
        http:
          endpoint: ${env:MY_POD_IP}:4318
  service:
    telemetry:
      metrics:
    extensions:
      - health_check
      - memory_ballast
    pipelines:
      traces:
        exporters:
          - logging
          - otlp/team-hello
          - otlp/team-hello
        processors:
          - memory_limiter
          - batch
        receivers:
          - zipkin
          - otlp

serviceMonitor:
  enabled: true
  metricsEndpoints:
    - port: metrics
      # interval: 15s
  extraLabels:
    prometheus: system

presets:
  # Configures the Kubernetes Processor to add Kubernetes metadata.
  # Adds the k8sattributes processor to all the pipelines
  # and adds the necessary rules to ClusteRole.
  # Best used with mode = daemonset.
  kubernetesAttributes:
    enabled: true
