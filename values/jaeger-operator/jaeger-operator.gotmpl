{{- $v := .Values }}
{{- $j := $v.charts | get "jaeger" dict }}
{{- $appsDomain := printf "apps.%s" $v.cluster.domainSuffix }}
{{- $stage := $v.charts | get "cert-manager.stage" "production" }}
{{- $hasStagingCerts := eq $stage "staging" }}

jaeger:
  create: true
  spec:
    allInOne:
      options:
        query:
          base-path: /jaeger
    agent:
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 32Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      sidecarSecurityContext:
        runAsNonRoot: true
        runAsUser: 1000
    collector:
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 32Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
    ingester:
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 32Mi
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 32Mi
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
    strategy: allInOne

rbac:
  clusterRole: true

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 10m
    memory: 32Mi

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
