{{- $v := .Values }}
{{- $h := $v.charts | get "harbor" dict }}
{{- $hp := $h | get "persistence" dict }}
{{- $harborDomain := printf "harbor.%s" $v.cluster.domainSuffix }}
{{- $notaryDomain := printf "notary.%s" $v.cluster.domainSuffix }}
{{- $harborSecretName := ($harborDomain | replace "." "-") }}
{{- $notarySecretName := ($notaryDomain | replace "." "-") }}
{{- $externalUrl := printf "https://%s" $harborDomain }}

externalURL: {{ $externalUrl }}
fullnameOverride: harbor
# logLevel - debug, info, warning, error or fatal
logLevel: warning
harborAdminPassword: {{ $h | get "adminPassword" $v.otomi.adminPassword }}
nameOverride: harbor
secretKey: {{ $h | get "secretKey" nil }}

clair:
  adapter:
    resources:
      {{- with $h | get "resources.adapter" nil }}
      {{- toYaml . | nindent 6 }}
      {{- else }}
      requests:
        cpu: 100m 
        memory: 256Mi
      limits:
        cpu: 400m
        memory: 256Mi
      {{- end }}
  clair:
    resources:
      {{- with $h | get "resources.clair" nil }}
      {{- toYaml . | nindent 6 }}
      {{- else }}
      requests:
        cpu: 100m 
        memory: 1Gi
      limits:
        cpu: 400m
        memory: 2Gi
      {{- end }}
  podAnnotations:
    policy.otomi.io/ignore: psp-allowed-users

chartmuseum:
  podAnnotations:
    policy.otomi.io/ignore: psp-allowed-users
  resources:
    {{- with $h | get "resources.chartmuseum" nil }}
    {{- toYaml . | nindent 4 }}
    {{- else }}
    requests:
      cpu: 100m 
      memory: 128Mi
    limits:
      cpu: 400m
      memory: 256Mi
    {{- end }}

core:
  podAnnotations:
    policy.otomi.io/ignore: psp-allowed-users
  resources:
    {{- with $h | get "resources.core" nil }}
    {{- toYaml . | nindent 4 }}
    {{- else }}
    requests:
      memory: 256Mi
      cpu: 50m
    limits:
      memory: 512Mi
      cpu: 100m
    {{- end }}
  secret: {{ $h | get "core.secret" nil }}
  # secretName: {{ $harborSecretName }}
  xsrfKey: {{ $h | get "core.xsrfKey" nil }}

database:
  internal:
    initContainer:
      migrator:
        resources:
          requests:
            memory: 256Mi
            cpu: 50m
          limits:
            memory: 512Mi
            cpu: 100m
      permissions:
        resources:
          requests:
            memory: 256Mi
            cpu: 50m
          limits:
            memory: 512Mi
            cpu: 100m
    resources:
      {{- with $h | get "resources.database" nil }}
      {{- toYaml . | nindent 6 }}
      {{- else }}
      requests:
        memory: 256Mi
        cpu: 50m
      limits:
        memory: 512Mi
        cpu: 100m
      {{- end }}
  password: {{ $h | get "adminPassword" $v.otomi.adminPassword }}
  podAnnotations:
    # this exception allows the chmod fix to pass, which needs root access:
    policy.otomi.io/ignore.data-migrator: psp-allowed-users
  type: internal

expose:
  tls:
    enabled: false
  type: clusterIP

internalTLS:
  # we use istio with mTLS enabled for harbor namespace
  enabled: false

jobservice:
  jobLoggers:
    - stdout
  podAnnotations:
    policy.otomi.io/ignore: psp-allowed-users
  resources:
    {{- with $h | get "resources.jobservice" nil }}
    {{- toYaml . | nindent 4 }}
    {{- else }}
    requests:
      memory: 256Mi
      cpu: 50m
    limits:
      memory: 512Mi
      cpu: 100m
    {{- end }}
  secret: {{ $h | get "jobservice.secret" nil }}

metrics:
  serviceMonitor:
    enabled: true

notary:
  enabled: false
  secretName: {{ $notarySecretName }}
  
persistence:
  enabled: true
  # resourcePolicy: 'keep'
  persistentVolumeClaim:
    registry:
      # Use the existing PVC which must be created manually before bound,
      # and specify the 'subPath' if the PVC is shared with other components
      existingClaim: ''
      # Specify the 'storageClass' used to provision the volume. Or the default
      # StorageClass will be used(the default).
      # Set it to '-' to disable dynamic provisioning
      storageClass: 'fast'
      subPath: ''
      accessMode: ReadWriteOnce
      size: 10Gi
    chartmuseum:
      existingClaim: ''
      storageClass: 'fast'
      subPath: ''
      accessMode: ReadWriteOnce
      size: 5Gi
    jobservice:
      existingClaim: ''
      storageClass: 'fast-immediate'
      subPath: ''
      accessMode: ReadWriteOnce
      size: 1Gi

    # If external database is used, the following settings for database will
    # be ignored
    database:
      existingClaim: ''
      storageClass: 'fast'
      subPath: ''
      accessMode: ReadWriteOnce
      size: 1Gi
    # If external Redis is used, the following settings for Redis will
    # be ignored
    redis:
      existingClaim: ''
      storageClass: 'fast'
      subPath: ''
      accessMode: ReadWriteOnce
      size: 1Gi
    trivy:
      existingClaim: ''
      storageClass: 'fast'
      subPath: ''
      accessMode: ReadWriteOnce
      size: 5Gi
  # Define which storage backend is used for registry and chartmuseum to store
  # images and charts. Refer to
  # https://github.com/docker/distribution/blob/master/docs/configuration.md#storage
  # for the detail.
  imageChartStorage:
    {{ $imageChartStorageType := $hp | get "imageChartStorage.type" "filesystem" }}
    type: {{ $imageChartStorageType }}
    {{- if ne $imageChartStorageType "filesystem" }}
    {{ $imageChartStorageType }}: {{- toYaml ($hp.imageChartStorage | get $imageChartStorageType) | nindent 6 }}
    {{- end }}

postgresql:
  volumePermissions:
    enabled: true

portal:
  resources:
    {{- with $h | get "resources.portal" nil }}
      {{- toYaml . | nindent 4 }}
    {{- else }}
    requests:
      cpu: 100m 
      memory: 128Mi
    limits:
      cpu: 400m
      memory: 128Mi
    {{- end }}
  podAnnotations:
    policy.otomi.io/ignore: psp-allowed-users

redis:
  podAnnotations:
    policy.otomi.io/ignore: psp-allowed-users
  internal:
    resources:
      {{- with $h | get "resources.redis" nil }}
        {{- toYaml . | nindent 6 }}
      {{- else }}
      requests:
        cpu: 100m 
        memory: 128Mi
      limits:
        cpu: 400m
        memory: 128Mi
      {{- end }}

registry:
  secret: {{ $h | get "registry.secret" nil }}
  podAnnotations:
    policy.otomi.io/ignore: psp-allowed-users

  registry:
    resources:
      {{- with $h | get "resources.registry" nil }}
        {{- toYaml . | nindent 6 }}
      {{- else }}
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: 100m
      {{- end }}
  controller:
    resources:
      {{- with $h | get "resources.registry-controller" nil }}
        {{- toYaml . | nindent 6 }}
      {{- else }}
      requests:
        memory: 256Mi
        cpu: 50m
      limits:
        memory: 512Mi
        cpu: 100m
      {{- end }}
  relativeurls: false
  credentials:
    username: {{ $h | get "registry.credentials.username" "admin" }}
    password: {{ $h | get "registry.credentials.password" $v.otomi.adminPassword }}
    htpasswd: {{ $h | get "registry.credentials.htpasswd" nil }}

trivy:
  automountServiceAccountToken: true

{{- with .Values.otomi | get "globalPullSecret" nil }}
imagePullSecrets:
  - name: otomi-pullsecret-global
{{- end }}
