{{- $v := .Environment.Values }}
{{- $c := $v.cluster }}
{{- $o := $v.charts | get "otomi-api" dict }}
{{- $teamConfig := dict "services" $v.teamConfig.services }}
# so we get package.json version in two regexFind steps:
{{- $version := (readFile "../../package.json") | regexFind "\"version\": \"([0-9.]+)\"" | regexFind "[0-9]+.[0-9]+.[0-9]+" -}}

replicaCount: 1

{{- with $o | get "resources.api" nil }}
resources:
  {{- toYaml . | nindent 2 }}
{{- end }}

image:
  registry: eu.gcr.io
  repository: otomi-cloud/otomi-api
  tag: {{ $o.image.tag }}
  pullPolicy: {{ $o.image | get "pullPolicy" "IfNotPresent" }}

secrets:
  GIT_USER: {{ $o.git.user }}
  GIT_EMAIL: {{ $o.git.email }}
  GIT_PASSWORD: {{ $o.git.password }}
  {{- if $v.sops.enabled }}
  GCLOUD_SERVICE_KEY: '{{ $o.tools.gcloudServiceKey }}'
  {{- end }}

env:
  # DEBUG: '*'
  GIT_REPO_URL: {{ $o.git.repoUrl }}
  GIT_BRANCH: {{ $o | get "git.branch" "master" }}
  CLUSTER_ID: {{ printf "%s/%s" $c.provider $c.name }}
  CLUSTER_NAME: {{ $c.apiName }}
  CLUSTER_APISERVER: {{ $c.apiServer }}
  {{- if hasKey $o "disableSync" }}
  DISABLE_SYNC: true
  {{- end }}
  USE_SOPS: {{ $v.sops.enabled }}
  CORE_VERSION: '{{ $version }}'
  {{- if (not ($v.charts.keycloak | get "enabled" true)) }}
  NO_AUTHZ: true
  {{- end }}

core:
  k8s: {{- toYaml $v.k8s | nindent 4 }}
  services: {{- toYaml $v.services | nindent 4 }}
  teamConfig: {{- toYaml $teamConfig | nindent 4 }}

tools:
  enabled: {{ $v.sops.enabled }}
  {{- if $v.sops.enabled }}
  image:
    pullPolicy: {{ $o | get "tools.image.pullPolicy" "IfNotPresent" }}
    tag: {{ $o | get "tools.image.tag" "latest" }}
    {{- with $o | get "resources.tools" nil }}
    resources:
      {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}
