{{- $v := .Environment.Values }}
{{- $teams := $v.teamConfig.teams }}
{{- $teamNames := list }}
{{- $teamsMapping := dict }}
{{- range $name, $team := $teams }}
{{- $teamNames = print "team-" $name | append $teamNames -}}
{{- if ($team | get "oidc.groupMapping" false) }}
  {{- $teamsMapping = set $teamsMapping (printf "team-%s" $name) $team.oidc.groupMapping -}}
{{- end -}}
{{- end -}}
{{- $c := $v.charts }}
{{- $cm := $c | get "cert-manager" -}}
{{- $k := $c | get "keycloak" dict }}
{{- $idp := $v.oidc.idp }}
{{- $skipVerify := eq ($cm | get "stage") "staging" }}
tasks:
  keycloak:
    type: job
    description: Configure OIDC as a primary auhentication method and populate teams to harbor projects
    enabled: true
    init:
      image:
        repository: curlimages/curl
      script: |
        {{ if $skipVerify }}export NODE_EXTRA_CA_CERTS=/fakeroot.pem \{{ end }}
        printf "Waiting until kecloak is accessible."
        until $(curl --output /dev/null --silent --head --fail https://keycloak.{{ $v.cluster.domain }}); do 
          printf '.'
          sleep 5
        done
    image:
      repository: {{ $c | get "jobs.keycloak.image.repository" "otomi/tasks" }}
      tag: {{ $c | get "jobs.keycloak.image.tag" "v0.2.1" }}
      pullPolicy: {{ $c | get "jobs.keycloak.image.pullPolicy" "IfNotPresent" }}
    env:
      KEYCLOAK_THEME_LOGIN: {{ $k | get "theme" "otomi" }}
    secret:
      KEYCLOAK_ADDRESS: https://keycloak.{{ $v.cluster.domain }}
      KEYCLOAK_ADMIN: {{ $k | get "admin.username" "admin" }}
      KEYCLOAK_ADMIN_PASSWORD: {{ $k | get "admin.password" "bladibla" }}
      KEYCLOAK_REALM: master
      KEYCLOAK_CLIENT_SECRET: {{ $v.oidc.clientSecret }}
      TENANT_ID: {{ $idp.tenantID }}
      TENANT_CLIENT_ID: {{ $idp.clientID }}
      TENANT_CLIENT_SECRET: {{ $idp.clientSecret }}
      IDP_ALIAS: {{ $k.idp.alias }}
      IDP_GROUP_OTOMI_ADMIN: {{ $idp.adminGroupID }}
      IDP_GROUP_TEAM_ADMIN: {{ $idp.teamAdminGroupID }}
      IDP_GROUP_MAPPINGS_TEAMS: '{{ $teamsMapping | toJson }}'
      IDP_OIDC_URL: {{ $idp.issuer }}
      REDIRECT_URIS: '[
          "https://otomi.{{ $v.cluster.domain }}",
          "https://auth.{{ $v.cluster.domain }}/*",
          "https://apps.{{ $v.cluster.domain }}/*",
          "https://otomi.{{ $v.cluster.domain }}/*",
          {{- range $name, $team := $teams }}
          "https://apps.team-{{ $name }}.{{ $v.cluster.domain }}/*",
          {{- end }}
          "https://harbor.{{ $v.cluster.domain }}/*"
      ]'
    script: {{ if $skipVerify }}export NODE_EXTRA_CA_CERTS=/fakeroot.pem && {{ end }}npm run tasks:keycloak
