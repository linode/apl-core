{{- $v := .Values }}
{{- $c := $v.charts }}
{{- $cm := $c | get "cert-manager" -}}
{{- $skipVerify := eq ($cm | get "stage" "production") "staging" }}
{{- $otomiVersion := $v.otomi | get "version" "latest" }}
{{- $pullPolicy := ternary "IfNotPresent" "Always" (regexMatch "^v\\d" $otomiVersion) }}
{{- $giteaUrl := print "https://gitea." $v.cluster.domainSuffix }}

type: Job
name: gitea-push
env:
  GITEA_URL: {{ $giteaUrl }}
  DRONE_URL: https://drone.{{ $v.cluster.domainSuffix }}
nativeSecrets:
  GITEA_PASSWORD: {{ $c | get "gitea.adminPassword" $v.otomi.adminPassword }}
annotations:
  policy.otomi.io/ignore: "banned-image-tags"
image:
  repository: otomi/core
  tag: {{ $otomiVersion }}
  pullPolicy: {{ $pullPolicy }}
init:
  env:
    GITEA_URL: {{ $giteaUrl }}
  image: 
    repository: alpine/git
  script: |
    {{ if $skipVerify }}NOSSL=' -c http.sslVerify=false'{{ end }}
    GITEA_URL=https://otomi-admin:$GITEA_PASSWORD@gitea.{{ $v.cluster.domainSuffix }}/otomi/values
    echo "Waiting until gitea is accessible at {{ $giteaUrl }}/otomi/values"
    until $(git $NOSSL ls-remote $GITEA_URL); do 
      printf '.'
      sleep 5
    done
    echo READY!
script: |
  binzx/otomi bootstrap
  # only run initial commit (when repo is empty)np
  ! binzx/otomi pull && binzx/otomi commit
runPolicy: OnSpecChange
files: 
  {{- $files := split "\n" (exec "bash" (list "-c" (printf "find %s -type f | grep -v '.git' | grep -v '.history'" (env "ENV_DIR"))) | trim) }}
  {{- range $file := $files }}
  '{{ $file | replace (env "ENV_DIR") "/home/app/stack/env" }}': |
    {{- readFile $file | nindent 4 }}
  {{- end }}