{{- $v := .Environment.Values }}
{{- $c := $v.charts }}
{{- $o := $v.oidc }}
{{- $h := $c | get "harbor" dict }}
{{- $k := $c | get "keycloak" dict }}
{{- $hasKeycloak := $k | get "enabled" true }}
{{- $realm := $k | get "realm" "master" }}
{{- $keycloakIssuer := printf "https://keycloak.%s/realms/%s" $v.cluster.domain $realm }}
{{- $hasHarbor := $h | get "enabled" false -}}
{{- $otomiApiTag := $c | get "otomi-api.image.tag" -}}
{{- $otomiApiImage := printf "eu.gcr.io/otomi-cloud/otomi-stack-api:%s" $otomiApiTag -}}
{{- $joinTpl := readFile "../../helmfile.d/utils/joinListWithComma.gotmpl" }}

{{- $teams := keys $v.teamConfig.teams }}
{{- $teamNames := list -}}
{{- range $teams -}}
{{- $teamNames = print "team-" . | append $teamNames -}}
{{- end -}}

tasks:
  harbor:
    type: job
    enabled: {{ $hasHarbor }} 
    description: Configure OIDC as a primary auhentication method and populate teams to harbor projects
    image: {{ $otomiApiImage }}
    secret:
      HARBOR_PASSWORD:  {{ $h | get "adminPassword" "bladibla" }}
      HARBOR_USER: admin
      OIDC_CLIENT_ID: {{ $o.clientID }}
      OIDC_CLIENT_SECRET: {{ $o.clientSecret }}
    config:
      HARBOR_BASE_URL: "http://harbor-harbor-core.harbor/api/v2.0"
      TEAM_NAMES: '{{ $teamNames | toJson }}'
      OIDC_ENDPOINT: '{{ $hasKeycloak | ternary $keycloakIssuer $o.idp.issuer }}'
      OIDC_GROUPS_CLAIM: 'groups'
      OIDC_NAME: 'keycloak'
      OIDC_SCOPE: 'openid'
      OIDC_VERIFY_CERT: 'true'
    script: npm run tasks:harbor

