{{- $v := .Values }}
{{- $c := $v.charts }}
{{- $o := $v | get "oidc" dict }}
{{- $h := $c.harbor }}
{{- $k := $c.keycloak }}
{{- $ns := $v.otomi.hasCloudLB | ternary "ingress" "istio-system" }}
{{- $stage := $c | get "cert-manager.stage" }}
{{- $hasStagingCerts := eq $stage "staging" }}
{{- $hasKeycloak := $k | get "enabled" }}
{{- $keycloakIssuer := printf "https://keycloak.%s/realms/otomi" $v.cluster.domainSuffix }}
{{- $harborRepo := printf "harbor.%s" $v.cluster.domainSuffix }}
{{- $teams := keys $v.teamConfig.teams }}

type: Job
description: Configure OIDC as a primary authentication method and populate teams to harbor projects
name: harbor
runPolicy: OnSpecChange
nativeSecrets:
  HARBOR_PASSWORD:  {{ $h | get "adminPassword" $v.otomi.adminPassword  }}
  HARBOR_USER: admin
  {{- if $hasKeycloak }}
  OIDC_ENDPOINT: '{{ $keycloakIssuer }}'
  OIDC_CLIENT_ID: {{ $k.idp.clientID }}
  OIDC_CLIENT_SECRET: {{ $k.idp.clientSecret }}
  {{- else }}
  OIDC_ENDPOINT: '{{ $o.issuer }}'
  OIDC_CLIENT_ID: {{ $o.clientID }}
  OIDC_CLIENT_SECRET: {{ $o.clientSecret }}
  {{- end }}
env:
  # DEBUG: '*'
  HARBOR_BASE_URL: http://harbor-core.harbor
  HARBOR_BASE_REPO_URL: {{ $harborRepo }}
  TEAM_IDS: '{{ $teams | sortAlpha | toJson }}'
  OIDC_GROUPS_CLAIM: groups
  OIDC_NAME: keycloak
  OIDC_SCOPE: openid
  OIDC_VERIFY_CERT: '{{ not $hasStagingCerts }}'
{{ tpl (readFile "../../helmfile.d/snippets/job.gotmpl") (dict "item" "tasks" "v" $v "task" "harbor") }}
