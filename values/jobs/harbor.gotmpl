{{- $v := .Values }}
{{- $c := $v.charts }}
{{- $o := $v.oidc }}
{{- $h := $c | get "harbor" dict }}
{{- $k := $c | get "keycloak" dict }}
{{- $ns := $v.otomi.hasCloudLB | ternary "ingress" "istio-system" }}
{{- $skipVerify := eq ($v.charts | get "cert-manager.stage") "staging" }}
{{- $hasKeycloak := $k | get "enabled" true }}
{{- $realm := $k | get "realm" "master" }}
{{- $keycloakIssuer := printf "https://keycloak.%s/realms/%s" $v.cluster.domainSuffix $realm }}
{{- $hasHarbor := $h | get "enabled" false -}}
{{- $teams := keys $v.teamConfig.teams }}
{{- $teamNames := list -}}
{{- range $teams -}}
{{- $teamNames = print "team-" . | append $teamNames -}}
{{- end -}}

type: Job
enabled: true
runPolicy: Always
description: Configure OIDC as a primary auhentication method and populate teams to harbor projects
name: harbor
image:
  repository: otomi/tasks
  tag: v0.2.6
  pullPolicy: IfNotPresent
nativeSecrets:
  HARBOR_PASSWORD:  {{ $h | get "adminPassword" $v.otomi.adminPassword  }}
  HARBOR_USER: admin
  OIDC_CLIENT_ID: {{ $hasKeycloak | ternary $k.idp.clientID $o.clientID }}
  OIDC_CLIENT_SECRET: {{ $hasKeycloak | ternary $k.idp.clientSecret $o.clientSecret }}
env:
  HARBOR_BASE_URL: "http://harbor-harbor-core.harbor/api/v2.0"
  TEAM_NAMES: '{{ $teamNames | sortAlpha | toJson }}'
  OIDC_ENDPOINT: '{{ $hasKeycloak | ternary $keycloakIssuer $o.issuer }}'
  OIDC_GROUPS_CLAIM: 'groups'
  OIDC_NAME: 'keycloak'
  OIDC_SCOPE: 'openid'
  OIDC_VERIFY_CERT: '{{ not $skipVerify }}'
script: {{ if $skipVerify }}NODE_TLS_REJECT_UNAUTHORIZED=0 {{ end }}npm run tasks:harbor
runPolicy: OnSpecChange