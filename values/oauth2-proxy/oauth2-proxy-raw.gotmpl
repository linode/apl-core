{{- $v := .Values }}
{{- $domain := printf "auth.%s" $v.cluster.domainSuffix }}
{{- $cm := $v.apps | get "cert-manager" }}
{{- $name := $domain | replace "." "-" }}
{{- $ingress :=  $v.ingress.platformClass }}

resources:
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        externaldns: "true"
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        {{- if and (eq $v.cluster.provider "custom") (hasKey $v.ingress.platformClass "entrypoint") (ne $ingress.entrypoint "") }}
        external-dns.alpha.kubernetes.io/target: {{ $v.ingress.platformClass }}
        {{- end }}
        ingress.kubernetes.io/ssl-redirect: "true"
        {{- if $v.apps.keycloak.enabled }}
        nginx.ingress.kubernetes.io/auth-response-headers: Authorization
        {{- end }}
        nginx.ingress.kubernetes.io/configuration-snippet: |
          # rewrite auth redirects to original hosts
          rewrite ^/oauth2/redirect/(.*) https://$1 redirect;
        {{- with $ingress | get "sourceIpAddressFiltering" nil }}
        nginx.ingress.kubernetes.io/whitelist-source-range: "{{ . }}"
        {{- end}}
      name: oauth2-proxy
    spec:
      ingressClassName: {{ $ingress.className }}
      rules:
      - host: '{{ $domain }}'
        http:
          paths:
          - backend:
              service:
                name: oauth2-proxy
                port:
                  number: 80
            path: /
            pathType: Prefix
      tls: 
        {{- if eq $cm.issuer "byo-wildcard-cert" }}
        - secretName: "otomi-byo-wildcard-cert"
        {{- else }}
        - secretName: otomi-cert-manager-wildcard-cert
        {{- end }}
          hosts:
            - '{{ $domain }}'
