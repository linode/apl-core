{{- $v := .Values }}
{{- $domain := printf "auth.%s" $v.cluster.domainSuffix }}
{{- $cm := $v.apps | get "cert-manager" }}
{{- $name := $domain | replace "." "-" }}
{{- $ingress :=  $v.ingress.platformClass }}

resources:
  - apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        externaldns: "true"
        {{- with $v | get "dns.provider.linode" nil }}
        # Check Linode Api documentation for allowed values in seconds: https://developers-linode.netlify.app/api/v4/domains
        external-dns.alpha.kubernetes.io/ttl: "1h"
        {{- end }}
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        {{- if and (eq $v.cluster.provider "custom") (hasKey $v.ingress.platformClass "entrypoint") (ne $ingress.entrypoint "") }}
        external-dns.alpha.kubernetes.io/target: {{ $v.ingress.platformClass }}
        {{- end }}
        ingress.kubernetes.io/ssl-redirect: "true"
        {{- if $v.apps.keycloak.enabled }}
        nginx.ingress.kubernetes.io/auth-response-headers: Authorization
        {{- end }}
        nginx.ingress.kubernetes.io/configuration-snippet: |
          # rewrite auth redirects to original hosts
          rewrite ^/oauth2/redirect/(.*) https://$1 redirect;
        {{- with $ingress | get "sourceIpAddressFiltering" nil }}
        nginx.ingress.kubernetes.io/whitelist-source-range: "{{ . }}"
        {{- end}}
      name: oauth2-proxy
    spec:
      ingressClassName: {{ $ingress.className }}
      rules:
      - host: '{{ $domain }}'
        http:
          paths:
          - backend:
              service:
                name: oauth2-proxy
                port:
                  number: 80
            path: /
            pathType: Prefix
      tls: 
        - secretName: {{ $v._derived.tlsSecretName }}
          hosts:
            - '{{ $domain }}'
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: oauth2-proxy-error-page
    data:
      error.html: |
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <title>Login Redirect</title>
        </head>
        <body>
            <div class="content">
                If the browser does not redirect automatically, please follow <a href="/">this</a> link.
            </div>
            <script>
                document.title = "Login Redirect";
                document.body = document.createElement("body");
                document.body.innerHTML = "<div class=\"content\">If the browser does not redirect automatically, please follow <a href='/'>this</a> link.</div>";
                window.location.href = "/";
            </script>
        </body>
        </html>
