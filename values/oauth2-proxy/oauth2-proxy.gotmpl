{{- $v := .Values }}
{{- $k := $v.apps.keycloak }}
{{- $cm := $v.apps | get "cert-manager" }}
{{- $oauth2 := $v.apps | get "oauth2-proxy" }}
{{- $r := $v.apps | get "oauth2-proxy-redis" }}
{{- $o := $v | get "oidc" dict }}
{{- $joinTpl := readFile "../../helmfile.d/utils/joinListWithSep.gotmpl" }}


config:
  clientID: {{ $k.idp.clientID  }}
  clientSecret: {{ $k.idp.clientSecret }}
  cookieSecret: {{ $oauth2 | get "config.cookieSecret" (randAlpha 16) }}

replicaCount: 2
podDisruptionBudget:
  enabled: false
  minAvailable: 1
priorityClassName: otomi-critical
resources: {{- $oauth2.resources | toYaml | nindent 2 }}
# get all public domains that don't have the cluster domain as root
{{ $domains := list }}
{{- range $teamId, $team := $v.teamConfig }}
  {{- if hasKey $team "services" }}
    {{- range $s := $team.services }}
      {{- $type := $s.type | default "auth" }}
      {{- if and (hasKey $s "domain") (not (eq $type "public")) }}
        {{- if and (not (has $s.domain $domains)) (not (contains $v.cluster.domainSuffix $s.domain)) }}
          {{- $domains = append $domains $s.domain }}
        {{- end }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
{{- $domainList := tpl $joinTpl (dict "list" (append $domains (printf ".%s" $v.cluster.domainSuffix)) "sep" ",") }}

# securityContext:
#   enabled: true
  # runAsUser: 2000
podAnnotations:
  sidecar.istio.io/inject: "false"
extraArgs:
  - --ssl-insecure-skip-verify={{ $v._derived.untrustedCA }}
  # - # supported=oidc, google, azure, github
  - --provider=oidc
  - --whitelist-domain={{ $domainList }}
  - --scope={{ $o | get "scope" "openid email profile" }}
  - --session-store-type=redis
  - --redis-connection-url=redis://oauth2-proxy-redis-master
  - --redis-password={{ $r | get "password" }}
  - --redirect-url=https://auth.{{ $v.cluster.domainSuffix }}/oauth2/callback
  - --email-domain="*"
  - --cookie-domain={{ $domainList }}
  - --cookie-samesite=none
  - --cookie-secure=true
  # - # cookie-httponly=true
  - --reverse-proxy=true
  - --cookie-refresh=0h1m0s # set to the same as keycloak realm's accessCodeLifespan 
  - --pass-authorization-header=true
  # - # pass-basic-auth=true
  - --skip-auth-regex='/manifest.json'
  - --silence-ping-logging=true
  # - # exclude-logging-paths=/ping
  - --set-authorization-header=true
  # - # set-xauthrequest=true
  - --oidc-issuer-url={{ $v._derived.oidcBaseUrl }}
  # - # oidc-issuer-url={{ $v._derived.oidcBaseUrlBackchannel }}
  - --insecure-oidc-allow-unverified-email=true
  - --show-debug-on-error=true
  - --custom-templates-dir=/etc/oauth2-proxy

extraVolumes:
  - name: error-page
    configMap:
      name: oauth2-proxy-error-page

extraVolumeMounts:
  - name: error-page
    mountPath: /etc/oauth2-proxy/error.html
    subPath: error.html

{{- with .Values.otomi | get "globalPullSecret" nil }}
imagePullSecrets:
  - name: otomi-pullsecret-global
{{- end }}

redis:
  enabled: true
  architecture: {{ $r | get "architecture" }}
  auth:
    password: {{ $r | get "password" }}

  sentinel:
    persistence:
      size: {{ $r.persistence.sentinel.size }}
    podAnnotations:
      sidecar.istio.io/inject: "false"
    resources: {{- $r.resources.sentinel | toYaml | nindent 6 }}

  master:
    persistence:
      size: {{ $r.persistence.master.size }}
    podAnnotations:
      sidecar.istio.io/inject: "false"
    priorityClassName: otomi-critical
    resources: {{- $r.resources.master | toYaml | nindent 6 }}

  replica:
    persistence:
      size: {{ $r.persistence.replica.size }}
    podAnnotations:
      sidecar.istio.io/inject: "false"
    priorityClassName: otomi-critical
    resources: {{- $r.resources.replica | toYaml | nindent 6 }}

  metrics:
    podAnnotations:
      sidecar.istio.io/inject: "false"
    priorityClassName: otomi-critical
    resources: {{- $r.resources.metrics | toYaml | nindent 6 }}

  {{- with .Values.otomi | get "globalPullSecret" nil }}
  imagePullSecrets:
    - name: otomi-pullsecret-global
  {{- end }}