{{- $v := .Values }}
{{- $appsDomain := printf "apps.%s" $v.cluster.domainSuffix }}

image:
  # @TODO:
  tag: v1.47.0

podAnnotations:
  policy.otomi.io/ignore: psp-allowed-users

cr:
  create: true
  namespace: kiali
  spec:
    auth:
      strategy: anonymous
    deployment:
      accessible_namespaces:
        - '**'
      pod_annotations:
        policy.otomi.io/ignore: psp-allowed-users
        sidecar.istio.io/inject: "true"
      ingress_enabled: false
      namespace: kiali
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 32Mi
      verbose_mode: "4"
    external_services:
      grafana:
        auth:
          insecure_skip_verify: {{ $v._derived.untrustedCA }}
          password: {{ $v.otomi.adminPassword }}
          type: basic
          username: otomi-admin
        dashboards:
          - name: Istio Service Dashboard
          - name: Istio Workload Dashboard
          - name: Istio Mesh Dashboard
          - name: Istio Control Plane Dashboard
          - name: Istio Performance Dashboard
          - name: Istio Wasm Extension Dashboard
        enabled: true
        in_cluster_url: http://po-grafana.monitoring:3000
        is_core: false
        url: https://{{ $appsDomain }}/grafana/
      istio:
        component_status:
          enabled: true
          components:
          - app_label: istiod
            is_core: true
          - app_label: istio-ingressgateway-public
            is_core: true
            is_proxy: true
          - app_label: istio-ingressgateway-private
            is_core: true
            is_proxy: true
          - app_label: istio-egressgateway
            is_core: false
            is_proxy: true
        # url_service_version: http://istiod.istio-system:15014/version
      prometheus:
        auth:
          insecure_skip_verify: {{ $v._derived.untrustedCA }}
          type: none
        cache_duration: 10
        cache_enabled: true
        cache_expiration: 300
        is_core: false
        url: http://po-prometheus.monitoring:9090/
      tracing:
        auth:
          insecure_skip_verify: {{ $v._derived.untrustedCA }}
          type: none
        enabled: true
        in_cluster_url: http://jaeger-operator-jaeger-query.jaeger:16686/jaeger/
        is_core: false
        namespace_selector: true
        url: https://{{ $appsDomain }}/jaeger/
        use_grpc: false #use different port if use_grpc=true
        whitelist_istio_system: ["istio-ingressgateway-public","istio-ingressgateway-private","istio-egressgateway"]
    istio_component_namespaces:
      prometheus: monitoring
      grafana: monitoring
      jaeger: jaeger
    istio_namespace: istio-system
    kiali_feature_flags:
      certificates_information_indicators:
        enabled: true
        secrets:
        - cacerts
        - istio-ca-secret
    server:
      web_root: /kiali
      web_fqdn: {{ $appsDomain }}

resources:
  limits:
    cpu: 800m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 150Mi

{{- with .Values.otomi | get "globalPullSecret" nil }}
imagePullSecrets:
  - name: otomi-pullsecret-global
{{- end }}
