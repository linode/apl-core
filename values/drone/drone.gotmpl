{{- $v := .Values }}
{{- $d := $v.charts.drone }}
{{- $oa := $v.charts | get "otomi-api" }}
{{- $cm := $v.charts | get "cert-manager" }}
{{- $g := $v.charts | get "gitea" }}
{{- $sops := $v | get "kms.sops" dict }}
{{- $hasGitea := $g | get "enabled" }}
{{- $provider := $d | get "sourceControl.provider" }}
{{- $giteaValuesUrl := printf "https://gitea.%s/otomi/values" $v.cluster.domainSuffix }}
{{- $debug := $d | get "debug" false }}
{{- $trace := $d | get "trace" false }}
{{- $host := printf "drone.%s" $v.cluster.domainSuffix }}
{{- $sopsEnv := tpl (readFile "../../helmfile.d/snippets/sops-env.gotmpl") $sops }}
{{- $dindEnabled := false }}

clusterDomainSuffix: {{ $v.cluster.domainSuffix }}

images:
  # @TODO:
  server:
    tag: 2.7.3
  agent:
    repository: "docker.io/drone/drone-runner-kube"
    tag: latest

nameOverride: drone
fullnameOverride: drone
sharedSecret: {{ $d | get "sharedSecret" }}
sourceControl: {{- $d.sourceControl | toYaml | nindent 2 }}
server:
  annotations:
    policy.otomi.io/ignore: psp-allowed-users
  host: {{ $host }}
  protocol: https
  adminUser: {{ $d | get "adminUser" "otomi-admin" }}
  adminToken: {{ $d | get "adminToken" ($g | get "adminPassword" $v.otomi.adminPassword) }}
  dind:
    enabled: {{ $dindEnabled }}
  resources:
    {{- with $d | get "resources.server" nil }}
      {{- toYaml .| nindent 4 }}
    {{- else }}
    requests:
      memory: 32Mi
      cpu: 40m
    limits:
      memory: 256Mi
      cpu: 200m
    {{- end }}
  env:
    DRONE_LOGS_DEBUG: {{ $debug }}
    DRONE_LOGS_TRACE: {{ $trace }}
    DRONE_LOGS_PRETTY: false
    DRONE_RPC_DEBUG: {{ $debug }}
    {{- if hasKey $d "orgsFilter" }}
    DRONE_ORGS: {{ $d.orgsFilter }}
    {{- end }}
    {{- if hasKey $d "repoFilter" }}
    DRONE_REPOSITORY_FILTER: {{ $d.repoFilter }}
    {{- end }}
    {{- if eq $provider "github" }}
    DRONE_ADMISSION_ENDPOINT: http://drone-admit-members:80
    DRONE_ADMISSION_SECRET: {{ $d | get "sharedSecret" (randAlpha 32) }}
    {{- end }}

agent:
  annotations:
    policy.otomi.io/ignore: psp-allowed-users,psp-privileged,psp-host-filesystem,banned-image-tags
    sidecar.istio.io/inject: "false"
  resources:
    {{- with $d | get "resources.agent" nil }}
      {{- toYaml . | nindent 4 }}
    {{- else }}
    requests:
      memory: 32Mi
      cpu: 40m
    limits:
      memory: 256Mi
      cpu: 200m
    {{- end }}
  env:
    DRONE_TRACE: {{ $trace }}
    DRONE_DEBUG: {{ $debug }}
  runnerEnv: |
    {{- $sopsEnv | nindent 4 }}
    {{- if and $hasGitea $v._derived.untrustedCA }}
      {{- if $dindEnabled }}
    DRONE_RUNNER_VOLUMES: '/etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt'
      {{- else }}
    {{- /*
    We can not yet be sure wether containerd runtime is in use, because that depends on provider and version.
    Once we know for sure we can map the host path to the cert:
    DRONE_RUNNER_VOLUMES: '/etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt'.
    But for now we have to skip ssl verification: */}}
    DRONE_VALIDATE_PLUGIN_SKIP_VERIFY: true
    GIT_SSL_NO_VERIFY: true
      {{- end }}
    {{- end }}

persistence:
  enabled: true
  storageClass: fast

metrics:
  prometheus:
    enabled: true

{{- with .Values.otomi | get "globalPullSecret" nil }}
imagePullSecrets:
  - name: otomi-pullsecret-global
{{- end }}

{{- if $v._derived.untrustedCA }}
customCa: |
  {{- $v._derived.caCert | nindent 2 }}
{{- end }}