{{- $v := .Values }}
{{- $d := $v.apps.drone }}
{{- $oa := $v.apps | get "otomi-api" }}
{{- $cm := $v.apps | get "cert-manager" }}
{{- $g := $v.apps | get "gitea" }}
{{- $sops := $v | get "kms.sops" dict }}
{{- $hasGitea := $g | get "enabled" }}
{{- $provider := $d | get "sourceControl.provider" }}
{{- $giteaValuesUrl := printf "https://gitea.%s/otomi/values" $v.cluster.domainSuffix }}
{{- $host := printf "drone.%s" $v.cluster.domainSuffix }}
{{- $sopsEnv := tpl (readFile "../../helmfile.d/snippets/sops-env.gotmpl") $sops }}
{{- $dindEnabled := false }}

clusterDomainSuffix: {{ $v.cluster.domainSuffix }}

images:
  agent:
    repository: "docker.io/drone/drone-runner-kube"
    tag: {{ $d | get "image.agent.tag" "latest" }}
    pullPolicy:  {{ $d | get "image.agent.pullPolicy" "Always" }}
  server:
    tag: {{ $d | get "image.server.tag" "2.7.3" }}
    pullPolicy:  {{ $d | get "image.server.pullPolicy" "IfNotPresent" }}

nameOverride: drone
fullnameOverride: drone
sharedSecret: {{ $d | get "sharedSecret" }}
sourceControl: {{- $d.sourceControl | toYaml | nindent 2 }}
server:
  annotations:
    policy.otomi.io/ignore: psp-allowed-users
  host: {{ $host }}
  protocol: https
  adminUser: {{ $d | get "adminUser" "otomi-admin" }}
  adminToken: {{ $d | get "adminToken" ($g | get "adminPassword" $v.otomi.adminPassword) }}
  dind:
    enabled: {{ $dindEnabled }}
  resources:
    {{- with $d | get "resources.server" nil }}
      {{- toYaml .| nindent 4 }}
    {{- else }}
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 40m
      memory: 32Mi
    {{- end }}
  env:
    DRONE_LOGS_DEBUG: {{ $d.debug }}
    DRONE_LOGS_TRACE: {{ $d.trace }}
    DRONE_LOGS_PRETTY: false
    DRONE_RPC_DEBUG: {{ $d.debug }}
    {{- if hasKey $d "orgsFilter" }}
    DRONE_ORGS: {{ $d.orgsFilter }}
    {{- end }}
    {{- if hasKey $d "repoFilter" }}
    DRONE_REPOSITORY_FILTER: {{ $d.repoFilter }}
    {{- end }}
    {{- if eq $provider "github" }}
    DRONE_ADMISSION_ENDPOINT: http://drone-admit-members:80
    DRONE_ADMISSION_SECRET: {{ $d | get "sharedSecret" }}
    {{- end }}
    DRONE_WEBHOOK_ENDPOINT: http://otomi-api.otomi/drone
    DRONE_WEBHOOK_SECRET: {{ $d | get "sharedSecret" }}
  strategyType: Recreate
agent:
  annotations:
    policy.otomi.io/ignore: psp-allowed-users,psp-privileged,psp-host-filesystem,banned-image-tags
    sidecar.istio.io/inject: "false"
  resources:
    {{- with $d | get "resources.agent" nil }}
      {{- toYaml . | nindent 4 }}
    {{- else }}
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 40m
      memory: 32Mi
    {{- end }}
  env:
    DRONE_TRACE: {{ $d.trace }}
    DRONE_DEBUG: {{ $d.debug }}
  runnerEnv: |
    {{- $sopsEnv | nindent 4 }}
    {{- with $d | get "resources.runner.requests.cpu" nil }}
    DRONE_RESOURCE_REQUEST_CPU: {{ . }}
    {{- end }}
    {{- with $d | get "resources.runner.requests.memory" nil }}
    DRONE_RESOURCE_REQUEST_MEMORY: {{ . }}
    {{- end }}
    {{- if and $hasGitea $v._derived.untrustedCA }}
      {{- if $dindEnabled }}
      {{- /* DIND: We can for sure know that the runner has mounted the CA from the agent */}}
    DRONE_RUNNER_VOLUMES: '/etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt'
      {{- else }}{{- /*
      Host CA: Only containerd has predictable CA chain location, and docker has multiple we don't know in advance.
      We can not yet be sure wether containerd runtime is in use, because that depends on provider and version.
      Once we know for sure we can map the host path to the cert:
      DRONE_RUNNER_VOLUMES: '/etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt'.
      But for now we have to skip ssl verification: */}}
    DRONE_VALIDATE_PLUGIN_SKIP_VERIFY: true
    GIT_SSL_NO_VERIFY: true
      {{- end }}
    {{- end }}

persistence:
  enabled: true
  {{- if $v._derived.supportedCloud }}
  storageClass: fast
  {{- end }}
  {{- if eq $v.cluster.provider "vultr" }}
  size: 10Gi
  {{- end }}
metrics:
  prometheus:
    enabled: true

{{- with .Values.otomi | get "globalPullSecret" nil }}
imagePullSecrets:
  - name: otomi-pullsecret-global
{{- end }}

{{- if $v._derived.untrustedCA }}
customCa: |
  {{- $v._derived.caCert | nindent 2 }}
{{- end }}