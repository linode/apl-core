{{- $v := .Environment.Values }}
{{- $d := $v.charts | get "drone" dict }}
{{- $debug := $d | get "debug" false }}
{{- $host := printf "drone.%s" $v.cluster.domain }}
images:
  server:
    tag: 1.9.0
  agent:
    repository: "docker.io/drone/drone-runner-kube"
    tag: latest

nameOverride: drone
fullnameOverride: drone
sharedSecret: {{ $d.sharedSecret | default "zumsecreetz" }}
sourceControl: {{- $d.sourceControl | toYaml | nindent 2 }}
server:
  host: {{ $host }}
  protocol: https
  adminUser: {{ $d.adminUser }}
  adminToken: {{ $d | get "adminToken" nil }}
  dind:
    enabled: false
  resources:
    {{- with $d | get "resources.server" nil }}
      {{- toYaml .| nindent 4 }}
    {{- else }}
    requests:
      memory: 32Mi
      cpu: 40m
    limits:
      memory: 256Mi
      cpu: 200m
    {{- end }}
  env:
    DRONE_LOGS_DEBUG: {{ $debug }}
    DRONE_LOGS_TRACE: {{ $debug }}
    DRONE_LOGS_PRETTY: false
    DRONE_RPC_DEBUG: {{ $debug }}
    DRONE_ORGS: {{ $d.orgsFilter }}
    {{- with $d.repoFilter }}
    DRONE_REPOSITORY_FILTER: {{ . }}
    {{- end }}
    DRONE_SERVER_PROXY_HOST: proxy.{{ $v.cluster.domain }}/drone
    DRONE_ADMISSION_ENDPOINT: http://drone-admit-members:80
    DRONE_ADMISSION_SECRET: {{ $d | get "sharedSecret" "1234567890abcdef1234567890abcdef" }}
kubernetes:
  resources:
    {{- with $d | get "resources.runner" nil }}
      {{- toYaml . | nindent 4 }}
    {{- else }}
    requests:
      memory: 32Mi
      cpu: 40m
    limits:
      memory: 2Gi
      cpu: 1
    {{- end }}
  env:
    # DRONE_TRACE: true
    # DRONE_DEBUG: true
    DRONE_RUNNER_ENVIRON: "CLOUD:{{ $v.cluster.provider }},CLUSTER:{{ $v.cluster.name }}"
  envFile: |
    GCLOUD_SERVICE_KEY='{{ $v | get "google.kmsAccount" "" | replace "\n" "" }}'

persistence:
  enabled: true
  storageClass: fast

metrics:
  prometheus:
    enabled: true
