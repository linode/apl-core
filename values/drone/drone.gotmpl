{{- $v := .Environment.Values }}
{{- $d := $v.charts | get "drone" dict }}
{{- $host := printf "drone.%s" $v.cluster.domain }}
images:
  server:
    tag: latest
  agent:
    repository: "docker.io/drone/drone-runner-kube"
    tag: latest

nameOverride: drone
fullnameOverride: drone
sharedSecret: zumsecreetz
sourceControl: {{- $d.sourceControl | toYaml | nindent 2 }}
server:
  host: {{ $host }}
  protocol: https
  adminUser: {{ $d.server.adminUser }}
  dind:
    enabled: false
  resources:
    {{- if (hasKey $d "resources.server") }}
      {{- $d.resources.server | toYaml | nindent 4 }}
    {{- else }}
    requests:
      memory: 32Mi
      cpu: 40m
    limits:
      memory: 2Gi
      cpu: 1
    {{- end }}
  env:
    CLOUD: {{ $v.cluster.provider }}
    CLUSTER: {{ $v.cluster.name }}
    DRONE_LOGS_DEBUG: true
    DRONE_LOGS_TRACE: true
    DRONE_LOGS_PRETTY: true
    DRONE_RPC_DEBUG: true
    DRONE_ORGS: {{ $d.orgsFilter }}
    {{- if $d.repoFilter }}
    DRONE_REPOSITORY_FILTER: {{ $d.repoFilter }}
    {{- end }}
    DRONE_SERVER_PROXY_HOST: proxy.{{ $v.cluster.domain }}/drone
kubernetes:
  resources:
    {{- if (hasKey $d "resources.runner") }}
      {{- $d.resources.runner | toYaml | nindent 4 }}
    {{- else }}
    requests:
      memory: 32Mi
      cpu: 40m
    limits:
      memory: 2Gi
      cpu: 1
    {{- end }}
  env:
    # DRONE_TRACE: true
    # DRONE_DEBUG: true
    DRONE_RUNNER_ENVIRON: "CLOUD:{{ $v.cluster.provider }},CLUSTER:{{ $v.cluster.name }}"
persistence:
  enabled: true
  storageClass: fast

metrics:
  prometheus:
    enabled: true
