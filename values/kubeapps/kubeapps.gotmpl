{{- $v := .Values }}
{{- $k := $v | get "apps.kubeapps" }}
{{- $h := $v | get "apps.harbor" }}
{{- $kk := $v | get "apps.keycloak" }}
{{- $oauth2Url := printf "https://auth.%s" $v.cluster.domainSuffix }}
{{- $harborUrl := printf "https://harbor.%s" $v.cluster.domainSuffix }}
{{- $initialRepos := $k | get "initialRepos" list }}
assetsvc:
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 50Mi
authProxy:
  enabled: false
  external: true
  skipKubeappsLoginPage: true
  # oauthLoginURI: {{ $oauth2Url }}/oauth2/start
  # oauthLogoutURI: {{ $oauth2Url }}/oauth2/sign_out
  # provider: oidc
  # clientID: {{ $kk.idp.clientID }}
  # clientSecret: {{ $kk.idp.clientSecret }}
featureFlags:
  operators: true 
dashboard:
  replicaCount: {{ $k.autoscaling.dashboard.minReplicas }}
frontend:
  proxypassAccessTokenAsBearer: {{ eq $v.cluster.provider "google" }}
  replicaCount: {{ $k.autoscaling.frontend.minReplicas }}
kubeops:
  replicaCount: {{ $k.autoscaling.kubeops.minReplicas }}
apprepository:
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
  initialRepos:
    - name: bitnami
      url: https://charts.bitnami.com/bitnami  
{{- range $repo := $initialRepos }}
    - {{- toYaml $repo | nindent 6 }}
      containerSecurityContext:
        enabled: true
        runAsUser: 1001
{{- end }}
{{- if $v.apps.harbor.enabled }}
    - name: harbor
      type: helm
      description: Local cluster chart repository
      url: {{ $harborUrl }}/chartrepo/library
      containerSecurityContext:
        enabled: true
        runAsUser: 1001
      # basicAuth:
      #   user: admin
      #   password: {{ $h.registry.credentials.password }}
        # TODO: remove next line when CA is truly supported: https://github.com/kubeapps/kubeapps/issues/515
      tlsInsecureSkipVerify: {{ $v._derived.untrustedCA }}
  {{- if $v._derived.untrustedCA }}
      caCert: |
        {{- /*$v._derived.caCert | nindent 8 */}}
  {{- end }}
{{- end }}
metrics:
  enabled: true
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 50Mi

postgresql:
  existingSecret: null
  postgresqlPassword: {{ $k | get "postgresqlPassword" }}
  postgresqlPostgresPassword: {{ $k | get "postgresqlPassword" }}
  replication:
    password: {{ $k | get "postgresqlPassword" }}
  resources:
    limits:
      memory: 768Mi
      cpu: 750m
    requests:
      memory: 256Mi
      cpu: 250m

securityContext:
  enabled: true

{{- with .Values.otomi | get "globalPullSecret" nil }}
global:
  imagePullSecrets:
    - name: otomi-pullsecret-global
image:
  pullSecrets:
    - name: otomi-pullsecret-global
imagePullSecrets:
  - name: otomi-pullsecret-global
{{- end }}
  