{{- $v := .Values }}
{{- $m:= $v.apps.minio }}
{{- $k := $v.apps.keycloak }}
{{- $minioDomain := printf "minio.%s" $v.cluster.domainSuffix }}
{{- $rootCASecretName := "root-ca" }}

mode: standalone
auth:
  rootUser: otomi-admin
  rootPassword: {{ $v.otomi.adminPassword }}

metrics:
  serviceMonitor:
    enabled: true
    namespace: monitoring
    labels:
      prometheus: system

## OIDC configuration
{{/* To do: add mappers to Keycloak task
extraEnvVars:
  - name: MINIO_IDENTITY_OPENID_CONFIG_URL
    value: {{ $v._derived.oidcWellKnownUrl }}
  - name: MINIO_IDENTITY_OPENID_CLIENT_ID
    value: {{ $k.idp.clientID  }}
  - name: MINIO_IDENTITY_OPENID_CLIENT_SECRET
    value: {{ $k.idp.clientSecret }}
  - name: MINIO_IDENTITY_OPENID_CLAIM_NAME
    value: policy
  - name: MINIO_IDENTITY_OPENID_SCOPES
    value: openid
  - name: MINIO_IDENTITY_OPENID_REDIRECT_URI
    value: "https://{{ $minioDomain }}/oauth_callback"
*/}}

{{- if $v._derived.untrustedCA }}
extraVolumes:       
  - name: root-ca-1
    secret:
      secretName: root-ca
  - name: root-ca-2
    secret:
      secretName: root-ca
extraVolumeMounts:
  - name: root-ca-1
    mountPath: '/opt/bitnami/minio/certs/CAs/tls.crt'
    subPath: tls.crt
  - name: root-ca-2
    mountPath: '/certs/CAs/tls.crt'
    subPath: tls.crt
{{- end }}
persistence:
  enabled: {{ $m.persistence.enabled}}
  size: {{ $m.persistence.size }}
resources: {{- $m.resources | toYaml | nindent 2 }}
provisioning:
  enabled: {{ $m.provisioning.enabled }}
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi
  buckets:
    - name: velero
    - name: loki
    - name: harbor
    - name: tempo
    - name: database
  policies:
    - name: otomi-apps
      statements:
        - effect: Allow
          principal:
            AWS:
            - "*"
          actions:
          - s3:GetBucketLocation
          - s3:ListBucketMultipartUploads
          resources:
          - arn:aws:s3:::velero
          - arn:aws:s3:::loki
          - arn:aws:s3:::harbor
          - arn:aws:s3:::tempo
          - arn:aws:s3:::harbor 
          - arn:aws:s3:::database
        - effect: Allow
          principal:
            AWS:
            - "*"
          actions:
          - s3:ListBucket
          resources:
          - arn:aws:s3:::velero
          - arn:aws:s3:::loki
          - arn:aws:s3:::harbor
          - arn:aws:s3:::tempo
          - arn:aws:s3:::database
          condition:
            StringEquals:
              s3:prefix:
              - "*"
        - effect: Allow
          principal:
            AWS:
            - "*"
          actions:
          - s3:ListMultipartUploadParts
          - s3:PutObject
          - s3:AbortMultipartUpload
          - s3:DeleteObject
          - s3:GetObject
          resources:
          - arn:aws:s3:::velero/**
          - arn:aws:s3:::loki/**
          - arn:aws:s3:::harbor/**
          - arn:aws:s3:::tempo/**
          - arn:aws:s3:::database/**
