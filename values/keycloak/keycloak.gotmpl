{{- $v := .Values }}
{{- $k := $v.charts | get "keycloak" dict }}
{{- $dbVendor := ($k | get "persistence.dbVendor" "postgres") }}

init:
  resources:
    limits:
      cpu: "10m"
      memory: "32Mi"
    requests:
      cpu: "10m"
      memory: "32Mi"

keycloak:
  # image:
  #   repository: docker.io/jboss/keycloak
  #   tag: "11.0.3"
  username: {{ $k | get "admin.username" "admin" }}
  password: {{ $k | get "admin.password" ($v.otomi | get "adminPassword" "bladibla") }}
  basepath: ""
  cli:
    custom: |
      # redirect socket binding to https port 
      /subsystem=undertow/server=default-server/http-listener=default:write-attribute(name=proxy-address-forwarding, value=true)
      /subsystem=undertow/server=default-server/http-listener=default:write-attribute(name=socket-binding, value=http)
      /subsystem=undertow/server=default-server/http-listener=default:write-attribute(name=redirect-socket, value=proxy-https)
      /socket-binding-group=standard-sockets/socket-binding=proxy-https:add(port=443)
      # hostname SPI modification
      /subsystem=keycloak-server/spi=hostname/provider=default:write-attribute(name=properties.frontendUrl,value="https://keycloak.{{ $v.cluster.domainSuffix }}/")
      /subsystem=keycloak-server/spi=hostname/provider=default:write-attribute(name=properties.forceBackendUrlToFrontendUrl,value=true)
      
  persistence:
    dbVendor: {{ $dbVendor }}
    dbHost: {{ $k | getOrNil "persistence.dbHost" }}
    deployPostgres: {{ $k | get "persistence.deployPostgres" (eq $dbVendor "postgres") }}
  priorityClassName: "otomi-critical"
  proxyAddressForwarding: true
  resources:
    {{- with $k | get "resources.keycloak" nil }}
      {{- toYaml . | nindent 4 }}
    {{- else }}
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 1Gi
    {{- end }}
  replicas: 1
  startupScripts:
    install-theme.sh: |
      #!/bin/sh
      cp -Rv /themes/* /opt/jboss/keycloak/themes/
  extraInitContainers:
    - name: keycloak-otomi-branding
      image: otomi/console:v0.4.43
      imagePullPolicy: IfNotPresent
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      command:
        - sh
      args:
        - -c
        - |
          echo "Copying Otomi theme..."
          mkdir -p /themes
          cp -Rv /app/keycloak/themes/* /themes/
      resources:
        requests:
          cpu: 50m
          memory: 16Mi
        limits:
          cpu: 500m
          memory: 16Mi
      volumeMounts:
        - name: theme
          mountPath: /themes

  extraVolumes:
    - name: theme
      emptyDir: {}

  extraVolumeMounts: 
    - name: theme
      mountPath: /themes
  securityContext:
    runAsUser: 1000
    fsGroup: 1000
  podAnnotations: 
    # policy.otomi.io/ignore: banned-image-tags
    policy.otomi.io/ignore-sidecar: psp-allowed-users

postgresql:
  commonAnnotations: 
    # policy.otomi.io/ignore: banned-image-tags
    policy.otomi.io/ignore-sidecar: psp-allowed-users
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  postgresqlPassword: {{ $k | get "postgresqlPassword" (randAlpha 32) }}
  persistence:
    enabled: {{ $k | get "postgresql.persistence.enabled" (eq $dbVendor "postgres") }} 
  metrics:
    enabled: true
    resources:
      limits:
        cpu: 250m
        memory: 128Mi
      requests:
        cpu: 25m
        memory: 32Mi
    securityContext:
      enabled: true
      runAsUser: 1001
    serviceMonitor:
      enabled: true
      additionalLabels:
        prometheus: po-prometheus
  resources:
    {{- with $k | get "resources.postgresql" nil }}
      {{- toYaml . | nindent 4 }}
    {{- else }}
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 1Gi
    {{- end }}
  master:
    priorityClassName: "otomi-critical"
  slave:
    priorityClassName: "otomi-critical"

prometheus:
  operator:
    enabled: true
    serviceMonitor:
      namespace: keycloak
      # selector:
      #   prometheus: po-prometheus
      #   release: prometheus-operator
      path: /realms/master/metrics
      
test:
  enabled: false
