{{- $v := .Values }}
{{- $k := $v | get "apps.keycloak" }}
{{- $consoleLoginVersion := $v.versions.consoleLogin}}
{{- $isSemver := regexMatch "^[0-9.]+" $consoleLoginVersion }}
{{- $globalPullSecret := $v.otomi | get "globalPullSecret" nil }}

image:
  repository: {{ if $v.otomi.linodeLkeImageRepository }}{{ $v.otomi.linodeLkeImageRepository }}/docker/keycloak/keycloak{{ else }}quay.io/keycloak/keycloak{{ end }}
  tag: "26.3.3"
  pullPolicy: IfNotPresent

{{- if $globalPullSecret }}
imagePullSecrets:
  - name: otomi-pullsecret-global
{{- end }}

service:
  httpPort: 8080

enableServiceLinks: false

resources: {{ $k.resources.keycloak | toYaml | nindent 2 }}
priorityClassName: otomi-critical

# Use CNPG platform database
postgresql:
  enabled: false

database:
  vendor: postgres
  hostname: keycloak-db-rw.keycloak.svc.cluster.local
  port: 5432
  existingSecret: keycloak-db-app
  username: keycloak
  database: keycloak

cache:
  stack: custom

extraEnv: |
  - name: KC_CACHE_STACK
    value: jdbc-ping
  - name: KC_CACHE
    value: ispn
  - name: KC_HOSTNAME
    value: keycloak.{{ $v.cluster.domainSuffix }}
  - name: QUARKUS_LOG_LEVEL
    value: DEBUG
  - name: KC_LOG_LEVEL
    value: DEBUG
  - name: KC_LOG_CONSOLE_OUTPUT
    value: json
  - name: KC_DB_POOL_INITIAL_SIZE
    value: "5"
  - name: KC_DB_POOL_MIN_SIZE
    value: "5"
  - name: KC_DB_POOL_MAX_SIZE
    value: "32"
  - name: KEYCLOAK_PRODUCTION
    value: "true"
  - name: KEYCLOAK_PROXY_HEADERS
    value: edge
  - name: KEYCLOAK_ADMIN
    valueFrom:
      secretKeyRef:
        name: keycloak-initial-admin
        key: username
  - name: KEYCLOAK_ADMIN_PASSWORD
    valueFrom:
      secretKeyRef:
        name: keycloak-initial-admin
        key: password
