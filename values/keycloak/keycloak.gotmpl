{{- $v := .Environment.Values }}
{{- $k := $v.charts | get "keycloak" dict }}
{{- $dbVendor := ($k | get "persistence.dbVendor" "postgres") }}
init:
  resources:
    limits:
      cpu: "10m"
      memory: "32Mi"
    requests:
      cpu: "10m"
      memory: "32Mi"

keycloak:
  username: {{ $k | get "admin.username" "admin" }}
  password: {{ $k | get "admin.password" "bladibla" }}
  basepath: ""
  persistence:
    dbVendor: {{ $dbVendor }}
    dbHost: {{ $k | getOrNil "persistence.dbHost" }}
    deployPostgres: {{ $k | get "persistence.deployPostgres" (eq $dbVendor "postgres") }}
  priorityClassName: "otomi-critical"
  resources:
    {{- if (hasKey $k "resources.keycloak") }}
      {{- $k.resources.keycloak | toYaml | nindent 4 }}
    {{- else }}
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 1Gi
    {{- end }}
  replicas: 1
  startupScripts:
    install-theme.sh: |
      #!/bin/sh
      cp -Rv /themes/* /opt/jboss/keycloak/themes/
  extraInitContainers:
    - name: keycloak-otomi-branding
      image: "otomi/console:{{ $v | get "charts.otomi-console.image.tag" "master" }}"
      imagePullPolicy: "{{ $v | get "charts.otomi-console.image.pullPolicy" "IfNotPresent" }}"
      command:
        - sh
      args:
        - -c
        - |
          echo "Copying Otomi theme..."
          mkdir -p /themes
          cp -Rv /app/keycloak/themes/* /themes/
      resources:
        requests:
          cpu: 50m
          memory: 16Mi
        limits:
          cpu: 500m
          memory: 16Mi
      volumeMounts:
        - name: theme
          mountPath: /themes

  extraVolumes:
    - name: theme
      emptyDir: {}

  extraVolumeMounts: 
    - name: theme
      mountPath: /themes

postgresql:
  postgresqlUsername: {{ $k | get "postgresql.postgresqlUsername" "keycloak" }}
  postgresqlPassword: {{ $k | get "postgresql.postgresqlUsername" "keycloak" }}
  postgresqlDatabase: {{ $k | get "postgresql.postgresqlUsername" "keycloak" }}
  persistence:
    enabled: {{ $k | get "postgresql.persistence.enabled" (eq $dbVendor "postgres") }} 
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      additionalLabels:
        prometheus: po-prometheus
  resources:
    {{- if (hasKey $k "resources.postgresql") }}
      {{- $k.resources.postgresql | toYaml | nindent 4 }}
    {{- else }}
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 1Gi
    {{- end }}
  master:
    priorityClassName: "otomi-critical"
  slave:
    priorityClassName: "otomi-critical"

prometheus:
  operator:
    enabled: true
    serviceMonitor:
      namespace: keycloak
      # selector:
      #   prometheus: po-prometheus
      #   release: prometheus-operator
      path: /realms/master/metrics
      
test:
  enabled: false
