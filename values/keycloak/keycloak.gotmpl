{{- $v := .Values }}
{{- $k := $v.apps.keycloak }}
{{- $dbVendor := ($k | get "persistence.dbVendor" "postgres") }}
{{- $pinnedConsoleVersion := "0.5.4" }}
image:
  tag: 15.1.1
contextPath: ""
persistence:
  dbVendor: {{ $dbVendor }}
  dbHost: {{ $k | get "persistence.dbHost" nil }}
  deployPostgres: {{ $k | get "persistence.deployPostgres" (eq $dbVendor "postgres") }}
priorityClassName: otomi-critical
proxyAddressForwarding: true
resources:
  {{- with $k | get "resources.keycloak" nil }}
    {{- toYaml . | nindent 4 }}
  {{- else }}
  limits:
    cpu: 1
    memory: 1.5Gi
  requests:
    cpu: 100m
    memory: 1Gi
  {{- end }}
replicas: 1
startupScripts:
  frontend.cli: |
    embed-server --server-config=standalone-ha.xml --std-out=echo
    batch

    echo Configuring node identifier

    ## Sets the node identifier to the node name (= pod name). Node identifiers have to be unique. They can have a
    ## maximum length of 23 characters. Thus, the chart's fullname template truncates its length accordingly.
    /subsystem=transactions:write-attribute(name=node-identifier, value=${jboss.node.name})

    echo Finished configuring node identifier

    /subsystem=keycloak-server/:write-attribute(name=web-context,value=/)
    /subsystem=undertow/server=default-server/host=default-host:write-attribute(name=default-web-module,value=keycloak-server.war)

    # hostname SPI modification
    /subsystem=keycloak-server/spi=hostname/provider=default:write-attribute(name=properties.frontendUrl,value="https://keycloak.{{ $v.cluster.domainSuffix }}/")
    /subsystem=keycloak-server/spi=hostname/provider=default:write-attribute(name=properties.forceBackendUrlToFrontendUrl,value=false)

    run-batch
    stop-embedded-server

  install-theme.sh: |
    #!/bin/sh
    cp -Rv /themes/* /opt/jboss/keycloak/themes/
extraInitContainers: |
  - name: keycloak-otomi-branding
    image: otomi/console:v{{ $pinnedConsoleVersion }}
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsUser: 1000
      runAsGroup: 1000
    command:
      - sh
    args:
      - -c
      - |
        echo "Copying Otomi theme..."
        mkdir -p /themes
        cp -Rv /app/keycloak/themes/* /themes/
    resources:
      requests:
        cpu: 50m
        memory: 16Mi
      limits:
        cpu: 500m
        memory: 64Mi
    volumeMounts:
      - name: theme
        mountPath: /themes

extraEnv: |
  - name: KEYCLOAK_USER
    value: {{ $k.adminUsername }}
  - name: KEYCLOAK_PASSWORD
    value: {{ $k.adminPassword }}
extraVolumeMounts: |
  - name: theme
    mountPath: /themes
extraVolumes: |
  - name: theme
    emptyDir: {}

postgresql:
  # @TODO:
  image:
    tag: 13.5.0
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  postgresqlPostgresPassword: {{ $k.postgresqlPassword }}
  postgresqlPassword: {{ $k.postgresqlPassword }}
  persistence:
    {{- if eq $v.cluster.provider "vultr" }}
    size: 10Gi
    {{- end }}
    enabled: {{ $k | get "postgresql.persistence.enabled" (eq $dbVendor "postgres") }} 
  metrics:
    image:
      tag: 0.10.0
    enabled: true
    resources:
      limits:
        cpu: 250m
        memory: 128Mi
      requests:
        cpu: 25m
        memory: 32Mi
    securityContext:
      enabled: true
      runAsUser: 1001
    serviceMonitor:
      enabled: true
      additionalLabels:
        prometheus: system
  resources:
    {{- with $k | get "resources.postgresql" nil }}
      {{- toYaml . | nindent 4 }}
    {{- else }}
    limits:
      cpu: 1
      memory: 1.5Gi
    requests:
      cpu: 100m
      memory: 1Gi
    {{- end }}
  master:
    priorityClassName: otomi-critical
  slave:
    priorityClassName: otomi-critical

prometheus:
  operator:
    enabled: true
    serviceMonitor:
      namespace: keycloak
      selector:
        prometheus: system
      path: /metrics
      
test:
  enabled: false
