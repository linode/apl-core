{{- $v := .Values }}
{{- $k := $v.apps.keycloak }}
{{- $cnpg := $v.apps.cnpg }}
{{- $kdb := $v.databases.keycloak }}
{{- $obj := $v.obj.provider }}
{{- $b := $v.platformBackups.database.keycloak }}

name: keycloak-db
storage:
  size: {{ $kdb.size }}
instances: {{ $kdb.replicas }}

{{- if eq $obj.type "minioLocal" "linode" }}
{{- if $b.enabled }}
backup:
  enabled: {{ $b.enabled }}
  schedule: {{ $b.schedule | quote }}
  retentionPolicy: {{ $b.retentionPolicy }}
  type:  {{ $obj.type }}
{{- if eq $obj.type "minioLocal" }}
  minioLocal:
    destinationPath: "s3://cnpg/keycloak"
{{- end }}
{{- if eq $obj.type "linode" }}
  linode:
    destinationPath: "s3://{{ $obj.linode.buckets.cnpg }}/keycloak"
    endpointURL: https://{{ $obj.linode.region }}.linodeobjects.com
{{- end }}
{{- end }}
{{- end }}

{{- if $kdb.imported }}
clusterSpec:
  bootstrap:
    initdb:
      database: keycloak
      owner: keycloak
      import:
        type: microservice
        databases:
          - keycloak
        source:
          externalCluster: keycloak-postgresql
  externalClusters:
  - name: keycloak-postgresql
    connectionParameters:
      host: keycloak-postgresql.keycloak.svc.cluster.local
      user: keycloak
      dbname: keycloak
      sslmode: disable
    password:
      name: keycloak-postgresql
      key: postgresql-password

{{- else }}
clusterSpec:  
  bootstrap:
    initdb:
      database: keycloak
      owner: keycloak
      localeCollate: 'en_US.UTF-8'
      localeCType: 'en_US.UTF-8'
{{- end }}

resources: {{- toYaml $kdb.resources | nindent 2 }}