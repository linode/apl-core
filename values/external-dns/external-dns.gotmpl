{{- $v := .Environment.Values }}
{{- $dns := $v | get "charts.external-dns" dict }}
{{- $dnsProvider := $v.cluster.dnsProvider | default $v.cluster.provider }}
{{- $google := $v | get "google" dict }}
{{- $aws := $v | get "aws" dict }}
{{- $azure := $v | get "azure" dict }}
sources:
- ingress
- istio-gateway
## - aws, azure, cloudflare, coredns, designate, digitalocoean, google, infoblox, rfc2136
provider: {{ $dnsProvider }}
{{- if eq $dnsProvider "google" }}
google:
  project: {{ $google.projectId }}
  serviceAccountKey: |
    {{- $google.cloudDnsKey | nindent 4 }}
{{- else if eq $dnsProvider "aws" }}
aws:
  {{- $dns.aws | toYaml | nindent 2 }}
{{- else if eq $dnsProvider "azure" }}
azure:
  {{- $dns.azure | toYaml | nindent 2 }}
  tenantId: {{ $azure.tenantId }}
  subscriptionId: {{ $azure.subscriptionId }}
{{- end }}  
domainFilters: {{ $dns | get "domainFilters" | toYaml | nindent 2 }}
zoneIdFilters: {{ $dns | get "zoneIdFilters" list | toYaml | nindent 2 }}
annotationFilter: "externaldns=true"
dryRun: false
crd:
  create: false
  apiversion: ""
  kind: ""

rbac:
  create: true
  apiVersion: v1beta1
  pspEnabled: true

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop: ["ALL"]
podSecurityContext:
  fsGroup: 1001
  runAsUser: 1001

resources: {}
#  limits:
#    cpu: 50m
#    memory: 50Mi
#  requests:
#    memory: 50Mi
#    cpu: 10m

metrics:
  enabled: true
