{{- $v := .Environment.Values }}
resources:
  - apiVersion: networking.istio.io/v1alpha3
    kind: EnvoyFilter
    metadata:
      name: authn-redirect-filter
      namespace: istio-system
    spec:
      workloadSelectors:
        labels:
          istio: ingressgateway-auth
      configPatches:
        - applyTo: HTTP_FILTER
          match:
            context: ANY
            listener:
              portNumber: 80
              filterChain:
                filter:
                  name: 'envoy.http_connection_manager'
                  subFilter:
                    name: 'envoy.router'
          patch:
            operation: INSERT_BEFORE
            value:
              name: envoy.lua
              typed_config:
                '@type': 'type.googleapis.com/envoy.config.filter.http.lua.v2.Lua'
                inlineCode: |
                  function envoy_on_response(response_handle)
                    local status = response_handle:headers():get(":status")
                    if status == "403" then
                      local oauth_host = "https://auth.{{ $v.cluster.domain }}/oauth2/start?rd=/oauth2/redirect/"
                      local redirect_url = "https://auth.{{ $v.cluster.domain }}/oauth2/sign_in"
                      response_handle:logWarn("Caught 403 Forbidden! Redirecting to: "..redirect_url)
                      response_handle:headers():replace(":status", 302)
                      response_handle:headers():replace("location", redirect_url)
                    end
                  end
{{- if $v.charts.istio | get "egressGateway.enabled" }}
  - apiVersion: networking.istio.io/v1beta1
    kind: Gateway
    metadata:
      name: istio-egressgateway
      namespace: istio-system
    spec:
      selector:
        istio: egressgateway
      servers:
      - port:
          protocol: HTTP
        hosts:
        - '*'
      - port:
          protocol: TLS
        hosts:
        - '*'
        tls:
          mode: PASSTHROUGH
  - apiVersion: networking.istio.io/v1beta1
    kind: DestinationRule
    metadata:
      name: egressgateway-for-all
      namespace: istio-system
    spec:
      host: istio-egressgateway.istio-system.svc.cluster.local
      subsets:
      - name: all
  - apiVersion: networking.istio.io/v1beta1
    kind: VirtualService
    metadata:
      name: direct-all-through-egress-gateway
      namespace: istio-system
    spec:
      hosts:
      - '*'
      gateways:
      - istio-egressgateway
      - mesh
      http:
      - match:
        - gateways:
          - mesh
        route:
        - destination:
            host: istio-egressgateway.istio-system.svc.cluster.local
          weight: 100
      - match:
        - gateways:
          - istio-egressgateway
      tls:
      - match:
        - gateways:
          - mesh
          sniHosts:
          - '*'
        route:
        - destination:
            host: istio-egressgateway.istio-system.svc.cluster.local
            subset: all
      - match:
        - gateways:
          - istio-egressgateway
          sniHosts:
          - '*'
        route:
        - destination:
            host: '*'
          weight: 100        
{{- end }}
