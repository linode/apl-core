{{- $v := .Environment.Values -}}
{{- $c := $v.cluster -}}
{{- $o := $v.charts | get "otomi-console" dict -}}
{{- $domain := printf "otomi.%s" $v.dns.domain -}}
{{- $services := list -}}
{{- range $s := $v.services -}}
{{- if hasKey $v.charts $s.name -}}
  {{- $enabled := ($v.charts | get $s.name) | get "enabled" true -}}
  {{- $s := set $s "enabled" $enabled -}}
  {{- $services = append $services $s -}}
{{- end }}
{{- end }}
{{- $teamServices := list -}}
{{- range $s := $v.teamConfig.services -}}
{{- if hasKey $v.charts $s.name -}}
  {{- $enabled := ($v.charts | get $s.name) | get "enabled" true -}}
  {{- $s := set $s "enabled" $enabled -}}
  {{- $teamServices = append $teamServices $s -}}
{{- end }}
{{- end }}
# fromJson does not yet exist in helmfile: https://github.com/roboll/helmfile/issues/1557
# so we get package.json version in two regexFind steps:
{{- $version := (readFile "../../package.json") | regexFind "\"version\": \"([0-9.]+)\"" | regexFind "[0-9]+.[0-9]+.[0-9]+" -}}
replicaCount: 1

resources:
  {{- if (hasKey $o "resources") }}
    {{- $o.resources | toYaml | nindent 2 }}
  {{- else }}
  limits:
    cpu: 400m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 256Mi
  {{- end }}

image:
  registry: docker.io
  repository: otomi/console
  tag: {{ $o | get "image.tag" "v0.4.36" }}
  pullPolicy: {{ $o | get "image.pullPolicy" "IfNotPresent" }}

env:
  API_BASE_URL: /api
  CONTEXT_PATH: ''
  CONSOLE_MODE: {{ and (ne ($v.otomi | get "pullSecret" "") "") (ne ($v.otomi | get "mode" "ee") "ce") | ternary "ee" "ce" }}
  CORE: '{"services":{{ $services | toJson }},"teamConfig":{"services":{{ $teamServices | toJson }}}}'
  CORE_VERSION: '{{ $version }}'
  TEAMS: '{{ keys $v.teamConfig.teams | sortAlpha | toJson }}'


podAnnotations:
  policy.otomi.io/ignore: "banned-image-tags,psp-allowed-users"
  policy.otomi.io/ignore.wget: "container-limits"

