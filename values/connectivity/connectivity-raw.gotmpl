{{ $v:=.Values}}

resources:
{{- range $item:=$v.teamConnectivity }}
{{- $server := $item.server }}
{{- $serverSubdomain:= "connectivity" }}
{{- $serverHostname:= printf "conn-server-%s" $server.labels.app }}
{{- $serverUrl:= printf "%s.%s.%s.svc.cluster.local" $serverHostname $serverSubdomain $server.namespace }}

# Server
- apiVersion: v1
  kind: Pod
  metadata:
    labels: {{- $item.server.labels | toYaml | nindent 6 }}
      module: connectivity
    name: {{ $serverHostname }}
    namespace: {{ $server.namespace}}
  spec:
    hostname: {{ $serverHostname }}
    subdomain: {{ $serverSubdomain }}
    containers:
      - name: server
        args:
          - -listen=:8080
          - -text="Connected"
        env:
          - name: PORT
            value: '8080'
        ports:
          - containerPort: 8080
        resources:
          limits:
            cpu: 50m
            memory: 64M
        image: hashicorp/http-echo
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /
            port: 8080
        livenessProbe:
          httpGet:
            path: /
            port: 8080

{{- range $client:=$item.clients }}
{{- $serverHostname:= printf "conn-client-%s-to-%s" $client.labels.app $server.labels.app }}
- apiVersion: v1
  kind: Pod
  metadata:
    labels: {{- $client.labels | toYaml | nindent 6 }}
      module: connectivity
    name: {{ $serverHostname }}
    namespace: {{ $client.namespace}}
  spec:
    hostNetwork: false
    subdomain: connectivity
    restratPolicy: Never
    containers:
      - name: server
        args:
          - -listen=:8080
          - -text="Connected"
        env:
          - name: PORT
            value: '8080'
        ports:
          - containerPort: 8080
        resources:
          limits:
            cpu: 50m
            memory: 64M
        image: hashicorp/http-echo
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /
            port: 8080
        livenessProbe:
          httpGet:
            path: /
            port: 8080
      - name: client
        args:
          - -sS
          - --fail
          - --connect-timeout
          - '5'
          - -o
          - /dev/null
          - --retry
          - '10'
          - --retry-delay
          - '5'
          - {{ $serverUrl }}
        resources:
          limits:
            cpu: 50m
            memory: 64M
        image: curlimages/curl:7.80.0
        imagePullPolicy: IfNotPresent
{{- end }} {{/* range clients */}}
{{- end }} {{/* range */}}

