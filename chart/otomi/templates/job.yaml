{{- $kms := .Values.kms | default dict }}
{{- $version := .Values.otomi.version | default .Chart.AppVersion }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "otomi.fullname" . }}
  labels: {{- include "otomi.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: installer
      {{- with .Values.podAnnotations }}
      annotations: {{- toYaml . | nindent 8 }}
      {{- end }}
      labels: {{- include "otomi.selectorLabels" . | nindent 8 }}
        otomi-core: "true"
    spec:
      serviceAccountName: {{ include "otomi.fullname" . }}
      securityContext:
        runAsUser: 999
        runAsGroup: 999
      containers:
        - name: otomi-install
          image: otomi/core:{{ $version }}
          imagePullPolicy: Always # {{ ternary "IfNotPresent" "Always" (regexMatch "^v\\d" $version) }} 
          resources:
            limits:
              memory: 2Gi
              cpu: '2'
            requests:
              memory: 1Gi
              cpu: '1'
          command: [bash, -c]
          args:
            - |
              kubectl create ns otomi &> /dev/null
              binzx/otomi bootstrap && binzx/otomi apply
          env:
            - name: VERBOSITY
              value: '1'
            - name: ENV_DIR
              value: /home/app/stack/env
            - name: VALUES_INPUT
              value: /secret/values.yaml
          {{- if hasKey $kms "sops" }}
          envFrom:
            - secretRef:
                name: {{ include "otomi.fullname" . }}-sops-secrets
          {{- end }}
          volumeMounts:
            - name: otomi-values
              mountPath: /home/app/stack/env
            - name: values-secret
              mountPath: /secret
      volumes:
        # Mount data provided by user
        - name: values-secret
          secret:
            secretName: '{{ .Release.Name }}-values'
        # Otomi bootstrap populates data /secret/values.yaml to /home/app/stack/env
        - name: otomi-values
          emptyDir: {}
      restartPolicy: Never
  backoffLimit: 2
