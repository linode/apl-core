name: Build and publish Docker
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*'
env:
  COMMIT_MSG: ${{ github.event.head_commit.message }}
  CACHE_REGISTRY: ghcr.io
  CACHE_REPO: redkubes/otomi-core
  REPO: otomi/core
  GIT_USER: redkubesbot
  GIT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_OTOMI_TOKEN }}

jobs:
  build-test-push-release:
    if: "((contains(github.event.head_commit.message, 'chore(release)') && github.ref == 'refs/heads/master') || !contains(github.event.head_commit.message, 'chore(release)')) && !contains(github.event.head_commit.message, 'ci skip') && !startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: |
          tag=$(echo $(basename $GITHUB_REF))
          echo "Creating tag: $tag"
          echo ::set-env name=TAG::$tag
      - name: Checkout
        uses: actions/checkout@v2
      - name: CI tests, image build and push tag for master or branch
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: redkubesbot
          password: '${{ secrets.NPM_TOKEN }}'
          registry: ${{ env.CACHE_REGISTRY }}
          image_name: ${{ env.CACHE_REPO }}
          image_tag: ${{ env.TAG }}
      - name: Retag from cache and push
        run: |
          docker login -u otomi -p $DOCKER_PASSWORD
          docker tag $CACHE_REGISTRY/$CACHE_REPO:$TAG $REPO:$TAG
          docker push $REPO:$TAG
      - if: "contains(github.event.head_commit.message, 'chore(release)')"
        name: Tag and release
        run: |
          docker login -u otomi -p '${{ secrets.DOCKERHUB_OTOMI_TOKEN }}'
          docker tag $REPO:$TAG $REPO:latest
          docker push $REPO:latest
          RELEASE_TAG=v${COMMIT_MSG#* }
          echo "Releasing $REPO:$RELEASE_TAG"
          docker tag $REPO:$TAG $REPO:$RELEASE_TAG
          docker push $REPO:$RELEASE_TAG
          git config --global user.email "$GIT_USER@users.noreply.github.com"
          git config --global user.name $GIT_USER
          echo "machine github.com login $GIT_USER password $GIT_PASSWORD" > ~/.netrc
          git tag -am "$COMMIT_MSG" $RELEASE_TAG && git push --follow-tags origin master
