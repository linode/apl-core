name: Deploy APL
on:
  workflow_call:
    inputs:
      linode_types:
        description: 'Linode instance types'
        type: string
        default: g6-dedicated-8
      kubernetes_versions:
        description: 'Kubernetes version'
        type: string
        default: "['1.31']"
      install_profile:
        description: 'APL installation profile'
        type: string
        default: minimal-with-team
      domain_zone:
        description: 'Select Domain Zone'
        type: string
        default: DNS-Integration
      kms:
        description: 'Should APL encrypt secrets in values repo (DNS or KMS is turned on)?'
        type: string
        default: age
      certificate:
        description: 'Select certificate issuer'
        type: string
        default: letsencrypt_production
      is_pre_installed:
        description: Fake if Otomi is pre-installed by Installer
        type: string
        default: 'false'
  workflow_dispatch:
    inputs:
      deploy_to_dev:
        description: 'Deploy to dev'
        type: boolean
        default: false

env:
  CACHE_REGISTRY: ghcr.io
  CACHE_REPO: linode/apl-core
  REPO: linode/apl-core
  GIT_USER: svcAPLBot
  CHECK_CONTEXT: continuous-integration/integration-test
  COMMIT_ID: '${{ github.event.pull_request.head.sha || github.sha }}'
  BOT_EMAIL: ${{ vars.BOT_EMAIL }}
  BOT_USERNAME: ${{ vars.BOT_USERNAME }}
  DEV_DOMAINS: ${{ secrets.DEV_DOMAINS }}
  DEV_KUBECONFIG: ${{ secrets.DEV_KUBECONFIG }}
  DEV_GITEA_CREDS: ${{ secrets.DEV_GITEA_CREDS }}

jobs:
  deploy-to-dev:
    runs-on: ubuntu-22.04
    steps:
      - name: Deploy to dev

        if: ${{ inputs.deploy_to_dev }}
        run: |

          KUBECONFIG=${{ env.DEV_KUBECONFIG }}

          echo "Testing the dev cluster kubeapi connection"
          if ! kubectl version; then
            echo "Failed to connect to the dev cluster"
            exit 1
          fi
          echo "Connected to the dev cluster successfully"

          echo "Restarting apl-console and apl-api"
          kubectl -n otomi rollout restart deployment/otomi-api
          kubectl -n otomi rollout restart deployment/otomi-console

          echo "Configuring git credentials for the values repo"
          USERNAME= jq -r '.username' ${{ env.DEV_GITEA_CREDS }}
          PASSWORD= jq -r '.password' ${{ env.DEV_GITEA_CREDS }}
          URL= jq -r '.git_url' ${{ env.DEV_GITEA_CREDS }}

          echo "Cloning the values repo using basic auth"
          git clone --depth 2 http://$USERNAME:$PASSWORD@$URL 2>/dev/null
          if [ $? -ne 0 ]; then
            echo "Failed to clone the repository."
            exit 1
          fi
          cd values
          echo "Pushing an empty commit to trigger the pipeline"
          echo "Triggering pipeline for ${{ github.ref }}"
          git commit --allow-empty -m "Triggering pipeline for ${{ github.ref }}"
