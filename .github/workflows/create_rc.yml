name: Create Release Candidate.
run-name: Create Release Candidate from commit ${{ github.event.inputs.rc_commit_sha }}

on:
  workflow_dispatch:
    inputs:
      rc_commit_sha:
        description: 'Commit from which to create the release candidate. If not provided, the latest commit on main will be used'
        required: false
        type: string
      dry_run:
        description: 'Dry Run: If true, the pipeline will not publish the helm chart.'
        required: true
        default: 'true'
        type: choice
        options:
          - true
          - false

jobs:
  create_patch_release:
    runs-on: ubuntu-latest
    container:
      image: linode/apl-tools:v2.8.7
      options: --user 0 # See https://docs.github.com/en/actions/sharing-automations/creating-actions/dockerfile-support-for-github-actions#user
    outputs:
      rc_branch: ${{ steps.create_release.outputs.rc_branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine commit from where to create the RC
        id: determine_commit
        run: |
          if [ "${{ github.event.inputs.rc_commit_sha }}" == "" ]; then
            echo "No commit sha provided, using the latest commit on main"
            echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_ENV
          else
            echo "Using provided commit sha: ${{ github.event.inputs.rc_commit_sha }}"
            echo "commit_sha=${{ github.event.inputs.rc_commit_sha }}" >> $GITHUB_ENV
          fi

      #TODO: Use the same user id on the container as in the runner to avoid the "dubious ownership" error
      - name: Mark repository as safe for Git
        run: git config --global --add safe.directory /__w/apl-core/apl-core

      - name: Create release candidate tag & branch
        id: create_release
        env:
          DRY_RUN: ${{ github.event.inputs.dry_run }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_SHA: ${{ env.commit_sha }}
        run: |
          ci/scripts/create_rc.sh

      - name: Prepare chart
        env:
          BOT_EMAIL: ${{ secrets.BOT_EMAIL }}
          BOT_USERNAME: ${{ secrets.BOT_USERNAME }}
        id: prepare_chart
        run: |
          ci/scripts/prepare_chart_for_release.sh

      - name: Dry Run Outputs
        if: ${{ github.event.inputs.dry_run == 'true'}}
        run: |
          echo -e "This Pipeline was executed in dry run mode so it will not publish the helm chart.\nBelow are some useful data to check:"
          echo "Release candidate branch: ${{ github.ref }}"
          echo "Contents of: chart/apl/Chart.yaml"
          cat chart/apl/Chart.yaml
          echo "Contents of: package.json"
          cat package.json

      - name: Create and publish otomi chart release
        if: ${{ github.event.inputs.dry_run == 'false' }}
        id: chart_release
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: chart
          skip_existing: true
          mark_as_latest: false
        env:
          CR_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
