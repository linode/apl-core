# syntax=docker/dockerfile:1.6
# The above is needed for the "--checksum" aurgument to work in the ADD instruction

# Using ubuntu:noble base image
FROM ubuntu:24.04

# Version definitions and checksums
# https://github.com/mikefarah/yq/releases
ARG YQ_VERSION=4.48.1
ARG YQ_CHECKSUM=sha256:99df6047f5b577a9d25f969f7c3823ada3488de2e2115b30a0abb10d9324fd9f

# https://github.com/kubernetes/kubernetes/releases
ARG KUBECTL_VERSION=1.34.1
ARG KUBECTL_CHECKSUM=sha256:7721f265e18709862655affba5343e85e1980639395d5754473dafaadcaa69e3

# https://github.com/derailed/k9s/releases
ARG K9S_VERSION=0.50.16
ARG K9S_CHECKSUM=sha256:bda09dc030a08987fe2b3bed678b15b52f23d6705e872d561932d4ca07db7818

# https://github.com/helm/helm/releases
ARG HELM_VERSION=3.19.0
ARG HELM_CHECKSUM=sha256:a7f81ce08007091b86d8bd696eb4d86b8d0f2e1b9f6c714be62f82f96a594496

# https://github.com/vmware-tanzu/velero/releases
ARG VELERO_VERSION=1.14.1
ARG VELERO_CHECKSUM=sha256:1e123f9deb9479f1cd41ba53b799d73b962cd6ff16acebfca233725638c73db2

# https://github.com/tektoncd/cli/releases
ARG TKN_VERSION=0.42.0
ARG TKN_CHECKSUM=sha256:e21a96c454502457f1970d720da15153b8b0623b2de2c13598ff96fc98e69c44

# https://github.com/cloudnative-pg/cloudnative-pg/releases
ARG CNPG_VERSION=1.26.2
ARG CNPG_CHECKSUM=sha256:765007cea37dab728d09e681bcd00221bbe71252d30212e966f0fc62763f04ec


# Installing curl, vim, wget, tmux ttyd and bash-completion
RUN apt update && apt upgrade -y && apt install -y ttyd jq curl vim wget less tmux bash-completion && rm -rf /var/lib/apt/lists/*

# Installing yq
ADD --chmod=755 --checksum=${YQ_CHECKSUM} https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_amd64 /usr/local/bin/yq

# Installing kubectl
ADD --checksum=${KUBECTL_CHECKSUM} https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl /tmp/kubectl
RUN install -o root -g root -m 0755 /tmp/kubectl /usr/local/bin/kubectl && rm /tmp/kubectl

# Installing k9s
ADD --checksum=${K9S_CHECKSUM} https://github.com/derailed/k9s/releases/download/v${K9S_VERSION}/k9s_Linux_amd64.tar.gz /tmp/
RUN tar zxf /tmp/k9s_Linux_amd64.tar.gz -C /usr/local/bin/ k9s && rm /tmp/k9s_Linux_amd64.tar.gz

# Installing helm
ADD --checksum=${HELM_CHECKSUM} https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz /tmp/
RUN tar zxvf /tmp/helm-v${HELM_VERSION}-linux-amd64.tar.gz linux-amd64/helm -O > /usr/local/bin/helm && chmod +x /usr/local/bin/helm && rm /tmp/helm-v${HELM_VERSION}-linux-amd64.tar.gz

# Installing velero cli
ADD --checksum=${VELERO_CHECKSUM} https://github.com/vmware-tanzu/velero/releases/download/v${VELERO_VERSION}/velero-v${VELERO_VERSION}-linux-amd64.tar.gz /tmp/
RUN tar zxvf /tmp/velero-v${VELERO_VERSION}-linux-amd64.tar.gz velero-v${VELERO_VERSION}-linux-amd64/velero -O > /usr/local/bin/velero && chmod +x /usr/local/bin/velero && rm /tmp/velero-v${VELERO_VERSION}-linux-amd64.tar.gz

# Installing tekton cli
ADD --checksum=${TKN_CHECKSUM} https://github.com/tektoncd/cli/releases/download/v${TKN_VERSION}/tkn_${TKN_VERSION}_Linux_x86_64.tar.gz /tmp/
RUN tar zxvf /tmp/tkn_${TKN_VERSION}_Linux_x86_64.tar.gz -C /usr/local/bin/ tkn && rm /tmp/tkn_${TKN_VERSION}_Linux_x86_64.tar.gz

# Installing kubectl-cnpg
ADD --checksum=${CNPG_CHECKSUM} https://github.com/cloudnative-pg/cloudnative-pg/releases/download/v${CNPG_VERSION}/kubectl-cnpg_${CNPG_VERSION}_linux_x86_64.deb /tmp/
RUN dpkg -i /tmp/kubectl-cnpg_${CNPG_VERSION}_linux_x86_64.deb && rm /tmp/kubectl-cnpg_${CNPG_VERSION}_linux_x86_64.deb

# Creating user named user
RUN groupadd --gid 1001 user && useradd --uid 1001 --gid 1001 user --create-home --home-dir /home/user

# Set up kubeconfig generation
RUN mkdir /etc/kconfig && \
  echo 'kubectl config set-cluster apl --certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt --server=https://kubernetes.default.svc.cluster.local' > /etc/kconfig/kconfig.sh && \
  echo 'kubectl config set-credentials default-user --token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)' >> /etc/kconfig/kconfig.sh && \
  echo 'kubectl config set-context default-context --cluster=apl --namespace=${NAMESPACE} --user=default-user' >> /etc/kconfig/kconfig.sh && \
  echo 'kubectl config use-context default-context' >> /etc/kconfig/kconfig.sh

# Switching to user user
USER user

# Setting up kubectl autocompletion
RUN touch ~/.bashrc && \
  echo 'source <(kubectl completion bash)' >> ~/.bashrc && \
  echo 'alias k=kubectl' >> ~/.bashrc &&  \
  echo 'complete -o default -F __start_kubectl k' >> ~/.bashrc && \
  echo 'source /etc/kconfig/kconfig.sh > /dev/null' >> ~/.bashrc

# Setting the working directory
WORKDIR /home/user

# Command to start a tmux session and expose it via ttyd.
CMD ["ttyd", "-W", "-p", "8080", "tmux", "new", "-A", "/bin/bash"]
