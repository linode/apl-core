apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "drone.fullname" . }}-agent
  namespace: {{ template "drone.namespace" . }}
  labels:
    app: {{ template "drone.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: agent
spec:
  selector:
    matchLabels:
      app: {{ template "drone.name" . }}
      release: "{{ .Release.Name }}"
      component: agent
  replicas: {{ .Values.agent.replicas }}
  template:
    metadata:
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- with .Values.agent.annotations }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app: {{ template "drone.name" . }}
        release: "{{ .Release.Name }}"
        component: agent
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.agent.securityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.agent.schedulerName }}
      schedulerName: "{{ . }}"
      {{- end }}
      {{- with .Values.agent.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.agent.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.agent.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "drone.serviceAccountName" . }}
      containers:
        - name: agent
          image: "{{ .Values.images.agent.repository }}:{{ .Values.images.agent.tag }}"
          imagePullPolicy: {{ .Values.images.agent.pullPolicy }}
          ports:
          - name: http
            containerPort: 3000
            protocol: TCP
          env:
            - name: DRONE_RPC_PROTO
              value: {{ .Values.server.rpcProtocol }}
            - name: DRONE_RPC_HOST
              value: {{ template "drone.fullname" . }}.{{ template "drone.namespace" . }}:{{ .Values.service.httpPort }}
            - name: DRONE_RPC_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "drone.fullname" . }}
                  key: secret
            - name: DRONE_RUNNER_ENV_FILE
              value: /etc/drone/env      
            - name: DRONE_NAMESPACE_DEFAULT
              value: {{ .Values.agent.namespace }}
            {{- range $key, $value := .Values.agent.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          resources: {{- toYaml .Values.agent.resources | nindent 12 }}
{{- if not .Values.dind.enabled }}
          securityContext:
            privileged: true  
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: docker-socket
            - name: envfile
              mountPath: /etc/drone
            {{- if .Values.customCa }}
            - name: custom-ca
              mountPath: /etc/ssl/certs/ca-certificates.crt
              subPath: ca-certificates.crt
            {{- end }}
            {{- with .Values.agent.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
{{- else }}
          {{- with .Values.agent.volumeMounts }}
          volumeMounts: {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: dind
          image: "{{ .Values.images.dind.repository }}:{{ .Values.images.dind.tag }}"
          imagePullPolicy: {{ .Values.images.dind.pullPolicy }}
          {{- with .Values.dind.command }}
          command: {{ . }}
          {{- end }}
          {{- with .Values.dind.args }}
          args: {{ . }}
          {{- end }}
          env:
            - name: DOCKER_DRIVER
              value: {{ .Values.dind.driver }}
            {{ range $key, $value := .Values.dind.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{ end }}
          securityContext:
            privileged: true
          resources: {{- toYaml .Values.dind.resources | nindent 12 }}
          volumeMounts:
            - name: docker-graph-storage
              mountPath: /var/lib/docker
            {{- if .Values.customCa }}
            - name: custom-ca
              mountPath: /etc/ssl/certs/ca-certificates.crt
              subPath: ca-certificates.crt
            {{- end }}
            {{- with .Values.dind.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: docker-graph-storage
          emptyDir: {}
{{- end }}
        {{- if .Values.customCa }}
        - name: custom-ca
          secret:
            secretName: {{ template "drone.fullname" . }}-ca
        {{- end }}
        - name: envfile
          secret:
            secretName: {{ template "drone.fullname" . }}-envfile
        {{- with .Values.agent.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
