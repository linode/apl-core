{{- $v := .Values }}
{{- $secrets := (include "itemsByName" ($v.secrets | default list) | fromYaml) }}
{{- if eq $v.type "CronJob" }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: job-{{ $v.name }}
  labels: {{- include "jobs.labels" $ | nindent 4 }}
  annotations:
    checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum | trunc 63 }}
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") $ | sha256sum | trunc 63 }}
spec:
  schedule: "{{ $v.schedule }}"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 2
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 300
  suspend: false
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ $v.serviceAccountName | default "default" }}
          {{- if $v.init }}
          initContainers:
          - image: "{{ $v.init.image.repository }}:{{ $v.init.image.tag | default "latest" }}"
            imagePullPolicy: "{{ $v.init.image.pullPolicy | default "IfNotPresent" }}"
            name: "job-{{ $v.name }}-init"
            command: ["{{ $v.init.shell | default "sh" }}", "-c"]
            args: 
              - | 
                {{- toString $v.init.script | nindent 16 }}
            {{- if $v.init.env }}
            envFrom:
            - configMapRef:
                name: job-{{ $v.name }}
            {{- end }}
            {{- if $v.secrets }}
            env:
              {{- range $secret := ($v.secrets | default list) }} 
                {{- $entries := ($secret.entries | default (index $secrets $secret.name)) }}
                {{- range $entry := $entries }}
              - name: {{ $entry | upper }}
                valueFrom:
                  secretKeyRef:
                    name: {{ $secret.name }}
                    key: {{ $entry }}
                {{- end }}
              {{- end }}
            {{- end }}
          {{- end }}
          containers:
          - image: "{{ $v.image.repository }}:{{ $v.image.tag }}"
            imagePullPolicy: "{{ $v.image.pullPolicy }}"
            name: {{ $v.name }}
            command: ["{{ $v.shell | default "sh" }}", "-c"]
            resources: {{- toYaml $v.resources | nindent 14 }}
            args:
              - |
                {{- toString $v.script | nindent 16 }}
            {{- if $v.secrets }}
            env:
              {{- range $secret := ($v.secrets | default list) }} 
                {{- $entries := ($secret.entries | default (index $secrets $secret.name)) }}
                {{- range $entry := $entries }}
              - name: {{ $entry | upper }}
                valueFrom:
                  secretKeyRef:
                    name: {{ $secret.name }}
                    key: {{ $entry }}
                {{- end }}
              {{- end }}
            {{- end }}
            {{- if or $v.secret $v.env }}
            envFrom:
            {{- if $v.secret }}
            - secretRef:
                name: job-{{ $v.name }}
            {{- end }}
            {{- if or $v.env }}
            - configMapRef:
                name: job-{{ $v.name }}
            {{- end }}
            {{- end }}
            {{- if or (or (eq $v.name "keycloak") (eq $v.name "harbor")) (hasKey $v "files") }}
            volumeMounts:
              {{- if or (eq $v.name "keycloak") (eq $v.name "harbor") }}
              - name: fakeroot
                mountPath: /fakeroot.pem
                subPath: fakeroot.pem
              {{- end }}
              {{- if hasKey $v "files" }}
              - name: files
                mountPath: /
              {{- end }}
            {{- end }}
          restartPolicy: Never
          {{- if or (or (eq $v.name "keycloak") (eq $v.name "harbor")) (hasKey $v "files") }}
          volumes:
            {{- if or (eq $v.name "keycloak") (eq $v.name "harbor") }}
            - name: fakeroot
              configMap:
                name: fakeroot
            {{- end }}
            {{- if hasKey $v "files" }}
            - name: files
              configMap:
                name: job-{{ $v.name }}
                items:
                {{- range $name, $file := $v.files }}
                - key: {{ $name }}
                  path: {{ $name }}
                {{- end }}
            {{- end }}
          {{- end }}
  backoffLimit: 3
  ttlSecondsAfterFinished: {{ $v.ttlSecondsAfterFinished | default 86400 }}
---
{{- end }}