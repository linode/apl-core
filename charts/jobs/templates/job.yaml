{{- $v := .Values }}
{{- $ := . }}
{{- range $name, $spec := $v.jobs }}
{{- if and (default true $spec.enabled) (eq $spec.type "job") }}
apiVersion: batch/v1
kind: Job
metadata:
  {{- if eq $spec.runPolicy "OnSpecChange" }}
  name: {{ $spec.name }}
  {{- else if eq $spec.runPolicy "Always" }}
  name: {{ join "-" (list $spec.name uuidv4) | trunc 63 }}
  {{- end }}
  labels: {{- include "jobs.labels" $ | nindent 4 }}
spec:
  template:
    metadata:
      labels: {{- include "jobs.labels" $ | nindent 8 }}
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum | trunc 63 }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") $ | sha256sum | trunc 63 }}
    spec:
      serviceAccountName: {{ $spec.serviceAccountName | default "default" }}
      {{- if $spec.init }}
      initContainers:
      - image: "{{ $spec.init.image.repository }}:{{ $spec.init.image.tag | default "latest" }}"
        imagePullPolicy: "{{ $spec.init.image.pullPolicy | default "IfNotPresent"}}"
        name: "{{ $name }}-init"
        command: ["{{ $spec.init.shell | default "sh" }}", "-c"]
        args:
          - |
            {{- toString $spec.init.script | nindent 12 }}
      {{- end }}
      containers:
      - image: "{{ $spec.image.repository }}:{{ $spec.image.tag }}"
        imagePullPolicy: "{{ $spec.image.pullPolicy }}"
        name: {{ $spec.name }}
        command: ["{{ $spec.shell | default "sh" }}", "-c"]
        args:
          - |
            {{- toString $spec.script | nindent 12 }}
        resources: {{- if $spec.resources}}{{ toYaml $spec.resources | nindent 10 }}{{ else }}{{ toYaml $v.resources | nindent 10 }}{{ end }}
        {{- if or $spec.secret $spec.env }}
        envFrom:
        {{- if $spec.secret }}
        - secretRef:
            name: {{ $spec.name }}
        {{- end }}
        {{- if $spec.env }}
        - configMapRef:
            name: {{ $spec.name }}
        {{- end }}
        {{- end }}
        {{- if or (eq $spec.name "keycloak") (eq $spec.name "harbor") }}
        volumeMounts:
          - name: fakeroot
            mountPath: /fakeroot.pem
            subPath: fakeroot.pem
        {{- end }}
        {{- if $spec.mounts }}
          {{- $spec.mounts | toYaml | nindent 10 }}
        {{- end }}
      restartPolicy: Never
      {{- if $spec.volumes }}
      volumes:
        {{- if $spec.fakeroot }}
        - name: fakeroot
          configMap:
            name: fakeroot
        {{- end }}
        {{- $spec.volumes | toYaml | nindent 8 }}
      {{- end }}
  backoffLimit: 3
  ttlSecondsAfterFinished: {{ $spec.ttlSecondsAfterFinished | default 86400 }}
---
{{- end }}
{{- end }}
