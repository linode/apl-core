{{- $v := .Values }}
{{- with $v.otomi.nodeSelector }}
{{- /*
We will add affinity to land pods on nodes when a node selector was provided.

We don't want DaemonSets to be given affinity (in Otomi all DSs are node exporters), so we explicitly 
whitelist everything else creating pods since GK doesn't have an exclude approach for kinds.
(This means that the below list has to be kept up to date with whatever resource creating pods.)
Because we now do explicit whitelisting, we have to split up resources into regular CronJobs and everything else, because of the 
location of affinity in the yaml structure.

NOTE: we can't seem to get control over regular pods through this mechanism, but even k8s discourages
creating those (as those are unmanaged), so we exclude them.

TODO: visit here when ading CRDs.
*/}}
apiVersion: mutations.gatekeeper.sh/v1alpha1
kind: Assign
metadata:
  name: set-platform-node-affinity-cronjobs
spec:
  applyTo:
    - groups: [batch]
      kinds: [CronJob]
      versions: [v1]
  match:
    scope: Namespaced
    kinds:
      - apiGroups: [batch]
        kinds: [CronJob]
    excludedNamespaces:
      {{- range $teamId := ($v.teamIds | sortAlpha) }}
      - team-{{ $teamId }}
      {{- end }}
      - argocd
  location: spec.jobTemplate.spec.affinity.nodeAffinity
  parameters:
    assign:
      value:
        requiredDuringSchedulingIgnoredDuringExecution:
          {{- include "gatekeeper-artifacts.nodeselector-terms" (dict "labels" .) | nindent 10 }}
---
apiVersion: mutations.gatekeeper.sh/v1alpha1
kind: Assign
metadata:
  name: set-platform-node-affinity-others
spec:
  applyTo:
    - groups: [apps]
      kinds: [Deployment, ReplicaSet, StatefulSet]
      versions: [v1]
    - groups: [batch]
      kinds: [Job]
      versions: [v1]
    - groups: [serving.knative.dev]
      kinds: [Service]
      versions: [v1]
  match:
    scope: Namespaced
    kinds:
      # We don't want DaemonSets to be given affinity (in Otomi all DSs are node exporters), so we explicitly 
      # whitelist everything creating pods since GK doesn't have an exclude approach for kinds.
      # This means that this list has to be kept up to date with whatever resource creating pods.
      # TODO: visit here when ading CRDs.
      - apiGroups: [apps]
        kinds: [Deployment, ReplicaSet, StatefulSet]
      - apiGroups: [batch]
        kinds: [Job]
      - apiGroups: [serving.knative.dev]
        kinds: [Service]
    excludedNamespaces:
      {{- range $teamId := ($v.teamIds | sortAlpha) }}
      - team-{{ $teamId }}
      {{- end }}
      - argocd
  location: spec.template.spec.affinity.nodeAffinity
  parameters:
    assign:
      value:
        requiredDuringSchedulingIgnoredDuringExecution:
          {{- include "gatekeeper-artifacts.nodeselector-terms" (dict "labels" .) | nindent 10 }}
---
apiVersion: mutations.gatekeeper.sh/v1alpha1
kind: Assign
metadata:
  name: set-team-node-affinity
spec:
  applyTo:
  - groups: [""]
    kinds: [Pod]
    versions: [v1]
  match:
    scope: Namespaced
    kinds:
    - apiGroups: ["*"]
      kinds: [Pod]
    {{- if gt (len $v.teamIds) 0 }}
    namespaces:
      {{- range $teamId := ($v.teamIds | sortAlpha) }}
      - team-{{ $teamId }}
      {{- end }}
    {{- end }}
  location: spec.affinity.nodeAffinity
  parameters:
    assign:
      value:
        requiredDuringSchedulingIgnoredDuringExecution:
          {{- include "gatekeeper-artifacts.nodeselector-terms" (dict "labels" . "operator" "NotIn") | nindent 10 }}
{{- end }}