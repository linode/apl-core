apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gitea.fullname" . }}
  labels:
    {{- include "gitea.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "gitea.selectorLabels" . | nindent 6 }}
      {{- if .Values.statefulset.labels }}
      {{- toYaml .Values.statefulset.labels | nindent 6 }}
      {{- end }}
  serviceName: {{ include "gitea.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/gitea/config.yaml") . | sha256sum }}
        {{- range $idx, $value := .Values.gitea.ldap }}
        checksum/ldap_{{ $idx }}: {{ include "gitea.ldap_settings" (list $idx $value) | sha256sum }}
        {{- end }}
        {{- range $idx, $value := .Values.gitea.oauth }}
        checksum/oauth_{{ $idx }}: {{ include "gitea.oauth_settings" (list $idx $value) | sha256sum }}
        {{- end }}
        {{- with .Values.gitea.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "gitea.labels" . | nindent 8 }}
        {{- if .Values.statefulset.labels }}
        {{- toYaml .Values.statefulset.labels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName }}"
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-directories
          image: "{{ include "gitea.image" . }}"
          command: ["/usr/sbin/init_directory_structure.sh"]
          env:
            - name: GITEA_APP_INI
              value: /data/gitea/conf/app.ini
            - name: GITEA_CUSTOM
              value: /data/gitea
            - name: GITEA_WORK_DIR
              value: /data
            - name: GITEA_TEMP
              value: /tmp/gitea
            {{- if .Values.statefulset.env }}
            {{- toYaml .Values.statefulset.env | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: init
              mountPath: /usr/sbin
            - name: temp
              mountPath: /tmp
            - name: data
              mountPath: /data
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        - name: init-app-ini
          image: "{{ include "gitea.image" . }}"
          command: ["/usr/sbin/config_environment.sh"]
          env:
            - name: GITEA_APP_INI
              value: /data/gitea/conf/app.ini
            - name: GITEA_CUSTOM
              value: /data/gitea
            - name: GITEA_WORK_DIR
              value: /data
            - name: GITEA_TEMP
              value: /tmp/gitea
            {{- if .Values.statefulset.env }}
            {{- toYaml .Values.statefulset.env | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /usr/sbin
            - name: temp
              mountPath: /tmp
            - name: data
              mountPath: /data
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            - name: inline-config-sources
              mountPath: /env-to-ini-mounts/inlines/
            {{- range $idx, $value := .Values.gitea.additionalConfigSources }}
            - name: additional-config-sources-{{ $idx }}
              mountPath: "/env-to-ini-mounts/additionals/{{ $idx }}/"
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
        - name: configure-gitea
          image: "{{ include "gitea.image" . }}"
          command: ["/usr/sbin/configure_gitea.sh"]
          securityContext:
            {{- /* By default this container runs as user 1000 unless otherwise stated */ -}}
            {{- $csc := deepCopy .Values.containerSecurityContext -}}
            {{- if not (hasKey $csc "runAsUser") -}}
            {{- $_ := set $csc "runAsUser" 1000 -}}
            {{- end -}}
            {{- toYaml $csc | nindent 12 }}
          env:
            - name: GITEA_APP_INI
              value: /data/gitea/conf/app.ini
            - name: GITEA_CUSTOM
              value: /data/gitea
            - name: GITEA_WORK_DIR
              value: /data
            - name: GITEA_TEMP
              value: /tmp/gitea
            {{- if .Values.gitea.ldap }}
            {{- range $idx, $value := .Values.gitea.ldap }}
            {{- if $value.existingSecret }}
            - name: GITEA_LDAP_BIND_DN_{{ $idx }}
              valueFrom:
                secretKeyRef:
                  key:  bindDn
                  name: {{ $value.existingSecret }}
            - name: GITEA_LDAP_PASSWORD_{{ $idx }}
              valueFrom:
                secretKeyRef:
                  key:  bindPassword
                  name: {{ $value.existingSecret }}
            {{- else }}
            - name: GITEA_LDAP_BIND_DN_{{ $idx }}
              value: {{ $value.bindDn | quote }}
            - name: GITEA_LDAP_PASSWORD_{{ $idx }}
              value: {{ $value.bindPassword | quote }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if .Values.gitea.oauth }}
            {{- range $idx, $value := .Values.gitea.oauth }}
            {{- if $value.existingSecret }}
            - name: GITEA_OAUTH_KEY_{{ $idx }}
              valueFrom:
                secretKeyRef:
                  key:  key
                  name: {{ $value.existingSecret }}
            - name: GITEA_OAUTH_SECRET_{{ $idx }}
              valueFrom:
                secretKeyRef:
                  key:  secret
                  name: {{ $value.existingSecret }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if .Values.gitea.admin.existingSecret }}
            - name: GITEA_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  key:  username
                  name: {{ .Values.gitea.admin.existingSecret }}
            - name: GITEA_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key:  password
                  name: {{ .Values.gitea.admin.existingSecret }}
            {{- else }}
            - name: GITEA_ADMIN_USERNAME
              value: {{ .Values.gitea.admin.username | quote }}
            - name: GITEA_ADMIN_PASSWORD
              value: {{ .Values.gitea.admin.password | quote }}
            {{- end }}
            {{- if .Values.statefulset.env }}
            {{- toYaml .Values.statefulset.env | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: init
              mountPath: /usr/sbin
            - name: temp
              mountPath: /tmp
            - name: data
              mountPath: /data
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
      terminationGracePeriodSeconds: {{ .Values.statefulset.terminationGracePeriodSeconds }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ include "gitea.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            # SSH Port values have to be set here as well for openssh configuration
            - name: SSH_LISTEN_PORT
              value: {{ .Values.gitea.config.server.SSH_LISTEN_PORT | quote }}
            - name: SSH_PORT
              value: {{ .Values.gitea.config.server.SSH_PORT | quote }}
            - name: GITEA_APP_INI
              value: /data/gitea/conf/app.ini
            - name: GITEA_CUSTOM
              value: /data/gitea
            - name: GITEA_WORK_DIR
              value: /data
            - name: GITEA_TEMP
              value: /tmp/gitea
            - name: TMPDIR
              value: /tmp/gitea
            {{- if .Values.signing.enabled }}
            - name: GNUPGHOME
              value: {{ .Values.signing.gpgHome }}
            {{- end }}
            {{- if .Values.statefulset.env }}
            {{- toYaml .Values.statefulset.env | nindent 12 }}
            {{- end }}
          ports:
            - name: ssh
              containerPort: {{ .Values.gitea.config.server.SSH_LISTEN_PORT }}
            - name: http
              containerPort: {{ .Values.gitea.config.server.HTTP_PORT }}
            {{- if .Values.gitea.config.server.ENABLE_PPROF }}
            - name: profiler
              containerPort: 6060
            {{- end }}
          {{- if .Values.gitea.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.gitea.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.gitea.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.gitea.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.gitea.startupProbe }}
          startupProbe:
            {{- toYaml .Values.gitea.startupProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- /* Honor the deprecated securityContext variable when defined */ -}}
            {{- if .Values.containerSecurityContext -}}
            {{ toYaml .Values.containerSecurityContext | nindent 12 -}}
            {{- else -}}
            {{ toYaml .Values.securityContext | nindent 12 -}}
            {{- end }}
          volumeMounts:
            - name: temp
              mountPath: /tmp
            - name: data
              mountPath: /data
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: init
          secret:
            secretName: {{ include "gitea.fullname" . }}-init
            defaultMode: 110
        - name: config
          secret:
            secretName: {{ include "gitea.fullname" . }}
            defaultMode: 110
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
        - name: inline-config-sources
          secret:
            secretName: {{ include "gitea.fullname" . }}-inline-config
        {{- range $idx, $value := .Values.gitea.additionalConfigSources }}
        - name: additional-config-sources-{{ $idx }}
          {{- toYaml $value | nindent 10 }}
        {{- end }}
        - name: temp
          emptyDir: {}
  {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
  {{- with .Values.persistence.existingClaim }}
            claimName: {{ tpl . $ }}
  {{- end }}
  {{- else if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: data
      {{- with .Values.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      {{- with .Values.persistence.labels }}
        labels:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
          {{- range .Values.persistence.accessModes }}
            - {{ . | quote }}
          {{- end }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}
