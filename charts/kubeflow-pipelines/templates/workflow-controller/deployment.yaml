apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    internal.kpt.dev/upstream-identifier: apps|Deployment|{{ .Release.Namespace }}|workflow-controller
  labels: {{- include "kfp.labels" . | nindent 4 }}
    application-crd-id: kubeflow-pipelines
  name: workflow-controller
spec:
  selector:
    matchLabels:
      app: workflow-controller
      application-crd-id: kubeflow-pipelines
  template:
    metadata:
      labels: {{- include "kfp.labels" . | nindent 8 }}
        app: workflow-controller
        application-crd-id: kubeflow-pipelines
    spec:
      containers:
      - args:
        - --configmap
        - workflow-controller-configmap
        - --executor-image
        - gcr.io/ml-pipeline/argoexec:v3.4.17-license-compliance
        - --namespaced
        command:
        - workflow-controller
        env:
        - name: LEADER_ELECTION_IDENTITY
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        image: gcr.io/ml-pipeline/workflow-controller:v3.4.17-license-compliance
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 6060
          initialDelaySeconds: 90
          periodSeconds: 60
          timeoutSeconds: 30
        name: workflow-controller
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 6060
        {{- with .Values.workflowController.resources }}
        resources: {{- . | toYaml | nindent 12 }}
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: workflow-controller
      securityContext:
        runAsNonRoot: true
      serviceAccountName: argo