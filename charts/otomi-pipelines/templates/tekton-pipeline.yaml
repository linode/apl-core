apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: otomi-pipeline
  namespace: otomi-pipelines
spec:
  workspaces:
    - name: source
  params:
    - name: repoUrl
    - name: commitMessage
  tasks:
    - name: otomi-git-clone
      params:
        - name: repoUrl
          value: '$(params.repoUrl)'
        - name: commitMessage
          value: '$(params.commitMessage)'
      taskRef:
        name: otomi-task-git-clone
      workspaces:
        - name: source
          workspace: source
    - name: otomi-bootstrap
      params:
        - name: OTOMI_VERSION
          value: $(tasks.otomi-git-clone.results.OTOMI_VERSION)
        - name: CI
          value: $(tasks.otomi-git-clone.results.CI)
      taskRef:
        name: otomi-task-bootstrap
      workspaces:
        - name: source
          workspace: source
      runAfter:
        - otomi-git-clone
      when:
        - input: $(tasks.otomi-git-clone.results.CI)
          operator: in
          values: ['1']
    - name: otomi-test
      params:
        - name: OTOMI_VERSION
          value: $(tasks.otomi-git-clone.results.OTOMI_VERSION)
        - name: CI
          value: $(tasks.otomi-git-clone.results.CI)
      taskRef:
        name: otomi-task-test
      workspaces:
        - name: source
      runAfter:
        - otomi-bootstrap
      when:
        - input: $(tasks.otomi-git-clone.results.CI)
          operator: in
          values: ['1']
    - name: otomi-apply
      params:
        - name: OTOMI_VERSION
          value: $(tasks.otomi-git-clone.results.OTOMI_VERSION)
        - name: CI
          value: $(tasks.otomi-git-clone.results.CI)
      taskRef:
        name: otomi-task-apply
      workspaces:
        - name: source
      runAfter:
        - otomi-test
      when:
        - input: $(tasks.otomi-git-clone.results.CI)
          operator: in
          values: ['1']
