# Set provider name and backup storage location bucket name
configuration:
  backupStorageLocation:
  - name: backups-primary
    bucket: velero-backups
    default: true
    provider: aws
    credential:
      name: test-credential
      key: test-key
    config:
      region: us-east-1
      profile: us-east-1-profile
  - name: backups-secondary
    bucket: velero-backups
    provider: aws
    config:
      region: us-west-1
      profile: us-west-1-profile
  volumeSnapshotLocation:
  - name: ebs-us-east-1
    provider: aws
    config:
      region: us-east-1
  - name: portworx-cloud
    provider: portworx
    config:
      type: cloud

schedules:
  mybackup:
    labels:
      myenv: foo
    schedule: "0 0 * * *"
    template:
      ttl: "240h"
      includedNamespaces:
      - foo

# Set a service account so that the CRD clean up job has proper permissions to delete CRDs
serviceAccount:
  server:
    name: velero

# The Velero server
# Annotations to Velero deployment
annotations:
  annotation: velero
  foo: bar

# Labels to Velero deployment
labels:
  label: velero
  foo: bar

# Annotations to Velero deployment's template
podAnnotations:
  pod-annotation: velero
  foo: bar

# Labels to Velero deployment's template
podLabels:
  pod-label: velero
  foo: bar

# Resources to Velero deployment
resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 100m
    memory: 128Mi

# The node-agent daemonset
deployNodeAgent: true

nodeAgent:
  # Annotations to node-agent daemonset
  annotations:
    annotation: node-agent
    foo: bar
  # Labels to node-agent daemonset
  labels:
    label: node-agent
    foo: bar
  # Resources to node-agent daemonset
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 128Mi

# The kubectl upgrade/cleanup job
kubectl:
  # Annotations to kubectl job
  annotations:
    annotation: kubectl
    foo: bar
  # Labels to kubectl job
  labels:
    label: kubectl
    foo: bar
  # Resources to kubectl job
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 128Mi

# Whether or not to clean up CustomResourceDefintions when deleting a release.
# Cleaning up CRDs will delete the BackupStorageLocation and VolumeSnapshotLocation instances, which would have to be reconfigured.
# Backup data in object storage will _not_ be deleted, however Backup instances in the Kubernetes API will.
# Always clean up CRDs in CI.
cleanUpCRDs: true
