{{- $giteaUrl := print "https://gitea.".Values.cluster.domainSuffix }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "otomi-api.fullname" . }}
  labels:
{{ include "otomi-api.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "otomi-api.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "otomi-api.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/secret: {{ include (print .Template.BasePath "/secret.yaml") . | sha256sum | trunc 63 }}
        checksum/config: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum | trunc 63 }}
        checksum/core: {{ include (print .Template.BasePath "/core-config.yaml") . | sha256sum | trunc 63 }}
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "otomi-api.serviceAccountName" . }}
      securityContext: {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if include .Values.env.GIT_REPO_URL $giteaUrl }}
      initContainers:
        - name: waitforgitea
          env:
            - name: GITEA_URL
              value: {{ $giteaUrl }}/otomi/values
          image: badouralix/curl-http2
          script: |
            {{ if (merge .Values dict) | dig "env" "GIT_SSL_NO_VERIFY" nil }}export INSECURE='--insecure'{{ end }}
            echo "Waiting until gitea is accessible at $GITEA_URL"
            until $(curl $INSECURE --output /dev/null --silent --head --fail -I $GITEA_URL); do 
              printf '.'
              sleep 5
            done
            echo READY!
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "otomi-api.fullname" . }}
            - configMapRef:
                name: {{ include "otomi-api.fullname" . }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            # initialDelaySeconds: 20
            httpGet:
              path: /live
              port: 9000
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: /ready
              port: 9000
          resources: {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: repo
              mountPath: /tmp
            - name: core-values
              mountPath: /etc/otomi/core.yaml
              subPath: core.yaml
        {{- if .Values.tools.enabled }}
        - name: {{ .Chart.Name }}-tools
          securityContext: {{- toYaml .Values.tools.securityContext | nindent 12 }}
          image: "{{ .Values.tools.image.registry }}/{{ .Values.tools.image.repository }}:{{ .Values.tools.image.tag }}"
          imagePullPolicy: {{ .Values.tools.image.pullPolicy }}
          command: ['sh', '-c', 'binzx/otomi server']
          envFrom:
            - secretRef:
                name: {{ include "otomi-api.fullname" . }}
            - configMapRef:
                name: {{ include "otomi-api.fullname" . }}
          ports:
            - name: http
              containerPort: 17771
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources: {{- toYaml .Values.tools.resources | nindent 12 }}
          volumeMounts:
            - name: repo
              mountPath: /tmp
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: repo
          emptyDir: {}
        - name: core-values
          configMap:
            name: {{ include "otomi-api.fullname" . }}-core

