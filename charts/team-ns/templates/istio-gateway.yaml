{{- $v := .Values }}
{{- $ns := .Release.Namespace }}
{{- if or (eq $v.teamId "admin") ($v.otomi.isMultitenant) }}
# collect unique domains for this GW
{{- $publicDomains := list }}
{{- $authDomains := list }}
{{- range $s := $v.services }}
{{- $shared := (and $s.isCore (eq $v.teamId "admin") (hasKey $s "isShared")) | default false }}
{{- if and (or (hasKey $s "domain") $shared ) (not (hasKey $s "ksvc")) }}
{{- $domain := (index $s "domain" | default (printf "%s.%s" $s.name ($shared | ternary $v.clusterDomain $v.domain))) }}
{{- if $s.isPublic }}
  {{- if not (has $domain $publicDomains) }}
    {{- $publicDomains = (append $publicDomains $domain) }}
  {{- end }}
{{- else }}
  {{- if not (has $domain $authDomains) }}
    {{- $authDomains = (append $authDomains $domain) }}
  {{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- range $type := (list "public" "auth") }}
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: team-{{ $v.teamId }}-{{ $type }}
  labels: {{- include "chart-labels" $ | nindent 4 }}
spec:
  selector:
    istio: ingressgateway{{ if eq $type "auth" }}-auth{{ end }}
  servers:
  - hosts:
      - '{{ $ns }}/*.{{ $v.domain }}'
      {{- range $domain := (eq $type "public") | ternary $publicDomains $authDomains }}
      - {{ $ns }}/{{ $domain }}
      {{- end }}
    port:
      name: http
      number: 80
      protocol: HTTP
---
{{- end }}
{{- end }}
