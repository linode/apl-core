{{- $v := .Values }}
{{- $ns := .Release.Namespace }}
{{- $ := . }}
# collect unique domains for this GW
{{- $publicDomainsTerm :=  list }}
{{- $publicDomainsPass :=  list }}
{{- range $s := $v.services }}
  {{- $isKnativeService := dig "ksvc" "predeployed" false $s }}
  {{- $tlsPass := $s.tlsPass | default false }}
  {{- $cnameDomain := list }}
  {{- if $s.useCname }}
    {{- $cnameDomain = list $s.cname.domain }}
  {{- end }}
  {{- $shared := (and $s.isCore (eq $v.teamId "admin") (hasKey $s "isShared")) | default false }}
  {{- if (not ($isKnativeService)) }}
    {{- $domain := include "service.domain" (dict "s" $s "dot" $) }}
    {{- $domain = list $domain }}
      {{- if and $tlsPass (not (has $domain $publicDomainsPass)) }}
          {{- $publicDomainsPass = (concat $publicDomainsPass $domain $cnameDomain) }}
      {{- else if not (has $domain $publicDomainsTerm) }}
        {{- $publicDomainsTerm = (concat $publicDomainsTerm $domain $cnameDomain) }}
      {{- end }}
  {{- end }}
{{- end }}
{{- $publicDomains := dict "term" $publicDomainsTerm "pass" $publicDomainsPass }}
{{- range $tls, $tlsDomains := $publicDomains }}
{{- if not (empty $tlsDomains) }}
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: team-{{ $v.teamId }}-public-tls{{ $tls }}
  labels: {{- include "team-ns.chart-labels" $ | nindent 4 }}
spec:
  selector:
    istio: ingressgateway-public
  servers:
  - hosts:
    {{- range $domain := $tlsDomains }}
      - '{{ $ns }}/{{ $domain }}'
    {{- end }}
    {{- if eq $tls "pass" }}
    tls:
      mode: PASSTHROUGH
    port:
      number: 443
      name: https
      protocol: HTTPS
    {{- else }}
    port:
      name: http
      number: 80
      protocol: HTTP
    {{- end }}
---
  {{- end }}
{{- end }}
