{{- $v := .Values }}
{{- $ns := .Release.Namespace }}
{{- $ := . }}
# collect unique domains for this GW
{{- $publicDomainsTerm :=  list }}
{{- $privateDomainsTerm := list }}
{{- $publicDomainsPass :=  list }}
{{- $privateDomainsPass := list }}
{{- range $s := $v.services }}
  {{- $isKnativeService := dig "ksvc" "predeployed" false $s }}
  {{- $type := $s.type | default "public" }}
  {{- $tlsPass := $s.tlsPass | default false }}
  {{- $shared := (and $s.isCore (eq $v.teamId "admin") (hasKey $s "isShared")) | default false }}
  {{- if and (or (hasKey $s "domain") $shared ) (not ($isKnativeService)) }}
    {{- $domain := include "service.domain" (dict "s" $s "dot" $) }}
    {{- if eq $type "public" }}
      {{- if and $tlsPass (not (has $domain $publicDomainsPass)) }}
        {{- $publicDomainsPass = (append $publicDomainsPass $domain) }}
      {{- else if not (has $domain $publicDomainsTerm) }}
        {{- $publicDomainsTerm = (append $publicDomainsTerm $domain) }}
      {{- end }}
    {{- else if eq $type "private" }}
      {{- if and $tlsPass (not (has $domain $privateDomainsPass)) }}
        {{- $privateDomainsPass = (append $privateDomainsPass $domain) }}
      {{- else if not (has $domain $privateDomainsTerm) }}
        {{- $privateDomainsTerm = (append $privateDomainsTerm $domain) }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
{{- $publicDomains := dict "term" $publicDomainsTerm "pass" $publicDomainsPass }}
{{- $privateDomains := dict "term" $privateDomainsTerm "pass" $privateDomainsPass }}
{{- range $type, $typeDomains := dict "public" $publicDomains "private" $privateDomains }}
  {{- range $tls, $tlsDomains := $typeDomains }}
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: team-{{ $v.teamId }}-{{ $type }}-tls{{ $tls }}
  labels: {{- include "team-ns.chart-labels" $ | nindent 4 }}
spec:
  selector:
    istio: ingressgateway-{{ $type }}
  servers:
  - hosts:
      - '{{ $ns }}/*.{{ $v.domain }}'
    {{- range $domain := $tlsDomains }}
      - {{ $ns }}/{{ $domain }}
    {{- end }}
    {{- if eq $tls "pass" }}
    tls:
      mode: PASSTHROUGH
    port:
      number: 443
      name: https
      protocol: HTTPS
    {{- else }}
    port:
      name: http
      number: 80
      protocol: HTTP
    {{- end }}
---
  {{- end }}
{{- end }}
