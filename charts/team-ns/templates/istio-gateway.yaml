{{- $v := .Values }}
{{- $ns := .Release.Namespace }}
{{- if or (eq $v.teamId "admin") ($v.otomi.isMultitenant) }}
# collect unique domains for this GW
{{- $authDomains := list }}
{{- $publicDomains := list }}
{{- $tlsDomains := list }}
{{- range $s := $v.services }}
{{- $type := $s.type | default "public" }}
{{- $auth := $s.auth | default false }}
{{- $shared := (and $s.isCore (eq $v.teamId "admin") (hasKey $s "isShared")) | default false }}
{{- if and (or (hasKey $s "domain") $shared ) (not (hasKey $s "ksvc")) }}
{{- $domain := (index $s "domain" | default (printf "%s.%s" $s.name ($shared | ternary $v.clusterDomainSuffix $v.domain))) }}
{{- if and (eq $type "tlsPass") (not (has $domain $tlsDomains)) }}
  {{- $tlsDomains = (append $tlsDomains $domain) }}
{{- else if eq $type "public" }}
  {{- if $auth }}
    {{- if not (has $domain $authDomains) }}
      {{- $authDomains = (append $authDomains $domain) }}
    {{- end }}
  {{- else }}
    {{- if not (has $domain $publicDomains) }}
      {{- $publicDomains = (append $publicDomains $domain) }}
    {{- end }}
  {{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- $domains := dict "auth" $authDomains "public" $publicDomains "tls" $tlsDomains }}
{{- range $type, $typeDomains := $domains }}
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: team-{{ $v.teamId }}-{{ $type }}
  labels: {{- include "chart-labels" $ | nindent 4 }}
spec:
  selector:
    istio: ingressgateway{{ if ne $type "public" }}-{{ $type }}{{ end }}
  servers:
  - hosts:
      - '{{ $ns }}/*.{{ $v.domain }}'
      {{- range $domain := $typeDomains }}
      - {{ $ns }}/{{ $domain }}
      {{- end }}
    {{- if ne $type "tls" }}
    port:
      name: http
      number: 80
      protocol: HTTP
    {{- else }}
    tls:
      mode: PASSTHROUGH
    port:
      number: 443
      name: https
      protocol: HTTPS
    {{- end }}
---
{{- end }}
{{- end }}
