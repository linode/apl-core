{{- $v := .Values }}
{{- $ns := .Release.Namespace }}
{{- $h := $v.apps.harbor }}
---
apiVersion: v1
imagePullSecrets:
{{- with $v.globalPullSecret }}
- name: otomi-pullsecret-global
{{- end }}
{{- if $h.enabled }}
- name: harbor-pullsecret
{{- end }}
kind: ServiceAccount
metadata:
  labels: {{- include "team-ns.chart-labels" . | nindent 4 }}
  name: sa-team-{{ $v.teamId }}
secrets:
{{- if $h.enabled }}
- name: harbor-pushsecret-builds
{{- end }}
- name: gitea-credentials
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: admin-team-{{ $v.teamId }}
  labels: {{- include "team-ns.chart-labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: sa-team-{{ $v.teamId }}
  namespace: {{ $ns }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: unprivileged-team-{{ $v.teamId }}
  labels: {{- include "team-ns.chart-labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: psp:unprivileged
subjects:
- kind: ServiceAccount
  name: sa-team-{{ $v.teamId }}
  namespace: {{ $ns }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-update-team-{{ $v.teamId }}
  labels: {{- include "team-ns.chart-labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-update
subjects:
- kind: ServiceAccount
  name: sa-team-{{ $v.teamId }}
  namespace: {{ $ns }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubectl
automountServiceAccountToken: false
secrets:
- name: kubectl-token
---
apiVersion: v1
kind: Secret
metadata:
  name: kubectl-token
  annotations:
    kubernetes.io/service-account.name: kubectl
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubectl
  labels: {{- include "team-ns.chart-labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: kubectl
  namespace: {{ $ns }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tty-admin
  namespace: team-{{ $v.teamId }}
  labels: {{- include "team-ns.chart-labels" . | nindent 4 }}
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-triggers-team-{{ $v.teamId }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: triggers-eventlistener-binding-team-{{ $v.teamId }}
subjects:
- kind: ServiceAccount
  name: tekton-triggers-team-{{ $v.teamId }}
  namespace: team-{{ $v.teamId }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-roles
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: triggers-eventlistener-clusterbinding-team-{{ $v.teamId }}
subjects:
- kind: ServiceAccount
  name: tekton-triggers-team-{{ $v.teamId }}
  namespace: team-{{ $v.teamId }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-eventlistener-clusterroles
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-triggers-clusterbinding-team-{{ $v.teamId }}
subjects:
- kind: ServiceAccount
  name: tekton-triggers-team-{{ $v.teamId }}
  namespace: team-{{ $v.teamId }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-aggregate-view
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tekton-triggers-createwebhook-team-{{ $v.teamId }}
  namespace: team-{{ $v.teamId }}
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - create
  - update
  - delete
- apiGroups:
  - triggers.tekton.dev
  resources:
  - eventlisteners
  verbs:
  - get
  - list
  - create
  - update
  - delete
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - get
  - list
  - delete
  - update
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-triggers-createwebhook-team-{{ $v.teamId }}
  namespace: team-{{ $v.teamId }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-triggers-createwebhook-team-{{ $v.teamId }}
  namespace: team-{{ $v.teamId }}
subjects:
  - kind: ServiceAccount
    name: tekton-triggers-createwebhook-team-{{ $v.teamId }}
    namespace: team-{{ $v.teamId }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-triggers-createwebhook-team-{{ $v.teamId }}
---
# Role for apl-gitea-operator to manage service account in team namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: apl-gitea-operator-service-account
  namespace: team-{{ $v.teamId }}
rules:
# Allows the apl-gitea-operator to create, get and list secrets in the team namespace. This is necessary to create service accounts for build in harbor.
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "watch", "list", "delete", "create", "update"]
---
# RoleBinding for the above Role in team namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: apl-gitea-operator-service-account-binding
  namespace: team-{{ $v.teamId }}
subjects:
- kind: ServiceAccount
  namespace: apl-gitea-operator
  name: apl-gitea-operator
roleRef:
  kind: Role
  name: apl-gitea-operator-service-account
  apiGroup: rbac.authorization.k8s.io
---