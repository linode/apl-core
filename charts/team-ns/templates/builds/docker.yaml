{{- $v := .Values }}
{{- range $v.builds }}
{{- if eq .mode.type "docker" }}
{{- $context := ( dir .mode.docker.path ) }}
---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: docker-build-{{ .name }}
  annotations:
    sidecar.istio.io/inject: "false"
  labels: {{- include "team-ns.chart-labels" $ | nindent 4 }}
spec:
  workspaces:
  - name: shared-data
  - name: docker-credentials
  - name: git-credentials
  tasks:
  - name: fetch-source
    taskRef:
      kind: Task
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data
    - name: ssh-directory
      workspace: git-credentials
    params:
    - name: url
      value: {{ .mode.docker.repoUrl }}
    - name: revision
      value: {{ .mode.docker.revision }}
  {{- if .scanSource }}
  - name: grype-code-scan
    taskRef:
      name: grype
      kind: Task
    runAfter:
      - fetch-source
    params:
      - name: ARGS
        value:
          - dir:.
          - --name={{ .name }}
    workspaces:
      - name: source-dir
        workspace: shared-data
  {{- end }}
  - name: build-push
    runAfter:
      {{- if .scanSource }}
      - grype-code-scan
      {{- else }}
      - fetch-source
      {{- end }}
    taskRef:
      kind: Task
      name: kaniko
    workspaces:
    - name: source
      workspace: shared-data
    - name: dockerconfig
      workspace: docker-credentials
    params:
    - name: DOCKERFILE
      value: {{ .mode.docker.path }}
    - name: CONTEXT
      value: {{ $context }}
    - name: IMAGE
      value: harbor.{{ $v.cluster.domainSuffix }}/team-{{ $v.teamId }}/{{ .name }}:{{ .tag }}
    {{- with (dig "mode" "docker" "envVars" nil . ) }}
    - name: EXTRA_ARGS
      value: 
        {{- range . }}
        - --build-arg={{ .name }}={{ .value }}
        {{- end }}
    {{- end }}
---
{{- if .trigger }}
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: trigger-template-{{ .name }}
  labels: {{- include "team-ns.chart-labels" $ | nindent 4 }}
spec:
  resourcetemplates:
    - apiVersion: tekton.dev/v1
      kind: PipelineRun
      metadata:
        generateName: docker-trigger-build-{{ .name }}-{{ regexReplaceAll "[|._]{1}" .tag "-" }}-
        labels:
          tekton.dev/pipeline: docker-build-{{ .name }}
          {{- include "team-ns.chart-labels" $ | nindent 10 }}
        annotations:
          sidecar.istio.io/inject: "false"
      spec:
        pipelineRef:
          name: docker-build-{{ .name }}
        taskRunTemplate:
          serviceAccountName: sa-team-{{ $v.teamId }}
          podTemplate:
            securityContext:
              fsGroup: 65532
        workspaces:
        - name: shared-data
          volumeClaimTemplate:
            metadata:
              creationTimestamp: null
            spec:
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi
            status: {}
        - name: git-credentials
          secret:
            {{- if .externalRepo }}
            secretName: {{ .secretName }}
            {{- else }}
            secretName: gitea-credentials
            {{- end }}
        - name: docker-credentials
          secret:
            secretName: harbor-pushsecret-builds
---
{{- else }}
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: docker-build-{{ .name }}-{{ regexReplaceAll "[|._]{1}" .tag "-" }}
  annotations:
    sidecar.istio.io/inject: "false"
  labels: {{- include "team-ns.chart-labels" $ | nindent 4 }}
spec:
  pipelineRef:
    name: docker-build-{{ .name }}
  taskRunTemplate:
    serviceAccountName: sa-team-{{ $v.teamId }}
    podTemplate:
      securityContext:
        fsGroup: 65532
  workspaces:
  - name: shared-data
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-credentials
    secret:
      {{- if .externalRepo }}
      secretName: {{ .secretName }}
      {{- else }}
      secretName: gitea-credentials
      {{- end }}
  - name: docker-credentials
    secret:
      secretName: harbor-pushsecret-builds
{{- end }}
---
{{- if .trigger }}
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: gitea-triggerbinding-{{ .name }}
  labels: {{- include "team-ns.chart-labels" $ | nindent 4 }}
spec:
  params:
    - name: gitrevision
      value: $(body.after)
    - name: gitrepositoryurl
      value: $(body.repository.clone_url)
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: gitea-webhook-{{ .name }}
  labels:
    tekton.dev/pipeline: docker-build-{{ .name }}
    {{- include "team-ns.chart-labels" $ | nindent 4 }}
spec:
  serviceAccountName: tekton-triggers-team-{{ $v.teamId }}
  triggers:
    - name: tekton-webhook-{{ .name }}
      bindings:
        - kind: TriggerBinding
          ref: gitea-triggerbinding-{{ .name }}
      template:
        ref: trigger-template-{{ .name }}
---
{{- end }}
{{- end }}
{{- end }}