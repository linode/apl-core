{{- $v := .Values }}
{{- $ := . }}
{{- if get (index $v.apps "external-secrets") "enabled" }}
{{- range $s := $v.secrets }}
{{- $ns := index $s "namespace" | default $.Release.Namespace }}
{{- $pathPrefix := printf "/secret/data/teams/team-%s" $v.teamId }}
{{- $vaultPath := printf "%s/%s" $pathPrefix $s.name | quote }}
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: {{ $s.name }}
  namespace: {{ $ns }}
  labels: {{- include "team-ns.chart-labels" $ | nindent 4 }}
    {{- with $s.labels }}
    {{- . | toYaml | nindent 4 }}
    {{- end }}
spec:
  backendType: vault
  vaultMountPoint: kubernetes
  vaultRole: default
  template:
  {{- if eq $s.type "tls" }}
    type: kubernetes.io/tls
  data:
    - key: {{ $vaultPath }}
      property: {{ $s.crt | default "tls.crt" }}
      name: tls.crt
    - key: {{ $vaultPath }}
      property: {{ $s.key | default "tls.key" }}
      name: tls.key
    {{- if hasKey $s "ca" }}
    - key: {{ $vaultPath }}
      property: {{ $s.ca | default "ca.crt" }}
      name: ca.crt
    {{- end }}
  {{- else if eq $s.type "generic" }}
    type: Opaque
  data:
    {{- range .entries }}
    - key: {{ $vaultPath }}
      name: {{ . }}
      property: {{ . }}
    {{- end }}
  {{- else if eq $s.type "docker-registry" }}
    type: kubernetes.io/dockerconfigjson
  data:
    - key: {{ $vaultPath }}
      name: ".dockerconfigjson"
  {{- end }}
---      
{{- end }}
{{- end }}
