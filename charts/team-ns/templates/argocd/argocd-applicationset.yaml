{{- $v := .Values }}
{{- if $v.apps.argocd.enabled }}
{{- range $v.workloads }}
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: team-{{ $v.teamId }}-{{ .name }}
  namespace: argocd # ApplicationSets must always be in the argocd namespace
  {{- if .autoUpdate }}
  annotations:
    argocd-image-updater.argoproj.io/{{ .name }}.force-update: "false"
    argocd-image-updater.argoproj.io/{{ .name }}.pull-secret: pullsecret:team-{{ $v.teamId }}/harbor-pullsecret
    argocd-image-updater.argoproj.io/{{ .name }}.update-strategy: semver
    argocd-image-updater.argoproj.io/git-branch: {{ .revision }}
    argocd-image-updater.argoproj.io/image-list: {{ .name }}=harbor.{{ $v.cluster.domainSuffix }}/team-{{ $v.teamId }}/{{ .buildName }}:~1
    argocd-image-updater.argoproj.io/write-back-method: git
  {{- end }}
spec:
  generators:
  - git:
      repoURL: https://gitea.{{ $v.cluster.domainSuffix }}/otomi/values.git
      revision: HEAD
      files:
      - path: "env/teams/workloads/{{ $v.teamId }}/{{ .name }}.yaml"
  template:
    metadata:
      name: 'team-{{ $v.teamId }}-{{ .name }}'
    spec:
      {{- if and ( eq $v.teamId "admin" ) .namespace }} 
      project: 'default' # project is not restricted
      {{- else }} 
      project: 'team-{{ $v.teamId }}' # project is restricted
      {{- end }}
      source:
        repoURL: '{{ .url }}'
        targetRevision: '{{ .revision }}' 
        path: '{{ .path }}' 
        chart: '{{ .chart }}'  
        helm:
          # The argocd template the values parameter is taken from the git generator path
          values: '{{ "{{values}}" }}'
          releaseName: '{{ .name }}'
      syncPolicy:
        automated:
          allowEmpty: false
          prune: false
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 3
          limit: 3
        syncOptions: []
      destination:
        server: 'https://kubernetes.default.svc'
        {{- if and ( eq $v.teamId "admin" ) .namespace }} 
        namespace: '{{- .namespace }}'
        {{- else }} 
        namespace: 'team-{{ $v.teamId }}'
        {{- end }}
        # helm-specific config
{{- end }}
{{- end }}