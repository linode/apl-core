{{- $v := .Values }}
{{- $a := $v.apps.argocd }}
{{- if $a.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: team-{{ $v.teamId }}
  namespace: argocd
  # Finalizer that ensures that project is not deleted until it is not referenced by any application
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  description: ArgoCD project for team {{ $v.teamId }}
  # Allow manifests to deploy from any Git repos
  sourceRepos:
  - https://gitea.{{ $v.cluster.domainSuffix }}/otomi/team-{{ $v.teamId }}-argocd.git
  {{- range $v.workloads }}
  - {{ .url }}
  {{- end }}
  # Only permit applications to deploy to the guestbook namespace in the same cluster
  destinations:
  - namespace: team-{{ $v.teamId }}
    server: https://kubernetes.default.svc
  # Deny all cluster-scoped resources from being created
  {{- if eq $v.teamId "admin" }}
  clusterResourceWhitelist: 
  - group: '*'
    kind: '*'
  {{- else }}
  clusterResourceWhitelist: []
  {{- end }}
  # Allow all namespaced-scoped resources to be created, except for ResourceQuota, LimitRange, NetworkPolicy
  namespaceResourceBlacklist:
  - group: ''
    kind: ResourceQuota
  - group: ''
    kind: LimitRange
  - group: ''
    kind: NetworkPolicy
  - group: networking.istio.io
    kind: VirtualService
  - group: networking.istio.io
    kind: Sidecar
  - group: networking.istio.io
    kind: Gateway
  # Deny all namespaced-scoped resources from being created
  # namespaceResourceWhitelist: []
  # - group: 'apps'
  #   kind: Deployment
  # - group: 'apps'
  #   kind: StatefulSet
  roles:
{{- if $v.otomi.isMultitenant }}
  # we create a scoped team-admin role since we are only allowed access to team-* projects as team-admin in multitenant setup
  - name: team-admin
    description: Team member privileges to team-{{ $v.teamId }}
    policies:
    - p, proj:team-{{ $v.teamId }}:team-admin, *, *, team-{{ $v.teamId }}/*, allow
    groups:
    - team-admin
    - team-{{ $v.teamId }}
{{- end }}
  - name: team-member
    description: Team member privileges to team-{{ $v.teamId }}
{{- if or (has "argocd" $v.selfService.apps) $v.otomi.isMultitenant }}
    policies:
  {{- if has "argocd" $v.selfService.apps }}
    - p, proj:team-{{ $v.teamId }}:team-member, *, *, team-{{ $v.teamId }}/*, allow
  {{- else }}
    {{- if $v.otomi.isMultitenant }}
    - p, proj:team-{{ $v.teamId }}:team-member, *, get, team-{{ $v.teamId }}/*, allow
    {{- else }}
    # we already have read-only rights globally when not in multitenancy
    {{- end }}
  {{- end }}
{{- end }}
    groups:
    - team-{{ $v.teamId }}
  # A role which provides read-only access to all applications in the project
  - name: read-only
    description: Read-only privileges to team-{{ $v.teamId }}
    policies:
    - p, proj:team-{{ $v.teamId }}:read-only, applications, get, team-{{ $v.teamId }}/*, allow
{{- if not $v.otomi.isMultitenant }}
{{- end }}
    groups:
    - team-viewer
  - name: ci-role
    description: Sync privileges for team applications
    policies:
    - p, proj:team-{{ $v.teamId }}:ci-role, applications, sync, team-{{ $v.teamId }}/*, allow
    # NOTE: JWT tokens can only be generated by the API server and the token is not persisted
    # anywhere by Argo CD. It can be prematurely revoked by removing the entry from this list.
    jwtTokens:
    - iat: 1535390316
{{- end }}    