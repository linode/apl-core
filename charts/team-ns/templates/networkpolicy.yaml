{{- $v := .Values | merge (dict) }}
{{/* Above merge is a workaround for: https://github.com/helm/helm/issues/9266 */}}

{{- if not (eq $v.teamId "admin") }}
{{- if (dig "networkPolicy" "ingressPrivate" true $v) }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-ingress-deny
spec:
  podSelector: {}
  policyTypes:
  - Ingress
# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: default-egress-deny
# spec:
#   podSelector: {}
#   policyTypes:
#   - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-ingress-platform
spec:
  # Match all Pods in this namespace
  podSelector: {}
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: istio-system
          podSelector:
            matchLabels:
              app: ingressgateway
    - from:
        - namespaceSelector:
            matchLabels:
              name: istio-system
          podSelector:
            matchLabels:
              app: istiod
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
    # - from:
    #     - namespaceSelector:
    #         matchLabels:
    #           name: shared
# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: default-egress-platform
# spec:
#   # Match all Pods in this namespace
#   podSelector: {}
#   policyTypes:
#     - Egress
#   egress:
#     - to:
#         # Allow egress to DNS
#         - namespaceSelector: {}
#           podSelector: {}
#       ports:
#         - port: 53
#           protocol: UDP
#         - port: 53
#           protocol: TCP
#     - to:
#         - namespaceSelector:
#             matchLabels:
#               name: istio-system
#           podSelector:
#             matchLabels:
#               app: ingressgateway
#     - to:
#         - namespaceSelector:
#             matchLabels:
#               name: istio-system
#           podSelector:
#             matchLabels:
#               app: istiod
#     - to:
#         - namespaceSelector:
#             matchLabels:
#               name: monitoring
#           podSelector:
#             matchLabels:
#               app: prometheus
#     - to:
#         - namespaceSelector:
#             matchLabels:
#               name: shared

# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: default-egress-teams
# spec:
#   podSelector: {}
#   policyTypes:
#     - Egress
#   egress:
#     - to:
#         - namespaceSelector:
#             matchLabels:
#               type: team
{{- range $s := $v.services }}
{{- if not $s.isCore }}
{{- $ingressPrivateMode := dig "networkPolicy" "ingressPrivate" "mode" "denyAll" $s }}
{{- if eq $ingressPrivateMode "allowAll" }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ $s.name }}-ingress-from-all-teams
spec:
  podSelector:
    matchLabels:
      app: {{ $s.name }}
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              type: team
{{- else if eq $ingressPrivateMode "allowOnly" }}
---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ $s.name }}-ingress-allow-only
spec:
  podSelector:
    matchLabels:
      app: {{ $s.name }}
  policyTypes:
    - Ingress
{{- with $s.networkPolicy.ingressPrivate.allow }}
  ingress:
    - from:
{{- range . }}
        - namespaceSelector:
            matchLabels:
              name: team-{{ .team }}
          {{- if hasKey . "app" }}
          podSelector:
            matchLabels:
              app: {{ .app }}
          {{- end }} {{/* hasKey */}}
{{- end }} {{/* range . */}}
{{- end }} {{/* with ingressPrivate.allow */}}
{{- end }} {{/* if ingressPrivateMode */}}

{{- $egressPublicMode:= dig "networkPolicy" "egressPublic" "mode" "denyAll" $s }}
{{- if or (eq $egressPublicMode "allowAll") (eq $egressPublicMode "allowOnly") }}
# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: {{ $s.name }}-egress-public
# spec:
#   podSelector:
#     matchLabels:
#       app: {{ $s.name }}
#   policyTypes:
#     - Egress
#   egress:
#     - to:
#         - namespaceSelector:
#             matchLabels:
#               name: istio-system
#           podSelector:
#             matchLabels:
#               istio: egressgateway
{{- end }} {{/* if egressPublicMode */}}
{{- end }} {{/* not $s.isCore */}}
{{- end }} {{/* range services */}}
{{- end }} {{/* if $v.networkPolicy.ingressPrivate */}}
{{- end }} {{/* if $v.teamId */}}