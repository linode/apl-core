{{- $v := .Values | merge (dict) }}
{{/* Above merge is a workaround for: https://github.com/helm/helm/issues/9266 */}}
{{- if not (eq $v.teamId "admin") }}
{{- $egressFilteringEnabled := dig "networkPolicy" "egressPublic" true  $v }}
{{- if $egressFilteringEnabled }}

{{- $uniqueHosts := list }}
{{- range $s := $v.services }}
{{- range $host := (dig "networkPolicy" "egressPublic" "allow" (list) $s) }}
{{- $uniqueHosts = append $uniqueHosts $host }}
{{- end }} {{/* range */}}
{{- end }} {{/* range $s := $v.services */}}
{{- $uniqueHosts = uniq $uniqueHosts }}

{{- range $host := $uniqueHosts }}
{{- $serviceName := printf "svc-%s" (trimPrefix "*." $host | replace "." "-" | replace "::" "-" | replace ":" "-" ) }}
{{/* check if host is IPv4 or IPv6 address */}}
{{- $isIp := regexMatch "^([a-f0-9:]+:+)+[a-f0-9]+$|^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$" $host }}

{{- if $isIp }}
---
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: {{ $serviceName }}
spec:
  hosts:
    - {{ $host }}
  addresses:
    - {{ $host }}
  resolution: STATIC
  location: MESH_EXTERNAL
  endpoints:
    - address: {{ $host }}
  exportTo:
    - "."
{{- else }}
---
apiVersion: networking.istio.io/v1alpha3
kind: ServiceEntry
metadata:
  name: {{ $serviceName }}
spec:
  hosts:
  - {{ $host }}
  exportTo:
  - "."
  location: MESH_EXTERNAL
  resolution: DNS
{{- end }} {{/* if isIp */}}
{{- end }} {{/* range $uniqueHosts */}}
{{- end }} {{/* if $egressFilteringEnabled */}}
{{- end }} {{/* if $v.teamId */}}