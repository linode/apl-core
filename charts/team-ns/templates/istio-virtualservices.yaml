{{- $v := .Values }}
{{- if or (eq $v.teamId "admin") ($v.cluster.isMultitenant) }}
{{- $ := . }}
{{- range $s := $v.services }}
{{- $ns := index $s "namespace" | default $.Release.Namespace }}
{{- if and (not $s.internal) (not (hasKey $s "host")) }}
{{- $svc := (hasKey $s "hasPrefix" | ternary (printf "%s-%s" $v.teamId ($s.svc | default $s.name)) ($s.svc | default $s.name)) }}
{{- $shared := (and $s.isCore (eq $v.teamId "admin") (hasKey $s "isShared")) | default false}}
{{- $domain := (index $s "domain" | default (printf "%s.%s" $s.name ($shared | ternary $v.cluster.domain $v.domain))) }}
{{/*- $domain := (index $s "domain" | default (printf "%s.%s" $s.name $v.domain)) */}}
{{- $vsName := include "flatten-name" (printf "%s%s" $domain (hasKey $s "paths" | ternary (printf "-%s" (include "helm-toolkit.utils.joinListWithPipe" $s.paths)) "")) }}
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $vsName }}
  labels: {{- include "chart-labels" $ | nindent 4 }}
spec:
  gateways:
  {{- if hasKey $s "ksvc" }}
  - knative-serving/knative-ingress-gateway
  {{- else }}
  - {{ $.Release.Namespace }}/team-{{ $v.teamId }}
  {{- end }}
  hosts:
  - {{ $domain }}
  {{- if $s.tlsPass }}
  tls:
  {{- else }}
  http:
  {{- end }}
    -
    {{- if $s.tlsPass }}
      match:
        - port: 443
          sniHosts:
            - {{ $domain }}
    {{- else }}
      {{- if and (hasKey $s "paths") (not $s.tlsPass) }}
      match:
        {{- range $path := $s.paths }}
          {{- if eq $path "/" }}
        - uri:
            prefix: '/'
          {{- else }}
        - uri:
            prefix: '/{{ $path }}/'        
          {{- end }}
        {{- end }}
        {{- if not (hasKey $s "forwardPath") }}
      rewrite:
        uri: /
        {{- end }}
      {{- end }}
    {{- end }}
    {{- if hasKey $s "ksvc" }}
      rewrite:
        authority: {{ $s.name }}.{{ $v.domain }}
      {{- if and (hasKey $s "paths") (not (hasKey $s "forwardPath")) }}
        uri: "/"
      {{- end }}
      route:
        - destination:
            host: istio-ingressgateway.istio-system.svc.cluster.local
    {{- else }}
      route:
        - destination:
            host: {{ $svc }}.{{ $ns }}.svc.cluster.local
    {{- end }}
            port:
              number: {{ $s.port | default (hasKey $s "tlsPass" | ternary 443 80) }}
      # fix for istio (=envoy) incorrectly setting proto to http
      # (@see https://github.com/istio/istio/issues/7964):
      appendHeaders:
        'x-forwarded-proto': 'https'
        'x-forwarded-port': '443'          
---      
{{- end }}
{{- end }}
{{- end }}
