{{- $v := .Values }}
{{- if or (eq $v.teamId "admin") ($v.cluster.isMultitenant) }}
{{- $ := . }}
{{- range $s := $v.services }}
{{- $ns := index $s "namespace" | default $.Release.Namespace }}
{{- if not (or $s.internal (hasKey $s "host")) }}
{{- $svc := (hasKey $s "hasPrefix" | ternary (printf "%s-%s" $v.teamId ($s.svc | default $s.name)) ($s.svc | default $s.name)) }}
{{- $shared := (and $s.isCore (eq $v.teamId "admin") (hasKey $s "isShared")) | default false}}
{{- $knativeServiceDomain := printf "%s.%s" $s.name $v.domain }}
{{- $domain := (index $s "domain" | default (printf "%s.%s" $s.name ($shared | ternary $v.cluster.domain $v.domain))) }}
# {{- $knativeServiceDomain }}
# {{- $domain }}
{{- if not (and $s.ksvc (eq $knativeServiceDomain $domain)) }}
{{- $vsName := include "flatten-name" (printf "%s%s" $domain (hasKey $s "paths" | ternary (printf "-%s" (include "helm-toolkit.utils.joinListWithPipe" $s.paths)) "")) }}
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{ $vsName }}
  labels: {{- include "chart-labels" $ | nindent 4 }}
    {{- if not (hasKey $s "isPublic") }}
    auth: "true"
    {{- end }}
spec:
  gateways:
  {{- if hasKey $s "ksvc" }}
  - knative-serving/knative-ingress-gateway
  {{- else }}
  - {{ $.Release.Namespace }}/team-{{ $v.teamId }}-{{ hasKey $s "isPublic" | ternary "public" "auth" }}
  {{- end }}
  hosts:
  - {{ $domain }}
  http:
    - match:
      - uri:
          prefix: /logout-otomi
      redirect:
        authority: auth.{{ $v.cluster.domain }}
        uri: /oauth2/sign_out?rd=https://keycloak.{{ $v.cluster.domain }}/realms/master/protocol/openid-connect/logout?redirect_uri=https://{{ printf "otomi.%s" $v.cluster.domain }}
      # route:
      #   - destination:
      #       host: istio-ingressgateway.istio-system.svc.cluster.local
    -
    {{- if hasKey $s "paths" }}
      match:
      {{- range $path := $s.paths }}
        {{- if eq $path "/" }}
        - uri:
            prefix: '/'
        {{- else }}
        - uri:
            prefix: '{{ $path }}'        
        {{- end }}
      {{- end }}
      {{- if not (hasKey $s "forwardPath") }}
      rewrite:
        uri: /
      {{- end }}
    {{- end }}
    {{- if hasKey $s "ksvc" }}
      rewrite:
        authority: {{ $s.name }}.{{ $v.domain }}
      {{- if and (hasKey $s "paths") (not (hasKey $s "forwardPath")) }}
        uri: "/"
      {{- end }}
      route:
        - destination:
            host: istio-ingressgateway.istio-system.svc.cluster.local
    {{- else }}
      route:
        - destination:
            host: {{ $svc }}.{{ $ns }}.svc.cluster.local
    {{- end }}
            port:
              number: {{ $s.port | default 80 }}
      # fix for istio (=envoy) incorrectly setting proto to http
      # (@see https://github.com/istio/istio/issues/7964):
          headers:
            request:
              set:
                X-Forwarded-Proto: https
---
{{- if and (not (hasKey $s "isPublic")) (hasKey $s "authz") }}
{{- $workload := ($s.authz.workload | toYaml | replace "__TEAM" $v.teamId) }}
apiVersion: security.istio.io/v1beta1
kind: RequestAuthentication
metadata:
  name: {{ $vsName }}
  namespace: {{ $ns }}
spec:
  selector:
    matchLabels: {{ $workload | nindent 6 }}
  jwtRules:
    - issuer: https://keycloak.{{ $v.cluster.domain }}/realms/master
      jwksUri: https://keycloak.{{ $v.cluster.domain }}/realms/master/protocol/openid-connect/certs
      forwardOriginalToken: {{ $s.authz.forwardOriginalToken | default false }}
      audiences:
        - otomi
---    
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: {{ $vsName }}
  namespace: {{ $ns }}
spec:
  selector:
    matchLabels: {{ $workload | nindent 6 }}
  action: ALLOW
  rules:
    -
      # {}
      from: 
        - source:
            requestPrincipals: ['https://keycloak.{{ $v.cluster.domain }}/realms/master/*']
      {{- if not $s.isShared }}
      when:
        - key: request.auth.claims[groups]
          values: [{{ if not (eq $v.teamId "admin") }}team-{{ $v.teamId }},{{ end }}team-admin,admin]
      {{- end }}
      to:
        - operation:
            {{- with $s.authz.paths }}
            paths:
              {{- range $path := . }}
              - {{ $path }}
              {{- end }}
            {{- end }}
            hosts: [{{ $domain }}]
            {{- if $s.authz.excludePaths }}
            notPaths: [{{ include "helm-toolkit.utils.joinListWithComma" $s.authz.excludePaths }}]
            {{- end }}
    - from:
        - source:
            notRequestPrincipals: ['https://keycloak.{{ $v.cluster.domain }}/realms/master/*']
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
