{{- $v := .Values }}
{{- if (get $v "knative.enabled" | default true) }}
{{- $ := . }}
{{- $secrets := (include "itemsByName" ($v.secrets | default list) | fromYaml) }}
{{- range $s := $v.services }}
{{- $type := $s.type | default "auth" }}
{{- if hasKey $s "ksvc" }}
{{- $k := $s.ksvc }}
{{- if not $k.predeployed }}
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: {{ $s.name }}
  labels: {{- include "chart-labels" $ | nindent 4 }}
    {{- with $k.labels }}
    {{- . | toYaml | nindent 4 }}
    {{- end }}
    {{- if eq $type "cluster" }}
    serving.knative.dev/visibility: cluster-local
    {{- end }}
spec:
  template:
    metadata:
      annotations:
        policy.otomi.io/ignore: psp-allowed-users
        {{- $hasMinScale := false }}
        {{- range $a := $k.annotations }}
          {{- if (contains "autoscaling.knative.dev/minScale" $a) }}{{ $hasMinScale = true }}{{ end }}
        {{- end }}
        {{- if or (not $k.annotations) (not $hasMinScale) }}
        autoscaling.knative.dev/minScale: {{ $k.scaleToZero | ternary "0" "1" | quote }}
        {{- end }}
        {{- with $k.annotations }}
        {{- . | toYaml | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - image: {{ $k.image.repository }}:{{ $k.image.tag }}
          {{- if or $k.env $k.secrets }}
          env:
            {{- with $k.env }}{{ . | toYaml | nindent 12 }}{{ end }}
            {{- range $secretName := ($k.secrets | default list) }} 
            {{- if hasKey $secrets $secretName -}}
              {{- $secret := index $secrets $secretName  }}
              {{- range $entry := $secret.entries }}
            - name: {{ $entry }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ $entry }}
              {{- end }}
            {{- end }}
            {{- end }}
          {{- end }}
          {{- with $k.envFrom }}
          envFrom: {{- . | toYaml | nindent 12 }}
          {{- end }}
          {{- with $k.resources }}
          resources: {{- . | toYaml | nindent 12 }}
          {{- end }}
          {{- with $k.command }}
          command: {{ . | toYaml | nindent 12 }}
          {{- end }}
          {{- with $k.args }}
          args: {{ . | toYaml | nindent 12 }}
          {{- end }}
{{- if or $k.files $k.secretMounts }}
          volumeMounts:
  {{- range $location, $content := $k.files }}
            - name: {{ $.Release.Name }}-{{ $s.name }}-{{ include "flatten-name" $location }}
              mountPath: {{ $location }}
              readOnly: true
  {{- end }}
  {{- range $location, $secret := $k.secretMounts }}
            - name: {{ $.Release.Name }}-{{ $s.name }}-{{ include "flatten-name" $location }}
              mountPath: {{ $location }}
              readOnly: true
  {{- end }}
      volumes:
  {{- range $location, $content := $k.files }}
        - name: {{ $.Release.Name }}-{{ $s.name }}-{{ include "flatten-name" $location }}
          configMap:
            name: {{ $.Release.Name }}-{{ $s.name }}-{{ include "flatten-name" $location }}
  {{- end }}
  {{- range $location, $secret := $k.secretMounts }}
        - name: {{ $.Release.Name }}-{{ $s.name }}-{{ include "flatten-name" $location }}
          secret:
            secretName: {{ $secret }}
  {{- end }}
{{- end }}
---      
{{- end }}
{{- end }}
{{- end }}
{{- end }}
