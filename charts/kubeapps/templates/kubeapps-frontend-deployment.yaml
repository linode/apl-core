apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  labels:{{ include "kubeapps.extraAppLabels" . | nindent 4 }}
    app: {{ template "common.names.fullname" . }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "common.names.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/kubeapps-frontend-config.yaml") . | sha256sum }}
      labels:
        app: {{ template "common.names.fullname" . }}
        app.kubernetes.io/name: {{ template "common.names.name" . }}
        release: {{ .Release.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
{{- include "kubeapps.imagePullSecrets" . | indent 6 }}
      {{- if .Values.frontend.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.frontend.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.frontend.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.frontend.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.frontend.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.frontend.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      containers:
        - name: nginx
          image: {{ include "common.images.image" (dict "imageRoot" .Values.frontend.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy | quote }}
          {{- if .Values.frontend.livenessProbe }}
          livenessProbe: {{- toYaml .Values.frontend.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.frontend.readinessProbe }}
          readinessProbe: {{- toYaml .Values.frontend.readinessProbe | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: vhost
              mountPath: /opt/bitnami/nginx/conf/server_blocks
          ports:
            - name: http
              containerPort: 8080
          {{- if .Values.frontend.resources }}
          resources: {{- toYaml .Values.frontend.resources | nindent 12 }}
          {{- end }}
        {{- if and .Values.authProxy.enabled (not .Values.authProxy.external) }}
        - name: auth-proxy
          args:
            - --provider={{ required "You must fill \".Values.authProxy.provider\" with the provider. Valid values at https://pusher.github.io/oauth2_proxy/auth-configuration" .Values.authProxy.provider }}
            - --upstream=http://localhost:8080/
            - --http-address=0.0.0.0:3000
            - --email-domain={{ .Values.authProxy.emailDomain }}
            - --pass-basic-auth=false
            - --pass-access-token=true
            - --pass-authorization-header=true
            - --skip-auth-regex=^\/config\.json$
            - --skip-auth-regex=^\/custom_style\.css$
            - --skip-auth-regex=^\/custom_locale\.json$
            - --skip-auth-regex=^\/favicon.*\.png$
            - --skip-auth-regex=^\/static\/
            - --skip-auth-regex=^\/$
            - --scope=openid email groups
            {{- range .Values.authProxy.additionalFlags }}
            - {{ . }}
            {{- end }}
          image: {{ include "common.images.image" (dict "imageRoot" .Values.authProxy.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.authProxy.image.pullPolicy | quote }}
          env:
            - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "kubeapps.oauth2_proxy-secret.name" . }}
                  key: clientID
            - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "kubeapps.oauth2_proxy-secret.name" . }}
                  key: clientSecret
            - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "kubeapps.oauth2_proxy-secret.name" . }}
                  key: cookieSecret
          ports:
            - name: proxy
              containerPort: 3000
          {{- if .Values.authProxy.resources }}
          resources: {{- toYaml .Values.authProxy.resources | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if and (gt (len .Values.clusters) 1) (not .Values.authProxy.enabled) }}
          {{ fail "clusters can be configured only when using an auth proxy for cluster oidc authentication."}}
        {{- end }}
        {{- if and .Values.pinnipedProxy.enabled }}
        - name: pinniped-proxy
          command:
            - pinniped-proxy
          env:
            - name: DEFAULT_PINNIPED_NAMESPACE
              value: {{ .Values.pinnipedProxy.defaultPinnipedNamespace }}
            - name: DEFAULT_PINNIPED_AUTHENTICATOR_TYPE
              value: {{ .Values.pinnipedProxy.defaultAuthenticatorType }}
            - name: DEFAULT_PINNIPED_AUTHENTICATOR_NAME
              value: {{ .Values.pinnipedProxy.defaultAuthenticatorName }}
            - name: DEFAULT_PINNIPED_API_SUFFIX
              value: {{ .Values.pinnipedProxy.defaultPinnipedAPISuffix }}
            - name: RUST_LOG
              value: info
          image: {{ include "common.images.image" (dict "imageRoot" .Values.pinnipedProxy.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.pinnipedProxy.image.pullPolicy | quote }}
          ports:
            - name: pinniped-proxy
              containerPort: 3333
          {{- if .Values.pinnipedProxy.resources }}
          resources: {{- toYaml .Values.pinnipedProxy.resources | nindent 12 }}
          {{- end }}
        {{- end }}
      volumes:
        - name: vhost
          configMap:
            name: {{ template "kubeapps.frontend-config.fullname" . }}
