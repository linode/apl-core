image:
  repository: weaveworks/kured
  tag: latest

configuration:
  # annotationTtl: 0              # force clean annotation after this amount of time (default 0, disabled)
  # alertFilterRegexp: ""         # alert names to ignore when checking for active alerts
  # alertFiringOnly: false        # only consider firing alerts when checking for active alerts
  # blockingPodSelector: []       # label selector identifying pods whose presence should prevent reboots
  # endTime: ""                   # only reboot before this time of day (default "23:59")
  # lockAnnotation: ""            # annotation in which to record locking node (default "weave.works/kured-node-lock")
  period: "1m"                    # reboot check period (default 1h0m0s)
  # forceReboot: false            # force a reboot even if the drain fails or times out (default: false)
  # drainGracePeriod: ""          # time in seconds given to each pod to terminate gracefully, if negative, the default value specified in the pod will be used (default: -1)
  # drainTimeout: ""              # timeout after which the drain is aborted (default: 0, infinite time)
  # skipWaitForDeleteTimeout: ""  # when time is greater than zero, skip waiting for the pods whose deletion timestamp is older than N seconds while draining a node (default: 0)
  # prometheusUrl: ""             # Prometheus instance to probe for active alerts
  # rebootDays: []                # only reboot on these days (default [su,mo,tu,we,th,fr,sa])
  # rebootSentinel: ""            # path to file whose existence signals need to reboot (default "/var/run/reboot-required")
  # rebootSentinelCommand: ""     # command for which a successful run signals need to reboot (default ""). If non-empty, sentinel file will be ignored.
  # slackChannel: ""              # slack channel for reboot notfications
  # slackHookUrl: ""              # slack hook URL for reboot notfications
  # slackUsername: ""             # slack username for reboot notfications (default "kured")
  # notifyUrl: ""                 # notification URL with the syntax as follows: https://containrrr.dev/shoutrrr/services/overview/
  # messageTemplateDrain: ""      # slack message template when notifying about a node being drained (default "Draining node %s")
  # messageTemplateReboot: ""     # slack message template when notifying about a node being rebooted (default "Rebooted node %s")
  # messageTemplateUncordon: ""   # slack message template when notifying about a node being drained (default "Node %s rebooted & uncordoned successfully!")
  # startTime: ""                 # only reboot after this time of day (default "0:00")
  # timeZone: ""                  # time-zone to use (valid zones from "time" golang package)
  # annotateNodes: false          # enable 'weave.works/kured-reboot-in-progress' and 'weave.works/kured-most-recent-reboot-needed' node annotations to signify kured reboot operations
  # lockReleaseDelay: "5m"        # hold lock after reboot by this amount of time (default 0, disabled)
  # logFormat: "text"             # log format specified as text or json, defaults to text
  # preRebootNodeLabels: []       # labels to add to nodes before cordoning (default [])
  # postRebootNodeLabels: []      # labels to add to nodes after uncordoning (default [])
