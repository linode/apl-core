{{- if .Values.metrics.enabled}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "harbor.exporter" . }}
  labels:
{{ include "harbor.labels" . | indent 4 }}
    component: exporter
spec:
  replicas: {{ .Values.exporter.replicas }}
  selector:
    matchLabels:
{{ include "harbor.matchLabels" . | indent 6 }}
      component: exporter
  template:
    metadata:
      labels:
{{ include "harbor.labels" . | indent 8 }}
        component: exporter
      annotations:
{{- if .Values.exporter.podAnnotations }}
{{ toYaml .Values.exporter.podAnnotations | indent 8 }}
{{- end }}
    spec:
      securityContext:
        runAsUser: 10000
        fsGroup: 10000
{{- if .Values.exporter.serviceAccountName }}
      serviceAccountName: {{ .Values.exporter.serviceAccountName }}
{{- end -}}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: exporter
        image: {{ .Values.exporter.image.repository }}:{{ .Values.exporter.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.metrics.exporter.port }}
          initialDelaySeconds: 300
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.metrics.exporter.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
        args: ["-log-level", "{{ .Values.logLevel }}"]
        envFrom:
        - configMapRef:
            name: "{{ template "harbor.exporter" . }}-env"
        - secretRef:
            name: "{{ template "harbor.exporter" . }}"
{{- if .Values.exporter.resources }}
        resources:
{{ toYaml .Values.exporter.resources | indent 10 }}
{{- end }}
        ports:
        - containerPort: {{ template "harbor.core.containerPort" . }}
        volumeMounts:
        {{- if .Values.caBundleSecretName }}
{{ include "harbor.caBundleVolumeMount" . | indent 8 }}
        {{- end }}
      volumes:
      - name: config
        secret:
          secretName: "{{ template "harbor.exporter" . }}"
      {{- if .Values.internalTLS.enabled }}
      - name: exporter-internal-certs
        secret:
          secretName: {{ template "harbor.internalTLS.exporter.secretName" . }}
      {{- end }}
      {{- if .Values.caBundleSecretName }}
{{ include "harbor.caBundleVolume" . | indent 6 }}
      {{- end }}
    {{- with .Values.exporter.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.exporter.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.exporter.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{ end }}
