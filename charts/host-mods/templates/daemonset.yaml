apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "host-mods.fullname" . }}
  labels: {{- include "host-mods.chart-labels" . | nindent 4 }}
  annotations:
    policy.otomi.io/ignore: psp-host-filesystem,psp-host-security,psp-host-networking-ports
    policy.otomi.io/ignore.node-mod: psp-allowed-users,psp-privileged,psp-host-filesystem,psp-host-security
spec:
  selector:
    matchLabels: {{- include "host-mods.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "host-mods.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/scripts: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      hostPID: true
      hostNetwork: true
      {{- with .Values.imagePullsecrets }}
      imagePullsecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      priorityClassName: {{ .Values.priorityClassName }}
      serviceAccount: {{ include "host-mods.fullname" . }}
      initContainers:
        - name: node-mod
          command: ["nsenter"]
          args: ["--mount=/proc/1/ns/mnt", "--", "sh", "-c", "$(SETUP_SCRIPT)"]
          {{- with .Values.image }}
          image: {{ .repository }}:{{ .tag }}
          {{- end }}
          env:
            - name: TRUSTED_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ include "host-mods.fullname" . }}
                  key: ca.crt
            - name: SETUP_SCRIPT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "host-mods.fullname" . }}
                  key: setup.sh
            - name: REGISTRY_URL
              value: "{{ .Values.registryUrl }}"
            - name: CERT_DIR
              value: "{{ .Values.certDir }}"
            - name: UPDATE_CMD
              value: "{{ .Values.updateCmd }}"
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
          securityContext:
            runAsUser: 0
            privileged: true
      containers:
        - name: wait
          image: k8s.gcr.io/pause:3.1
          securityContext:
            runAsUser: 1000
          resources:
            limits:
              cpu: 50m
              memory: 64Mi
