{{- if eq .Values.config.existingSecret "" }}
{{- $fullName := include "falcosidekick.fullname" . -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "falcosidekick.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "falcosidekick.name" . }}
    helm.sh/chart: {{ include "falcosidekick.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: Opaque
data:
  # Slack Output
  SLACK_WEBHOOKURL: "{{ .Values.config.slack.webhookurl | b64enc }}"
  SLACK_OUTPUTFORMAT: "{{ .Values.config.slack.outputformat | b64enc }}"
  SLACK_FOOTER: "{{ .Values.config.slack.footer | b64enc }}"
  SLACK_ICON: "{{ .Values.config.slack.icon | b64enc }}"
  SLACK_USERNAME: "{{ .Values.config.slack.username | b64enc }}"
  SLACK_MINIMUMPRIORITY: "{{ .Values.config.slack.minimumpriority | b64enc }}"
  SLACK_MESSAGEFORMAT: "{{ .Values.config.slack.messageformat | b64enc }}"

  # RocketChat Output
  ROCKETCHAT_WEBHOOKURL: "{{ .Values.config.rocketchat.webhookurl | b64enc }}"
  ROCKETCHAT_OUTPUTFORMAT: "{{ .Values.config.rocketchat.outputformat | b64enc }}"
  ROCKETCHAT_ICON: "{{ .Values.config.rocketchat.icon | b64enc }}"
  ROCKETCHAT_USERNAME: "{{ .Values.config.rocketchat.username | b64enc }}"
  ROCKETCHAT_MINIMUMPRIORITY: "{{ .Values.config.rocketchat.minimumpriority | b64enc }}"
  ROCKETCHAT_MESSAGEFORMAT: "{{ .Values.config.rocketchat.messageformat | b64enc }}"
  ROCKETCHAT_MUTUALTLS: "{{ .Values.config.rocketchat.mutualtls | printf "%t" | b64enc }}"
  ROCKETCHAT_CHECKCERT: "{{ .Values.config.rocketchat.checkcert | printf "%t" | b64enc }}"

  # Mattermost Output
  MATTERMOST_WEBHOOKURL: "{{ .Values.config.mattermost.webhookurl | b64enc }}"
  MATTERMOST_OUTPUTFORMAT: "{{ .Values.config.mattermost.outputformat | b64enc }}"
  MATTERMOST_FOOTER: "{{ .Values.config.mattermost.footer | b64enc }}"
  MATTERMOST_ICON: "{{ .Values.config.mattermost.icon | b64enc }}"
  MATTERMOST_USERNAME: "{{ .Values.config.mattermost.username | b64enc }}"
  MATTERMOST_MINIMUMPRIORITY: "{{ .Values.config.mattermost.minimumpriority | b64enc }}"
  MATTERMOST_MESSAGEFORMAT: "{{ .Values.config.mattermost.messageformat | b64enc }}"
  MATTERMOST_MUTUALTLS: "{{ .Values.config.mattermost.mutualtls | printf "%t" | b64enc }}"
  MATTERMOST_CHECKCERT: "{{ .Values.config.mattermost.checkcert | printf "%t" | b64enc }}"

  # Teams Output
  TEAMS_WEBHOOKURL: "{{ .Values.config.teams.webhookurl | b64enc }}"
  TEAMS_OUTPUTFORMAT: "{{ .Values.config.teams.outputformat | b64enc }}"
  TEAMS_ACTIVITYIMAGE: "{{ .Values.config.teams.activityimage | b64enc }}"
  TEAMS_MINIMUMPRIORITY: "{{ .Values.config.teams.minimumpriority | b64enc }}"

  # Datadog Output
  DATADOG_APIKEY: "{{ .Values.config.datadog.apikey | b64enc }}"
  DATADOG_HOST: "{{ .Values.config.datadog.host | b64enc }}"
  DATADOG_MINIMUMPRIORITY: "{{ .Values.config.datadog.minimumpriority | b64enc }}"

  # AlertManager Output
  ALERTMANAGER_HOSTPORT: "{{ .Values.config.alertmanager.hostport | b64enc }}"
  ALERTMANAGER_ENDPOINT: "{{ .Values.config.alertmanager.endpoint | b64enc }}"
  ALERTMANAGER_EXPIRESAFTER: "{{ .Values.config.alertmanager.expireafter | b64enc }}"
  ALERTMANAGER_MINIMUMPRIORITY: "{{ .Values.config.alertmanager.minimumpriority | b64enc }}"
  ALERTMANAGER_MUTUALTLS: "{{ .Values.config.alertmanager.mutualtls | printf "%t" | b64enc }}"
  ALERTMANAGER_CHECKCERT: "{{ .Values.config.alertmanager.checkcert | printf "%t" | b64enc }}"

  # InfluxDB Output
  INFLUXDB_USER: "{{ .Values.config.influxdb.user | b64enc }}"
  INFLUXDB_PASSWORD: "{{ .Values.config.influxdb.password | b64enc }}"
  INFLUXDB_HOSTPORT: "{{ .Values.config.influxdb.hostport | b64enc }}"
  INFLUXDB_MINIMUMPRIORITY: "{{ .Values.config.influxdb.minimumpriority | b64enc }}"
  INFLUXDB_DATABASE: "{{ .Values.config.influxdb.database | b64enc }}"
  INFLUXDB_MUTUALTLS: "{{ .Values.config.influxdb.mutualtls | printf "%t" | b64enc }}"
  INFLUXDB_CHECKCERT: "{{ .Values.config.influxdb.checkcert | printf "%t" | b64enc }}"

  # AWS Output
  AWS_ACCESSKEYID: "{{ .Values.config.aws.accesskeyid | b64enc }}"
  AWS_SECRETACCESSKEY: "{{ .Values.config.aws.secretaccesskey | b64enc }}"
  AWS_REGION: "{{ .Values.config.aws.region | b64enc }}"
  AWS_LAMBDA_FUNCTIONNAME: "{{ .Values.config.aws.lambda.functionname | b64enc }}"
  AWS_LAMBDA_MINIMUMPRIORITY: "{{ .Values.config.aws.lambda.minimumpriority | b64enc }}"
  AWS_CLOUDWATCHLOGS_LOGGROUP: "{{ .Values.config.aws.cloudwatchlogs.loggroup | b64enc }}"
  AWS_CLOUDWATCHLOGS_LOGSTREAM: "{{ .Values.config.aws.cloudwatchlogs.logstream | b64enc }}"
  AWS_CLOUDWATCHLOGS_MINIMUMPRIORITY: "{{ .Values.config.aws.cloudwatchlogs.minimumpriority | b64enc }}"
  AWS_SNS_TOPICARN: "{{ .Values.config.aws.sns.topicarn | b64enc }}"
  AWS_SNS_RAWJSON: "{{ .Values.config.aws.sns.rawjson| printf "%t" | b64enc }}"
  AWS_SNS_MINIMUMPRIORITY: "{{ .Values.config.aws.sns.minimumpriority | b64enc }}"
  AWS_SQS_URL: "{{ .Values.config.aws.sqs.url | b64enc }}"
  AWS_SQS_MINIMUMPRIORITY: "{{ .Values.config.aws.sqs.minimumpriority | b64enc }}"
  AWS_S3_BUCKET: "{{ .Values.config.aws.s3.bucket | b64enc }}"
  AWS_S3_PREFIX: "{{ .Values.config.aws.s3.prefix | b64enc }}"
  AWS_S3_MINIMUMPRIORITY: "{{ .Values.config.aws.s3.minimumpriority | b64enc }}"
  AWS_KINESIS_STREAMNAME: "{{ .Values.config.aws.kinesis.streamname | b64enc }}"
  AWS_KINESIS_MINIMUMPRIORITY: "{{ .Values.config.aws.kinesis.minimumpriority | b64enc }}"

  # SMTP Output
  SMTP_USER: "{{ .Values.config.smtp.user | b64enc }}"
  SMTP_PASSWORD: "{{ .Values.config.smtp.password | b64enc }}"
  SMTP_HOSTPORT: "{{ .Values.config.smtp.hostport | b64enc }}"
  SMTP_FROM: "{{ .Values.config.smtp.from | b64enc }}"
  SMTP_TO: "{{ .Values.config.smtp.to | b64enc }}"
  SMTP_OUTPUTFORMAT: "{{ .Values.config.smtp.outputformat | b64enc }}"
  SMTP_MINIMUMPRIORITY: "{{ .Values.config.smtp.minimumpriority | b64enc }}"

  # OpsGenie Output
  OPSGENIE_APIKEY: "{{ .Values.config.opsgenie.apikey | b64enc }}"
  OPSGENIE_REGION: "{{ .Values.config.opsgenie.region | b64enc }}"
  OPSGENIE_MINIMUMPRIORITY: "{{ .Values.config.opsgenie.minimumpriority | b64enc }}"
  OPSGENIE_MUTUALTLS: "{{ .Values.config.opsgenie.mutualtls | printf "%t" | b64enc }}"
  OPSGENIE_CHECKCERT: "{{ .Values.config.opsgenie.checkcert | printf "%t" | b64enc }}"

  # Discord Output
  DISCORD_WEBHOOKURL: "{{ .Values.config.discord.webhookurl | b64enc }}"
  DISCORD_ICON: "{{ .Values.config.discord.icon | b64enc }}"
  DISCORD_MINIMUMPRIORITY: "{{ .Values.config.discord.minimumpriority | b64enc }}"

  # GCP Output
  GCP_CREDENTIALS: "{{ .Values.config.gcp.credentials | b64enc }}"
  GCP_PUBSUB_PROJECTID: "{{ .Values.config.gcp.pubsub.projectid | b64enc }}"
  GCP_PUBSUB_TOPIC: "{{ .Values.config.gcp.pubsub.topic | b64enc }}"
  GCP_PUBSUB_MINIMUMPRIORITY: "{{ .Values.config.gcp.pubsub.minimumpriority | b64enc }}"
  GCP_STORAGE_BUCKET: "{{ .Values.config.gcp.storage.bucket | b64enc }}"
  GCP_STORAGE_PREFIX: "{{ .Values.config.gcp.storage.prefix | b64enc }}"
  GCP_STORAGE_MINIMUMPRIORITY: "{{ .Values.config.gcp.storage.minimumpriority | b64enc }}"
  GCP_CLOUDFUNCTIONS_NAME: "{{ .Values.config.gcp.cloudfunctions.name | b64enc }}"
  GCP_CLOUDFUNCTIONS_MINIMUMPRIORITY: "{{ .Values.config.gcp.cloudfunctions.minimumpriority | b64enc }}"
  GCP_CLOUDRUN_ENDPOINT: "{{ .Values.config.gcp.cloudrun.endpoint | b64enc }}"
  GCP_CLOUDRUN_JWT: "{{ .Values.config.gcp.cloudrun.jwt | b64enc }}"
  GCP_CLOUDRUN_MINIMUMPRIORITY: "{{ .Values.config.gcp.cloudrun.minimumpriority | b64enc }}"

  # GoogleChat Output
  GOOGLECHAT_WEBHOOKURL: "{{ .Values.config.googlechat.webhookurl | b64enc }}"
  GOOGLECHAT_OUTPUTFORMAT: "{{ .Values.config.googlechat.outputformat | b64enc }}"
  GOOGLECHAT_MINIMUMPRIORITY: "{{ .Values.config.googlechat.minimumpriority | b64enc }}"
  GOOGLECHAT_MESSAGEFORMAT: "{{ .Values.config.googlechat.messageformat | b64enc }}"

  # ElasticSearch Output
  ELASTICSEARCH_HOSTPORT: "{{ .Values.config.elasticsearch.hostport | b64enc }}"
  ELASTICSEARCH_INDEX: "{{ .Values.config.elasticsearch.index | b64enc }}"
  ELASTICSEARCH_TYPE: "{{ .Values.config.elasticsearch.type | b64enc }}"
  ELASTICSEARCH_MINIMUMPRIORITY: "{{ .Values.config.elasticsearch.minimumpriority | b64enc }}"
  ELASTICSEARCH_MUTUALTLS: "{{ .Values.config.elasticsearch.mutualtls | printf "%t" | b64enc }}"
  ELASTICSEARCH_CHECKCERT: "{{ .Values.config.elasticsearch.checkcert | printf "%t" | b64enc }}"
  ELASTICSEARCH_USERNAME: "{{ .Values.config.elasticsearch.username | b64enc }}"
  ELASTICSEARCH_PASSWORD: "{{ .Values.config.elasticsearch.password | b64enc }}"

  # Loki Output
  LOKI_HOSTPORT: "{{ .Values.config.loki.hostport | b64enc }}"
  LOKI_ENDPOINT: "{{ .Values.config.loki.endpoint | b64enc }}"
  LOKI_TENANT: "{{ .Values.config.loki.tenant | b64enc }}"
  LOKI_EXTRALABELS: "{{ .Values.config.loki.extralabels | b64enc }}"
  LOKI_MINIMUMPRIORITY: "{{ .Values.config.loki.minimumpriority | b64enc }}"
  LOKI_MUTUALTLS: "{{ .Values.config.loki.mutualtls | printf "%t" | b64enc }}"
  LOKI_CHECKCERT: "{{ .Values.config.loki.checkcert | printf "%t" | b64enc }}"

  # Prometheus Output
  PROMETHEUS_EXTRALABELS: "{{ .Values.config.loki.extralabels | b64enc }}"

  # Nats Output
  NATS_HOSTPORT: "{{ .Values.config.nats.hostport | b64enc }}"
  NATS_MINIMUMPRIORITY: "{{ .Values.config.nats.minimumpriority | b64enc }}"
  NATS_MUTUALTLS: "{{ .Values.config.nats.mutualtls | printf "%t" | b64enc }}"
  NATS_CHECKCERT: "{{ .Values.config.nats.checkcert | printf "%t" | b64enc }}"

  # Stan Output
  STAN_HOSTPORT: "{{ .Values.config.stan.hostport | b64enc }}"
  STAN_CLUSTERID: "{{ .Values.config.stan.clusterid | b64enc }}"
  STAN_CLIENTID: "{{ .Values.config.stan.clientid | b64enc }}"
  STAN_MINIMUMPRIORITY: "{{ .Values.config.stan.minimumpriority | b64enc }}"
  STAN_MUTUALTLS: "{{ .Values.config.stan.mutualtls | printf "%t" | b64enc }}"
  STAN_CHECKCERT: "{{ .Values.config.stan.checkcert | printf "%t" | b64enc }}"

  # Statsd
  STATSD_FORWARDER: "{{ .Values.config.statsd.forwarder | b64enc }}"
  STATSD_NAMESPACE: "{{ .Values.config.statsd.namespace | b64enc }}"

  # Dogstatsd
  DOGSTATSD_FORWARDER: "{{ .Values.config.dogstatsd.forwarder | b64enc }}"
  DOGSTATSD_NAMESPACE: "{{ .Values.config.dogstatsd.namespace | b64enc }}"
  DOGSTATSD_TAGS: "{{ .Values.config.dogstatsd.tags | b64enc }}"

  # WebHook Output
  WEBHOOK_ADDRESS: "{{ .Values.config.webhook.address | b64enc }}"
  WEBHOOK_CUSTOMHEADERS: "{{ .Values.config.webhook.customHeaders | b64enc }}"
  WEBHOOK_MINIMUMPRIORITY: "{{ .Values.config.webhook.minimumpriority | b64enc }}"
  WEBHOOK_MUTUALTLS: "{{ .Values.config.webhook.mutualtls | printf "%t" | b64enc }}"
  WEBHOOK_CHECKCERT: "{{ .Values.config.webhook.checkcert | printf "%t" | b64enc }}"

  # Azure Output
  AZURE_EVENTHUB_NAME: "{{ .Values.config.azure.eventHub.name | b64enc }}"
  AZURE_EVENTHUB_NAMESPACE: "{{ .Values.config.azure.eventHub.namespace | b64enc }}"
  AZURE_EVENTHUB_MINIMUMPRIORITY: "{{ .Values.config.azure.eventHub.minimumpriority | b64enc }}"

  # Kafka Output
  KAFKA_HOSTPORT: "{{ .Values.config.kafka.hostport | b64enc }}"
  KAFKA_TOPIC: "{{ .Values.config.kafka.topic | b64enc }}"
  KAFKA_MINIMUMPRIORITY: "{{ .Values.config.kafka.minimumpriority | b64enc }}"

  # PagerDuty Output
  PAGERDUTY_ROUTINGKEY: "{{ .Values.config.pagerduty.routingkey | b64enc }}"
  PAGERDUTY_MINIMUMPRIORITY: "{{ .Values.config.pagerduty.minimumpriority | b64enc }}"

  # Kubeless Output
  KUBELESS_FUNCTION: "{{ .Values.config.kubeless.function | b64enc }}"
  KUBELESS_NAMESPACE: "{{ .Values.config.kubeless.namespace | b64enc }}"
  KUBELESS_PORT: "{{ .Values.config.kubeless.port | toString | b64enc }}"
  KUBELESS_MINIMUMPRIORITY: "{{ .Values.config.kubeless.minimumpriority | b64enc }}"
  KUBELESS_MUTUALTLS: "{{ .Values.config.kubeless.mutualtls | printf "%t" | b64enc }}"
  KUBELESS_CHECKCERT: "{{ .Values.config.kubeless.checkcert | printf "%t" | b64enc }}"

  # OpenFaaS
  OPENFAAS_GATEWAYNAMESPACE: "{{ .Values.config.openfaas.gatewaynamespace | b64enc }}"
  OPENFAAS_GATEWAYSERVICE: "{{ .Values.config.openfaas.gatewayservice | b64enc }}"
  OPENFAAS_FUNCTIONNAME: "{{ .Values.config.openfaas.functionname | b64enc }}"
  OPENFAAS_FUNCTIONNAMESPACE: "{{ .Values.config.openfaas.functionnamespace | b64enc }}"
  OPENFAAS_GATEWAYPORT: "{{ .Values.config.openfaas.gatewayport | toString | b64enc }}"
  OPENFAAS_MINIMUMPRIORITY: "{{ .Values.config.openfaas.minimumpriority | b64enc }}"
  OPENFAAS_MUTUALTLS: "{{ .Values.config.openfaas.mutualtls | printf "%t" | b64enc }}"
  OPENFAAS_CHECKCERT: "{{ .Values.config.openfaas.checkcert | printf "%t" | b64enc }}"

  # Cloud Events Output
  CLOUDEVENTS_ADDRESS: "{{ .Values.config.cloudevents.address | b64enc }}"
  CLOUDEVENTS_EXTENSION: "{{ .Values.config.cloudevents.extension | b64enc }}"
  CLOUDEVENTS_MINIMUMPRIORITY: "{{ .Values.config.cloudevents.minimumpriority | b64enc }}"

  # RabbitMQ Output
  RABBITMQ_URL: "{{ .Values.config.rabbitmq.url | b64enc}}"
  RABBITMQ_QUEUE: "{{ .Values.config.rabbitmq.queue | b64enc}}"
  RABBITMQ_MINIMUMPRIORITY: "{{ .Values.config.rabbitmq.minimumpriority | b64enc}}"

  # Wavefront Output
  WAVEFRONT_ENDPOINTTYPE: "{{ .Values.config.wavefront.endpointtype | b64enc}}"
  WAVEFRONT_ENDPOINTHOST: "{{ .Values.config.wavefront.endpointhost | b64enc}}"
  WAVEFRONT_ENDPOINTTOKEN: "{{ .Values.config.wavefront.endpointtoken | b64enc}}"
  WAVEFRONT_ENDPOINTMETRICPORT: "{{ .Values.config.wavefront.endpointmetricport | toString | b64enc}}"
  WAVEFRONT_FLUSHINTERVALSECONDS: "{{ .Values.config.wavefront.flushintervalseconds | toString | b64enc}}"
  WAVEFRONT_BATCHSIZE: "{{ .Values.config.wavefront.batchsize | toString | b64enc}}"
  WAVEFRONT_METRICNAME: "{{ .Values.config.wavefront.metricname | b64enc}}"
  WAVEFRONT_MINIMUMPRIORITY: "{{ .Values.config.wavefront.minimumpriority | b64enc}}"

  # Grafana Output
  GRAFANA_HOSTPORT: "{{ .Values.config.grafana.hostport | b64enc}}"
  GRAFANA_APIKEY: "{{ .Values.config.grafana.apikey | b64enc}}"
  GRAFANA_DASHBOARDID: "{{ .Values.config.grafana.dashboardid | toString | b64enc}}"
  GRAFANA_PANELID: "{{ .Values.config.grafana.panelid | toString | b64enc}}"
  GRAFANA_ALLFIELDSASTAGS: "{{ .Values.config.grafana.allfieldsastags | printf "%t" | b64enc}}"
  GRAFANA_MUTUALTLS: "{{ .Values.config.grafana.mutualtls | printf "%t" | b64enc}}"
  GRAFANA_CHECKCERT: "{{ .Values.config.grafana.checkcert | printf "%t" | b64enc}}"
  GRAFANA_MINIMUMPRIORITY: "{{ .Values.config.grafana.minimumpriority | b64enc}}"

  # Fission Output
  FISSION_FUNCTION: "{{ .Values.config.fission.function | b64enc}}"
  FISSION_ROUTERNAMESPACE: "{{ .Values.config.fission.routernamespace | b64enc}}"
  FISSION_ROUTERSERVICE: "{{ .Values.config.fission.routerservice | b64enc}}"
  FISSION_ROUTERPORT: "{{ .Values.config.fission.routerport | toString | b64enc}}"
  FISSION_MINIMUMPRIORITY: "{{ .Values.config.fission.minimumpriority| b64enc}}"
  FISSION_MUTUALTLS: "{{ .Values.config.fission.mutualtls | printf "%t" | b64enc}}"
  FISSION_CHECKCERT: "{{ .Values.config.fission.checkcert | printf "%t" | b64enc}}"

  # Yandex Output
  YANDEX_ACCESSKEYID:  "{{ .Values.config.yandex.accesskeyid | b64enc}}"
  YANDEX_SECRETACCESSKEY: "{{ .Values.config.yandex.secretaccesskey | b64enc}}"
  YANDEX_REGION: "{{ .Values.config.yandex.region | b64enc}}"
  YANDEX_S3_ENDPOINT: "{{ .Values.config.yandex.s3.endpoint | b64enc}}"
  YANDEX_S3_BUCKET: "{{ .Values.config.yandex.s3.bucket | b64enc}}"
  YANDEX_S3_PREFIX: "{{ .Values.config.yandex.s3.prefix | b64enc}}"
  YANDEX_S3_MINIMUMPRIORITY: "{{ .Values.config.yandex.s3.minimumpriority | b64enc}}"

  # KafkaRest Output
  KAFKAREST_ADDRESS: "{{ .Values.config.kafkarest.address | b64enc}}"
  KAFKAREST_VERSION: "{{ .Values.config.kafkarest.version | toString | b64enc}}"
  KAFKAREST_MINIMUMPRIORITY : "{{ .Values.config.kafkarest.minimumpriority | b64enc}}"
  KAFKAREST_MUTUALTLS : "{{ .Values.config.kafkarest.mutualtls | printf "%t" | b64enc}}"
  KAFKAREST_CHECKCERT : "{{ .Values.config.kafkarest.checkcert | printf "%t" | b64enc}}"

  # Syslog
  SYSLOG_HOST: "{{ .Values.config.syslog.host | b64enc}}"
  SYSLOG_PORT: "{{ .Values.config.syslog.port | b64enc}}"
  SYSLOG_PROTOCOL: "{{ .Values.config.syslog.protocol | b64enc}}"
  SYSLOG_MINIMUMPRIORITY : "{{ .Values.config.syslog.minimumpriority | b64enc}}"

  # Zoho Cliq
  CLIQ_WEBHOOKURL: "{{ .Values.config.cliq.webhookurl | b64enc}}"
  CLIQ_ICON: "{{ .Values.config.cliq.icon | b64enc}}"
  CLIQ_USEEMOJI: "{{ .Values.config.cliq.useemoji | printf "%t" | b64enc}}"
  CLIQ_OUTPUTFORMAT: "{{ .Values.config.cliq.outputformat | b64enc}}"
  CLIQ_MESSAGEFORMAT: "{{ .Values.config.cliq.messageformat | b64enc}}"
  CLIQ_MINIMUMPRIORITY : "{{ .Values.config.cliq.minimumpriority | b64enc}}"

  # Policy Reporter
  POLICYREPORT_ENABLED: "{{ .Values.config.policyreport.enabled | printf "%t"| b64enc}}"
  POLICYREPORT_KUBECONFIG: "{{ .Values.config.policyreport.kubeconfig | b64enc}}"
  POLICYREPORT_MAXEVENTS: "{{ .Values.config.policyreport.maxevents | toString | b64enc}}"
  POLICYREPORT_PRUNEBYPRIORITY: "{{ .Values.config.policyreport.prunebypriority | printf "%t" | b64enc}}"
  POLICYREPORT_MINIMUMPRIORITY : "{{ .Values.config.policyreport.minimumpriority | b64enc}}"

  # WebUI Output
  {{- if .Values.webui.enabled -}}
  {{ $weburl := printf "http://%s-ui:2802" (include "falcosidekick.fullname" .) }}
  WEBUI_URL: "{{ $weburl | b64enc }}"
  {{- end }}
{{- end }}
