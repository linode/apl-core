{{- if .Values.kubeclarity.ingress.enabled -}}
{{- $kubeVersion := .Capabilities.KubeVersion.Version }}
{{- $serviceName := include "kubeclarity.name" . -}}
{{- $servicePort := 8080 -}}
{{ if semverCompare ">= 1.19.0-0" $kubeVersion }}
apiVersion: networking.k8s.io/v1
{{ else if .Capabilities.APIVersions.Has "networking.k8s.io/v1beta1" }}
apiVersion: networking.k8s.io/v1beta1
{{ else }}
apiVersion: extensions/v1beta1
{{ end }}
kind: Ingress
metadata:
  name: {{ include "kubeclarity.name" . }}
  namespace: '{{ .Release.Namespace }}'
  labels:
    {{ include "kubeclarity.labels" . }}
  {{- template "kubeclarity.ingress.annotations" . }}
spec:
{{- if .Values.kubeclarity.ingress.tls }}
  tls:
  {{- range .Values.kubeclarity.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}
{{- if .Values.kubeclarity.ingress.ingressClassName }}
  ingressClassName: {{ .Values.kubeclarity.ingress.ingressClassName }}
{{- end }}
  rules:
  {{- range .Values.kubeclarity.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
        {{- range (.paths | default (list (dict "pathType" "Prefix" "path" "/"))) }}
          - path: {{ .path -}}
            {{- if semverCompare ">= 1.19.0-0" $kubeVersion }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">= 1.19.0-0" $kubeVersion }}
              service:
                name: {{ $serviceName }}
                port:
                  number: {{ $servicePort }}
              {{ else }}
              serviceName: {{ $serviceName }}
              servicePort: {{ $servicePort }}
              {{ end }}
        {{- end }}
  {{- end }}
{{- end }}
